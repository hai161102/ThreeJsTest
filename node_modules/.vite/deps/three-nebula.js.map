{
  "version": 3,
  "sources": ["../../uuid/lib/rng-browser.js", "../../uuid/lib/bytesToUuid.js", "../../uuid/v1.js", "../../lodash/_baseRandom.js", "../../lodash/_arraySample.js", "../../lodash/_arrayMap.js", "../../lodash/_baseValues.js", "../../lodash/_baseTimes.js", "../../lodash/_freeGlobal.js", "../../lodash/_root.js", "../../lodash/_Symbol.js", "../../lodash/_getRawTag.js", "../../lodash/_objectToString.js", "../../lodash/_baseGetTag.js", "../../lodash/isObjectLike.js", "../../lodash/_baseIsArguments.js", "../../lodash/isArguments.js", "../../lodash/isArray.js", "../../lodash/stubFalse.js", "../../lodash/isBuffer.js", "../../lodash/_isIndex.js", "../../lodash/isLength.js", "../../lodash/_baseIsTypedArray.js", "../../lodash/_baseUnary.js", "../../lodash/_nodeUtil.js", "../../lodash/isTypedArray.js", "../../lodash/_arrayLikeKeys.js", "../../lodash/_isPrototype.js", "../../lodash/_overArg.js", "../../lodash/_nativeKeys.js", "../../lodash/_baseKeys.js", "../../lodash/isObject.js", "../../lodash/isFunction.js", "../../lodash/isArrayLike.js", "../../lodash/keys.js", "../../lodash/values.js", "../../lodash/_baseSample.js", "../../lodash/sample.js", "../../lodash/isNumber.js", "../../three-nebula/src/behaviour/types.js", "../../three-nebula/src/initializer/types.js", "../../three-nebula/src/zone/types.js", "../../three-nebula/src/renderer/types.js", "../../three-nebula/src/constants/index.js", "../../three-nebula/src/ease/index.js", "../../three-nebula/src/core/constants.js", "../../@babel/runtime/helpers/esm/typeof.js", "../../@babel/runtime/helpers/esm/toPrimitive.js", "../../@babel/runtime/helpers/esm/toPropertyKey.js", "../../@babel/runtime/helpers/esm/defineProperty.js", "../../three-nebula/src/utils/ColorUtil.js", "../../three-nebula/src/utils/PUID.js", "../../three-nebula/src/core/three/Math.js", "../../three-nebula/src/core/three/Quaternion.js", "../../three-nebula/src/core/three/Vector3.js", "../../three-nebula/src/core/three/Matrix4.js", "../../three-nebula/src/core/three/Euler.js", "../../three-nebula/src/core/three/constants.js", "../../three-nebula/src/utils/THREEUtil.js", "../../three-nebula/src/utils/Util.js", "../../three-nebula/src/utils/uid.js", "../../three-nebula/src/utils/index.js", "../../three-nebula/src/math/MathUtils.js", "../../three-nebula/src/math/types.js", "../../three-nebula/src/math/Span.js", "../../three-nebula/src/math/ArraySpan.js", "../../three-nebula/src/math/ColorSpan.js", "../../three-nebula/src/math/Box.js", "../../three-nebula/src/math/constants.js", "../../three-nebula/src/math/integration.js", "../../three-nebula/src/math/Vector3D.js", "../../three-nebula/src/math/Polar3D.js", "../../three-nebula/src/core/types.js", "../../three-nebula/src/core/Particle.js", "../../three-nebula/src/core/Pool.js", "../../three-nebula/src/events/EventDispatcher.js", "../../three-nebula/src/events/constants.js", "../../three-nebula/src/events/index.js", "../../three-nebula/src/initializer/index.js", "../../three-nebula/src/initializer/Initializer.js", "../../three-nebula/src/initializer/Body.js", "../../three-nebula/src/initializer/constants.js", "../../three-nebula/src/initializer/BodySprite.js", "../../three-nebula/src/initializer/InitializerUtil.js", "../../three-nebula/src/initializer/Life.js", "../../three-nebula/src/initializer/Mass.js", "../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../three-nebula/src/zone/index.js", "../../three-nebula/src/zone/Zone.js", "../../three-nebula/src/zone/BoxZone.js", "../../three-nebula/src/zone/LineZone.js", "../../three-nebula/src/zone/MeshZone.js", "../../three-nebula/src/zone/PointZone.js", "../../three-nebula/src/zone/ScreenZone.js", "../../three-nebula/src/zone/SphereZone.js", "../../three-nebula/src/initializer/Position.js", "../../three-nebula/src/initializer/Radius.js", "../../three-nebula/src/initializer/Rate.js", "../../three-nebula/src/initializer/Texture.js", "../../three-nebula/src/initializer/Velocity/Velocity.js", "../../three-nebula/src/initializer/Velocity/PolarVelocity.js", "../../three-nebula/src/initializer/Velocity/RadialVelocity.js", "../../three-nebula/src/initializer/Velocity/VectorVelocity.js", "../../three-nebula/src/emitter/constants.js", "../../three-nebula/src/emitter/Emitter.js", "../../three-nebula/src/emitter/types.js", "../../three-nebula/src/behaviour/index.js", "../../three-nebula/src/behaviour/constants.js", "../../three-nebula/src/behaviour/Behaviour.js", "../../three-nebula/src/behaviour/Alpha.js", "../../three-nebula/src/behaviour/Attraction.js", "../../three-nebula/src/behaviour/Collision.js", "../../three-nebula/src/behaviour/Color.js", "../../three-nebula/src/behaviour/CrossZone.js", "../../three-nebula/src/behaviour/Force.js", "../../three-nebula/src/behaviour/Gravity.js", "../../three-nebula/src/behaviour/RandomDrift.js", "../../three-nebula/src/behaviour/Repulsion.js", "../../three-nebula/src/behaviour/Rotate.js", "../../three-nebula/src/behaviour/Scale.js", "../../three-nebula/src/behaviour/Spring.js", "../../three-nebula/src/core/fromJSON.js", "../../three-nebula/src/core/fromJSONAsync.js", "../../three-nebula/src/core/System.js", "../../three-nebula/src/debug/constants.js", "../../three-nebula/src/debug/Debug.js", "../../three-nebula/src/debug/log.js", "../../three-nebula/src/emitter/FollowEmitter.js", "../../three-nebula/src/renderer/BaseRenderer.js", "../../three-nebula/src/renderer/CustomRenderer.js", "../../three-nebula/src/renderer/MeshRenderer.js", "../../three-nebula/src/renderer/SpriteRenderer.js", "../../three-nebula/src/renderer/GPURenderer/common/ParticleBuffer/constants.js", "../../three-nebula/src/renderer/GPURenderer/common/constants.js", "../../three-nebula/src/renderer/GPURenderer/common/stores/Target.js", "../../three-nebula/src/renderer/GPURenderer/common/stores/UniqueList.js", "../../three-nebula/src/renderer/GPURenderer/common/ParticleBuffer/index.js", "../../three-nebula/src/renderer/GPURenderer/common/TextureAtlas/constants.js", "../../potpack/index.mjs", "../../three-nebula/src/renderer/GPURenderer/common/TextureAtlas/index.js", "../../three-nebula/src/renderer/GPURenderer/Desktop/shaders/fragmentShader.js", "../../three-nebula/src/renderer/GPURenderer/common/shaders/constants.js", "../../three-nebula/src/renderer/GPURenderer/Desktop/shaders/vertexShader.js", "../../three-nebula/src/renderer/GPURenderer/Desktop/index.js", "../../three-nebula/src/renderer/GPURenderer/Mobile/shaders/fragmentShader.js", "../../three-nebula/src/renderer/GPURenderer/Mobile/shaders/vertexShader.js", "../../three-nebula/src/renderer/GPURenderer/Mobile/index.js", "../../three-nebula/src/renderer/GPURenderer/index.js", "../../three-nebula/src/index.js"],
  "sourcesContent": ["// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n", "var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nmodule.exports = arraySample;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n", "var arraySample = require('./_arraySample'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nmodule.exports = baseSample;\n", "var arraySample = require('./_arraySample'),\n    baseSample = require('./_baseSample'),\n    isArray = require('./isArray');\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nmodule.exports = sample;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "export const BEHAVIOUR_TYPE_ABSTRACT = 'Behaviour';\nexport const BEHAVIOUR_TYPE_ALPHA = 'Alpha';\nexport const BEHAVIOUR_TYPE_ATTRACTION = 'Attraction';\nexport const BEHAVIOUR_TYPE_COLLISION = 'Collision';\nexport const BEHAVIOUR_TYPE_COLOR = 'Color';\nexport const BEHAVIOUR_TYPE_CROSS_ZONE = 'CrossZone';\nexport const BEHAVIOUR_TYPE_FORCE = 'Force';\nexport const BEHAVIOUR_TYPE_GRAVITY = 'Gravity';\nexport const BEHAVIOUR_TYPE_RANDOM_DRIFT = 'RandomDrift';\nexport const BEHAVIOUR_TYPE_REPULSION = 'Repulsion';\nexport const BEHAVIOUR_TYPE_ROTATE = 'Rotate';\nexport const BEHAVIOUR_TYPE_SCALE = 'Scale';\nexport const BEHAVIOUR_TYPE_SPRING = 'Spring';\n", "export const INITIALIZER_TYPE_ABSTRACT = 'Initializer';\nexport const INITIALIZER_TYPE_BODY = 'Body';\nexport const INITIALIZER_TYPE_BODY_SPRITE = 'BodySprite';\nexport const INITIALIZER_TYPE_TEXTURE = 'Texture';\nexport const INITIALIZER_TYPE_LIFE = 'Life';\nexport const INITIALIZER_TYPE_MASS = 'Mass';\nexport const INITIALIZER_TYPE_POSITION = 'Position';\nexport const INITIALIZER_TYPE_RADIUS = 'Radius';\nexport const INITIALIZER_TYPE_ZONE = 'Zone';\nexport const INITIALIZER_TYPE_VECTOR_VELOCITY = 'VectorVelocity';\nexport const INITIALIZER_TYPE_POLAR_VELOCITY = 'PolarVelocity';\nexport const INITIALIZER_TYPE_RADIAL_VELOCITY = 'RadialVelocity';\nexport const INITIALIZER_TYPE_RATE = 'Rate';\nexport const INITIALIZER_TYPES_THAT_REQUIRE_THREE = [\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_TEXTURE,\n];\n", "export const ZONE_TYPE_ABSTRACT = 'Zone';\nexport const ZONE_TYPE_BOX = 'BoxZone';\nexport const ZONE_TYPE_LINE = 'LineZone';\nexport const ZONE_TYPE_MESH = 'MeshZone';\nexport const ZONE_TYPE_POINT = 'PointZone';\nexport const ZONE_TYPE_SCREEN = 'ScreenZone';\nexport const ZONE_TYPE_SPHERE = 'SphereZone';\n", "export const RENDERER_TYPE_BASE = 'BaseRenderer';\nexport const RENDERER_TYPE_CUSTOM = 'CustomRenderer';\nexport const RENDERER_TYPE_SPRITE = 'SpriteRenderer';\nexport const RENDERER_TYPE_MESH = 'MeshRenderer';\nexport const RENDERER_TYPE_GPU = 'GPURenderer';\nexport const RENDERER_TYPE_GPU_MOBILE = 'MobileGPURenderer';\nexport const RENDERER_TYPE_GPU_DESKTOP = 'DesktopGPURenderer';\n", "export const PI = 3.142;\n\n/**\n * The max particle number in pool.\n *\n * @const {integer}\n */\nexport const POOL_MAX = 500;\nexport const TIME_STEP = 60;\nexport const DR = PI / 180;\n\n/**\n * 1:100\n *\n * @const {integer}\n */\nexport const MEASURE = 100;\nexport const EULER = 'euler';\nexport const RK2 = 'runge-kutta2';\nexport const RK4 = 'runge-kutta4';\nexport const VERLET = 'verlet';\nexport const BIND_EMITTER_EVENT = false;\n\nexport const __DEV__ = () => {\n  if (!process) {\n    return false;\n  }\n\n  if (!process.env) {\n    return false;\n  }\n\n  if (!process.env.NODE_ENV) {\n    return false;\n  }\n\n  if (process.env.NODE_ENV !== 'development') {\n    return false;\n  }\n\n  return true;\n};\n", "import { PI } from '../constants';\n\n/**\n * The Ease class provides a collection of easing functions for use with System\n */\nexport const ease = {\n  easeLinear: function(value) {\n    return value;\n  },\n\n  easeInQuad: function(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad: function(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic: function(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic: function(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart: function(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart: function(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine: function(value) {\n    return -Math.cos(value * (PI / 2)) + 1;\n  },\n\n  easeOutSine: function(value) {\n    return Math.sin(value * (PI / 2));\n  },\n\n  easeInOutSine: function(value) {\n    return -0.5 * (Math.cos(PI * value) - 1);\n  },\n\n  easeInExpo: function(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo: function(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo: function(value) {\n    if (value === 0) return 0;\n    if (value === 1) return 1;\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc: function(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc: function(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc: function(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack: function(value) {\n    var s = 1.70158;\n\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack: function(value) {\n    var s = 1.70158;\n\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack: function(value) {\n    var s = 1.70158;\n\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  }\n};\n\nexport const {\n  easeLinear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInSine,\n  easeOutSine,\n  easeInOutSine,\n  easeInExpo,\n  easeOutExpo,\n  easeInOutExpo,\n  easeInCirc,\n  easeOutCirc,\n  easeInOutCirc,\n  easeInBack,\n  easeOutBack,\n  easeInOutBack\n} = ease;\n\nexport const setEasingByName = easeName => {\n  if (ease[easeName]) return ease[easeName];\n  else return ease.easeLinear;\n};\n\nexport const getEasingByName = name =>\n  ease[name] ? ease[name] : ease.easeLinear;\n", "import {\n  BEHAVIOUR_TYPE_ALPHA,\n  BEHAVIOUR_TYPE_ATTRACTION,\n  BEHAVIOUR_TYPE_COLOR,\n  BEHAVIOUR_TYPE_CROSS_ZONE,\n  BEHAVIOUR_TYPE_FORCE,\n  BEHAVIOUR_TYPE_GRAVITY,\n  BEHAVIOUR_TYPE_RANDOM_DRIFT,\n  BEHAVIOUR_TYPE_REPULSION,\n  BEHAVIOUR_TYPE_ROTATE,\n  BEHAVIOUR_TYPE_SCALE,\n  BEHAVIOUR_TYPE_SPRING,\n} from '../behaviour/types';\nimport {\n  INITIALIZER_TYPE_BODY,\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_LIFE,\n  INITIALIZER_TYPE_MASS,\n  INITIALIZER_TYPE_POLAR_VELOCITY,\n  INITIALIZER_TYPE_POSITION,\n  INITIALIZER_TYPE_RADIAL_VELOCITY,\n  INITIALIZER_TYPE_RADIUS,\n  INITIALIZER_TYPE_TEXTURE,\n  INITIALIZER_TYPE_VECTOR_VELOCITY,\n} from '../initializer/types';\nimport {\n  ZONE_TYPE_BOX,\n  ZONE_TYPE_LINE,\n  ZONE_TYPE_MESH,\n  ZONE_TYPE_POINT,\n  ZONE_TYPE_SPHERE,\n} from '../zone/types';\n\nimport { RENDERER_TYPE_SPRITE } from '../renderer/types';\nimport { easeLinear } from '../ease';\n\n/**\n * @desc Default particle life\n * @type {number}\n */\nexport const DEFAULT_LIFE = Infinity;\n/**\n * @desc Default particle age\n * @type {number}\n */\nexport const DEFAULT_AGE = 0;\n/**\n * @desc Default particle energy\n * @type {number}\n */\nexport const DEFAULT_ENERGY = 1;\n/**\n * @desc Default particle dead\n * @type {boolean}\n */\nexport const DEFAULT_DEAD = false;\n/**\n * @desc Default particle sleep\n * @type {boolean}\n */\nexport const DEFAULT_SLEEP = false;\n\n/**\n * @desc Default particle index\n * @type {number}\n */\nexport const DEFAULT_INDEX = 0;\n/**\n * @desc Default particle body\n * @type {?object}\n */\nexport const DEFAULT_BODY = null;\n/**\n * @desc Default particle parent\n * @type {?Emitter}\n */\nexport const DEFAULT_PARENT = null;\n/**\n * @desc Default particle mass\n * @type {number}\n */\nexport const DEFAULT_MASS = 1;\n/**\n * @desc Default particle radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 10;\n/**\n * @desc Default particle alpha\n * @type {number}\n */\nexport const DEFAULT_ALPHA = 1;\n/**\n * @desc Default particle scale\n * @type {number}\n */\nexport const DEFAULT_SCALE = 1;\n/**\n * @desc Default particle useColor\n * @type {boolean}\n */\nexport const DEFAULT_USE_COLOR = false;\n/**\n * @desc Default particle useAlpha\n * @type {boolean}\n */\nexport const DEFAULT_USE_ALPHA = false;\n/**\n * @desc Default particle easing\n * @type {function}\n */\nexport const DEFAULT_EASING = easeLinear;\n\n/**\n * @desc The default delta provided to the System instance\n * @type {number}\n */\nexport const DEFAULT_SYSTEM_DELTA = 0.0167;\n\n/**\n * @desc The types of initializers supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_INITIALIZER_TYPES = [\n  INITIALIZER_TYPE_POSITION,\n  INITIALIZER_TYPE_LIFE,\n  INITIALIZER_TYPE_RADIUS,\n  INITIALIZER_TYPE_MASS,\n  INITIALIZER_TYPE_BODY,\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_TEXTURE,\n  INITIALIZER_TYPE_POLAR_VELOCITY,\n  INITIALIZER_TYPE_RADIAL_VELOCITY,\n  INITIALIZER_TYPE_VECTOR_VELOCITY,\n];\n\n/**\n * @desc The types of behaviours supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_BEHAVIOUR_TYPES = [\n  BEHAVIOUR_TYPE_ALPHA,\n  BEHAVIOUR_TYPE_ATTRACTION,\n  BEHAVIOUR_TYPE_COLOR,\n  BEHAVIOUR_TYPE_CROSS_ZONE,\n  BEHAVIOUR_TYPE_FORCE,\n  BEHAVIOUR_TYPE_GRAVITY,\n  BEHAVIOUR_TYPE_RANDOM_DRIFT,\n  BEHAVIOUR_TYPE_REPULSION,\n  BEHAVIOUR_TYPE_ROTATE,\n  BEHAVIOUR_TYPE_SCALE,\n  BEHAVIOUR_TYPE_SPRING,\n];\n\n/**\n * @desc The types of renderers supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_RENDERER_TYPES = [RENDERER_TYPE_SPRITE];\n\n/**\n * @desc The types of zones supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_ZONE_TYPES = [\n  ZONE_TYPE_BOX,\n  ZONE_TYPE_LINE,\n  ZONE_TYPE_MESH,\n  ZONE_TYPE_POINT,\n  ZONE_TYPE_SPHERE,\n];\n\nexport { INITIALIZER_TYPES_THAT_REQUIRE_THREE } from '../initializer/types';\n", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "export default {\n  getRGB: function(color) {\n    var rgb = {};\n\n    if (typeof color === 'number') {\n      hex = Math.floor(color);\n      rgb.r = ((color >> 16) & 255) / 255;\n      rgb.g = ((color >> 8) & 255) / 255;\n      rgb.b = (color & 255) / 255;\n    } else if (typeof color === 'string') {\n      var m;\n\n      if (\n        (m = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(\n          color\n        ))\n      ) {\n        rgb.r = Math.min(255, parseInt(m[1], 10)) / 255;\n        rgb.g = Math.min(255, parseInt(m[2], 10)) / 255;\n        rgb.b = Math.min(255, parseInt(m[3], 10)) / 255;\n        // eslint-disable-next-line no-useless-escape\n      } else if ((m = /^\\#([A-Fa-f0-9]+)$/.exec(color))) {\n        var hex = m[1];\n\n        rgb.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        rgb.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        rgb.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n      }\n    } else {\n      rgb.r = color.r;\n      rgb.g = color.g;\n      rgb.b = color.b;\n    }\n\n    return rgb;\n  },\n};\n", "export default {\n  _id: 0,\n  _uids: new Map(),\n  getNewId: function() {\n    return `PUID_${++this._id}`;\n  },\n  id: function(functionOrObject) {\n    if (this._uids.has(functionOrObject)) {\n      return this._uids.get(functionOrObject);\n    }\n\n    const newId = this.getNewId();\n\n    this._uids.set(functionOrObject, newId);\n\n    return newId;\n  },\n};\n", "/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n\nexport { _Math };", "/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { _Math } from './Math.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };", "import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };", "import { Vector3 } from './Vector3.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n\nexport { Matrix4 };", "import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { _Math } from './Math.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Euler };", "export var REVISION = '106';\nexport var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nexport var CullFaceNone = 0;\nexport var CullFaceBack = 1;\nexport var CullFaceFront = 2;\nexport var CullFaceFrontBack = 3;\nexport var FrontFaceDirectionCW = 0;\nexport var FrontFaceDirectionCCW = 1;\nexport var BasicShadowMap = 0;\nexport var PCFShadowMap = 1;\nexport var PCFSoftShadowMap = 2;\nexport var FrontSide = 0;\nexport var BackSide = 1;\nexport var DoubleSide = 2;\nexport var FlatShading = 1;\nexport var SmoothShading = 2;\nexport var NoColors = 0;\nexport var FaceColors = 1;\nexport var VertexColors = 2;\nexport var NoBlending = 0;\nexport var NormalBlending = 1;\nexport var AdditiveBlending = 2;\nexport var SubtractiveBlending = 3;\nexport var MultiplyBlending = 4;\nexport var CustomBlending = 5;\nexport var AddEquation = 100;\nexport var SubtractEquation = 101;\nexport var ReverseSubtractEquation = 102;\nexport var MinEquation = 103;\nexport var MaxEquation = 104;\nexport var ZeroFactor = 200;\nexport var OneFactor = 201;\nexport var SrcColorFactor = 202;\nexport var OneMinusSrcColorFactor = 203;\nexport var SrcAlphaFactor = 204;\nexport var OneMinusSrcAlphaFactor = 205;\nexport var DstAlphaFactor = 206;\nexport var OneMinusDstAlphaFactor = 207;\nexport var DstColorFactor = 208;\nexport var OneMinusDstColorFactor = 209;\nexport var SrcAlphaSaturateFactor = 210;\nexport var NeverDepth = 0;\nexport var AlwaysDepth = 1;\nexport var LessDepth = 2;\nexport var LessEqualDepth = 3;\nexport var EqualDepth = 4;\nexport var GreaterEqualDepth = 5;\nexport var GreaterDepth = 6;\nexport var NotEqualDepth = 7;\nexport var MultiplyOperation = 0;\nexport var MixOperation = 1;\nexport var AddOperation = 2;\nexport var NoToneMapping = 0;\nexport var LinearToneMapping = 1;\nexport var ReinhardToneMapping = 2;\nexport var Uncharted2ToneMapping = 3;\nexport var CineonToneMapping = 4;\nexport var ACESFilmicToneMapping = 5;\n\nexport var UVMapping = 300;\nexport var CubeReflectionMapping = 301;\nexport var CubeRefractionMapping = 302;\nexport var EquirectangularReflectionMapping = 303;\nexport var EquirectangularRefractionMapping = 304;\nexport var SphericalReflectionMapping = 305;\nexport var CubeUVReflectionMapping = 306;\nexport var CubeUVRefractionMapping = 307;\nexport var RepeatWrapping = 1000;\nexport var ClampToEdgeWrapping = 1001;\nexport var MirroredRepeatWrapping = 1002;\nexport var NearestFilter = 1003;\nexport var NearestMipMapNearestFilter = 1004;\nexport var NearestMipMapLinearFilter = 1005;\nexport var LinearFilter = 1006;\nexport var LinearMipMapNearestFilter = 1007;\nexport var LinearMipMapLinearFilter = 1008;\nexport var UnsignedByteType = 1009;\nexport var ByteType = 1010;\nexport var ShortType = 1011;\nexport var UnsignedShortType = 1012;\nexport var IntType = 1013;\nexport var UnsignedIntType = 1014;\nexport var FloatType = 1015;\nexport var HalfFloatType = 1016;\nexport var UnsignedShort4444Type = 1017;\nexport var UnsignedShort5551Type = 1018;\nexport var UnsignedShort565Type = 1019;\nexport var UnsignedInt248Type = 1020;\nexport var AlphaFormat = 1021;\nexport var RGBFormat = 1022;\nexport var RGBAFormat = 1023;\nexport var LuminanceFormat = 1024;\nexport var LuminanceAlphaFormat = 1025;\nexport var RGBEFormat = RGBAFormat;\nexport var DepthFormat = 1026;\nexport var DepthStencilFormat = 1027;\nexport var RedFormat = 1028;\nexport var RGB_S3TC_DXT1_Format = 33776;\nexport var RGBA_S3TC_DXT1_Format = 33777;\nexport var RGBA_S3TC_DXT3_Format = 33778;\nexport var RGBA_S3TC_DXT5_Format = 33779;\nexport var RGB_PVRTC_4BPPV1_Format = 35840;\nexport var RGB_PVRTC_2BPPV1_Format = 35841;\nexport var RGBA_PVRTC_4BPPV1_Format = 35842;\nexport var RGBA_PVRTC_2BPPV1_Format = 35843;\nexport var RGB_ETC1_Format = 36196;\nexport var RGBA_ASTC_4x4_Format = 37808;\nexport var RGBA_ASTC_5x4_Format = 37809;\nexport var RGBA_ASTC_5x5_Format = 37810;\nexport var RGBA_ASTC_6x5_Format = 37811;\nexport var RGBA_ASTC_6x6_Format = 37812;\nexport var RGBA_ASTC_8x5_Format = 37813;\nexport var RGBA_ASTC_8x6_Format = 37814;\nexport var RGBA_ASTC_8x8_Format = 37815;\nexport var RGBA_ASTC_10x5_Format = 37816;\nexport var RGBA_ASTC_10x6_Format = 37817;\nexport var RGBA_ASTC_10x8_Format = 37818;\nexport var RGBA_ASTC_10x10_Format = 37819;\nexport var RGBA_ASTC_12x10_Format = 37820;\nexport var RGBA_ASTC_12x12_Format = 37821;\nexport var LoopOnce = 2200;\nexport var LoopRepeat = 2201;\nexport var LoopPingPong = 2202;\nexport var InterpolateDiscrete = 2300;\nexport var InterpolateLinear = 2301;\nexport var InterpolateSmooth = 2302;\nexport var ZeroCurvatureEnding = 2400;\nexport var ZeroSlopeEnding = 2401;\nexport var WrapAroundEnding = 2402;\nexport var TrianglesDrawMode = 0;\nexport var TriangleStripDrawMode = 1;\nexport var TriangleFanDrawMode = 2;\nexport var LinearEncoding = 3000;\nexport var sRGBEncoding = 3001;\nexport var GammaEncoding = 3007;\nexport var RGBEEncoding = 3002;\nexport var LogLuvEncoding = 3003;\nexport var RGBM7Encoding = 3004;\nexport var RGBM16Encoding = 3005;\nexport var RGBDEncoding = 3006;\nexport var BasicDepthPacking = 3200;\nexport var RGBADepthPacking = 3201;\nexport var TangentSpaceNormalMap = 0;\nexport var ObjectSpaceNormalMap = 1;\n", "import { Vector3 } from '../core/three/';\n\nexport default {\n  toScreenPos: (function() {\n    var vector = new Vector3();\n\n    return function(pos, camera, canvas) {\n      vector.copy(pos);\n      // map to normalized device coordinate (NDC) space\n      vector.project(camera);\n      // map to 2D screen space\n      vector.x = Math.round(((vector.x + 1) * canvas.width) / 2);\n      vector.y = Math.round(((-vector.y + 1) * canvas.height) / 2);\n      vector.z = 0;\n\n      return vector;\n    };\n  })(),\n\n  toSpacePos: (function() {\n    var vector = new Vector3(),\n      dir = new Vector3(),\n      distance;\n\n    return function(pos, camera, canvas) {\n      vector.set(\n        (pos.x / canvas.width) * 2 - 1,\n        -(pos.y / canvas.height) * 2 + 1,\n        0.5\n      );\n      vector.unproject(camera);\n\n      dir.copy(vector.sub(camera.position).normalize());\n      distance = -camera.position.z / dir.z;\n      vector.copy(camera.position);\n      vector.add(dir.multiplyScalar(distance));\n\n      return vector;\n    };\n  })(),\n};\n", "export default {\n  initValue: function(value, defaults) {\n    var _value = value != null && value != undefined ? value : defaults;\n\n    return _value;\n  },\n\n  isArray: function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  destroyArray: function(array) {\n    array.length = 0;\n  },\n\n  destroyObject: function(obj) {\n    for (var o in obj) delete obj[o];\n  },\n\n  isUndefined: function() {\n    for (var id in arguments) {\n      var arg = arguments[id];\n\n      if (arg !== undefined) return false;\n    }\n\n    return true;\n  },\n\n  setVectorByObj: function(target, pOBJ) {\n    if (pOBJ['x'] !== undefined) target.position.x = pOBJ['x'];\n    if (pOBJ['y'] !== undefined) target.position.y = pOBJ['y'];\n    if (pOBJ['z'] !== undefined) target.position.z = pOBJ['z'];\n\n    if (pOBJ['vx'] !== undefined) target.velocity.x = pOBJ['vx'];\n    if (pOBJ['vy'] !== undefined) target.velocity.y = pOBJ['vy'];\n    if (pOBJ['vz'] !== undefined) target.velocity.z = pOBJ['vz'];\n\n    if (pOBJ['ax'] !== undefined) target.acceleration.x = pOBJ['ax'];\n    if (pOBJ['ay'] !== undefined) target.acceleration.y = pOBJ['ay'];\n    if (pOBJ['az'] !== undefined) target.acceleration.z = pOBJ['az'];\n\n    if (pOBJ['p'] !== undefined) target.position.copy(pOBJ['p']);\n    if (pOBJ['v'] !== undefined) target.velocity.copy(pOBJ['v']);\n    if (pOBJ['a'] !== undefined) target.acceleration.copy(pOBJ['a']);\n\n    if (pOBJ['position'] !== undefined) target.position.copy(pOBJ['position']);\n    if (pOBJ['velocity'] !== undefined) target.velocity.copy(pOBJ['velocity']);\n    if (pOBJ['accelerate'] !== undefined)\n      target.acceleration.copy(pOBJ['accelerate']);\n  },\n\n  //set prototype\n  setPrototypeByObj: function(target, proObj, filters) {\n    for (var key in proObj) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (target.hasOwnProperty(key)) {\n        if (filters) {\n          if (filters.indexOf(key) < 0)\n            target[key] = this._getValue(proObj[key]);\n        } else {\n          target[key] = this._getValue(proObj[key]);\n        }\n      }\n    }\n\n    return target;\n  },\n\n  _getValue: function(pan) {\n    if (pan.constructor.type === 'Span') return pan.getValue();\n    else return pan;\n  },\n};\n", "import uid from 'uuid/v1';\n\nexport default uid;\n", "export { default as ColorUtil } from './ColorUtil';\nexport { default as PUID } from './PUID';\nexport { default as THREEUtil } from './THREEUtil';\nexport { default as Util } from './Util';\nexport { default as uid } from './uid';\n\nexport const withDefaults = (defaults, properties) => ({\n  ...defaults,\n  ...properties,\n});\n", "import { PI } from '../constants';\n\nexport default {\n  randomAToB: function(a, b, INT) {\n    if (!INT) return a + Math.random() * (b - a);\n    else return ((Math.random() * (b - a)) >> 0) + a;\n  },\n  randomFloating: function(center, f, INT) {\n    return this.randomAToB(center - f, center + f, INT);\n  },\n\n  randomZone: function(display) {}, //eslint-disable-line\n\n  degreeTransform: function(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16: function getRGB(num) {\n    return '#' + num.toString(16);\n  },\n\n  randomColor: function() {\n    return (\n      '#' +\n      ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  lerp: function(a, b, energy) {\n    return b + (a - b) * energy;\n  },\n\n  getNormal: function(v, n) {\n    if (v.x == 0 && v.y == 0) {\n      if (v.z == 0) n.set(1, 0, 1);\n      else n.set(1, 1, -v.y / v.z);\n    } else {\n      if (v.x == 0) n.set(1, 0, 1);\n      else n.set(-v.y / v.x, 1, 1);\n    }\n\n    return n.normalize();\n  },\n\n  /**\n   * Rodrigues' Rotation Formula\n   * https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula\n   * v′ = vcos(θ) + k(k⋅v)(1−cos(θ)) + (k*v)sin(θ)\n   */\n  axisRotate: function(v0, v, k, tha) {\n    var cos = Math.cos(tha);\n    var sin = Math.sin(tha);\n    var p = k.dot(v) * (1 - cos);\n\n    v0.copy(k);\n    v0.cross(v).scalar(sin);\n    v0.addValue(v.x * cos, v.y * cos, v.z * cos);\n    v0.addValue(k.x * p, k.y * p, k.z * p);\n  }\n};\n", "export const MATH_TYPE_ARRAY_SPAN = 'ArraySpan';\nexport const MATH_TYPE_COLOR_SPAN = 'ColorSpan';\nexport const MATH_TYPE_BOX = 'Box';\nexport const MATH_TYPE_POLAR_3D = 'Polar3D';\nexport const MATH_TYPE_SPAN = 'Span';\nexport const MATH_TYPE_VECTOR_3D = 'Vector3D';\n", "import MathUtils from './MathUtils';\nimport Util from '../utils/Util';\nimport { MATH_TYPE_SPAN as type } from './types';\n\nexport default class Span {\n  /**\n   * Span Class. Get a random Number from a to b. Or from c-a to c+b\n   * @param {Number|Array} a - min number\n   * @param {Number} b - max number\n   * @param {Number} center - the center's z value\n   * @example\n   * var span = new Span(0,30);\n   * or\n   * var span = new Span([\"#fff\",\"#ff0\",\"#000\"]);\n   * or\n   * var span = new Span(5,1,\"center\");\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, center) {\n    this._isArray = false;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    if (Util.isArray(a)) {\n      this._isArray = true;\n      this.a = a;\n    } else {\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this._center = Util.initValue(center, false);\n    }\n  }\n\n  /**\n   * Span.getValue function\n   * @name get a random Number from a to b. Or get a random Number from c-a to c+b\n   * @param {number} INT or int\n   * @return {number} a random Number\n   */\n  getValue(INT) {\n    if (this._isArray) {\n      return this.a[(this.a.length * Math.random()) >> 0];\n    } else {\n      if (!this._center) return MathUtils.randomAToB(this.a, this.b, INT);\n      else return MathUtils.randomFloating(this.a, this.b, INT);\n    }\n  }\n}\n\nexport const createSpan = (a, b, c) => {\n  if (a instanceof Span) return a;\n\n  if (b === undefined) {\n    return new Span(a);\n  } else {\n    if (c === undefined) return new Span(a, b);\n    else return new Span(a, b, c);\n  }\n};\n", "import Span from './Span';\nimport sample from 'lodash/sample';\nimport { MATH_TYPE_ARRAY_SPAN as type } from './types';\n\n/**\n * Class for storing items of mixed type and fetching a randomised\n * value from these items.\n *\n */\nexport default class ArraySpan extends Span {\n  /**\n   * Constructs an ArraySpan instance.\n   *\n   * @param {mixed|array<mixed>} items - Items\n   * @return void\n   */\n  constructor(items) {\n    super();\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc An array of colors\n     * @type {array}\n     */\n    this.items = Array.isArray(items) ? items : [items];\n  }\n\n  /**\n   * Gets a random item.\n   *\n   * @return {mixed}\n   */\n  getValue() {\n    return sample(this.items);\n  }\n}\n\n/**\n * Attempts to create an ArraySpan from the items provided.\n *\n * @param {mixed} items - Items to try and create an ArraySpan from\n * @return {?ArraySpan}\n */\nexport const createArraySpan = items => {\n  if (!items) {\n    return null;\n  }\n\n  if (items instanceof ArraySpan) {\n    return items;\n  }\n\n  return new ArraySpan(items);\n};\n", "import MathUtils from './MathUtils';\nimport Span from './Span';\nimport sample from 'lodash/sample';\nimport { MATH_TYPE_COLOR_SPAN as type } from './types';\n\n/**\n * Class for storing and interacting with an array of colours.\n *\n */\nexport default class ColorSpan extends Span {\n  /**\n   * Constructs a ColorSpan instance.\n   *\n   * @param {string|array<string>} colors - A color or array of colors. If the\n   * string 'random' is provided, a random color will be returned from getValue\n   * @return void\n   */\n  constructor(colors) {\n    super();\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if a random color should be returned from the getValue method.\n     * @type {boolean}\n     */\n    this.shouldRandomize = colors === 'random' ? true : false;\n\n    /**\n     * @desc An array of colors to select from\n     * @type {array<string>}\n     */\n    this.colors = Array.isArray(colors) ? colors : [colors];\n  }\n\n  /**\n   * Gets a color from the color array\n   * or a random color if this.shouldRandomize is true.\n   *\n   * @return {string} a hex color\n   */\n  getValue() {\n    return this.shouldRandomize ? MathUtils.randomColor() : sample(this.colors);\n  }\n}\n\n/**\n * Attempts to create an ArraySpan from the colors provided.\n *\n * @param {mixed} colors - colors to try and create an ArraySpan from\n * @return {?ColorSpan}\n */\nexport const createColorSpan = colors => {\n  if (!colors) {\n    console.warn(\n      `Invalid colors argument ${colors} passed to createColorSpan. Defaulting to 'random'.`\n    );\n\n    colors = 'random';\n  }\n\n  if (colors instanceof ColorSpan) {\n    return colors;\n  }\n\n  return new ColorSpan(colors);\n};\n", "import { MATH_TYPE_BOX as type } from './types';\n\nexport default class Box {\n  constructor(x, y, z, w, h, d) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.width = w;\n    this.height = h;\n    this.depth = d;\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y, z) {\n    if (\n      x <= this.right &&\n      x >= this.x &&\n      y <= this.bottom &&\n      y >= this.y &&\n      z <= this.depth &&\n      z >= this.z\n    )\n      return true;\n    else return false;\n  }\n}\n", "/**\n * @see https://en.wikipedia.org/wiki/Euler_method\n * @type {string}\n */\nexport const INTEGRATION_TYPE_EULER = 'EULER';\n\n/**\n * @see http://web.mit.edu/10.001/Web/Course_Notes/Differential_Equations_Notes/node5.html\n * @type {string}\n */\nexport const INTEGRATION_TYPE_RK2 = 'RUNGE_KUTTA_2';\n\n/**\n * @see http://web.mit.edu/10.001/Web/Course_Notes/Differential_Equations_Notes/node5.html\n * @type {string}\n */\nexport const INTEGRATION_TYPE_RK4 = 'RUNGE_KUTTA_4';\n\n/**\n * @see https://en.wikipedia.org/wiki/Verlet_integration\n * @type {string}\n */\nexport const INTEGRATION_TYPE_VERLET = 'VERLET';\n", "import { INTEGRATION_TYPE_EULER } from './constants';\nimport { DEFAULT_SYSTEM_DELTA } from '../core/constants';\n\n/**\n * Performs euler integration on the particle.\n *\n * @param {Particle} particle - The particle to integrate\n * @param {number} time - The factor of time to use\n * @param {number} damping - The damping to use\n * @return void\n */\nconst eulerIntegration = (particle, time, damping) => {\n  if (particle.sleep) {\n    return;\n  }\n\n  particle.old.position.copy(particle.position);\n  particle.old.velocity.copy(particle.velocity);\n  particle.acceleration.scalar(1 / particle.mass);\n  particle.velocity.add(particle.acceleration.scalar(time));\n  particle.position.add(particle.old.velocity.scalar(time));\n  damping &&\n    particle.velocity.scalar(Math.pow(damping, time / DEFAULT_SYSTEM_DELTA));\n  particle.acceleration.clear();\n};\n\n/**\n * Performs the chosen integration on the particle.\n * Defaults to euler integration.\n *\n * @param {Particle} particle - The particle to integrate\n * @param {number} time - The factor of time to use\n * @param {number} damping - The damping to use\n * @param {string} [type=INTEGRATION_TYPE_EULER] - The algorithm to use\n * @return void\n */\nexport const integrate = (\n  particle,\n  time,\n  damping,\n  type = INTEGRATION_TYPE_EULER\n) => {\n  switch (type) {\n    case INTEGRATION_TYPE_EULER:\n      eulerIntegration(particle, time, damping);\n      break;\n    default:\n      eulerIntegration(particle, time, damping);\n  }\n};\n", "import { Euler, Vector3 } from '../core/three/';\n\nexport default class Vector3D extends Vector3 {\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = 0.0;\n\n    return this;\n  }\n\n  scalar(s) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n\n    return this;\n  }\n\n  addValue(a, b, c) {\n    this.x += a;\n    this.y += b;\n    this.z += c;\n\n    return this;\n  }\n\n  toString() {\n    return 'x:' + this.x + 'y:' + this.y + 'z:' + this.z;\n  }\n\n  eulerFromDir(vector3D) {\n    const euler = new Euler();\n\n    return euler.setFromVector3(vector3D);\n  }\n}\n", "import Vector3D from './Vector3D';\nimport { MATH_TYPE_POLAR_3D as type } from './types';\n\nexport default class Polar3D {\n  constructor(radius, theta, phi) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.radius = radius || 1;\n    this.phi = phi || 0;\n    this.theta = theta || 0;\n  }\n\n  set(radius, theta, phi) {\n    this.radius = radius || 1;\n    this.phi = phi || 0;\n    this.theta = theta || 0;\n\n    return this;\n  }\n\n  setRadius(radius) {\n    this.radius = radius;\n\n    return this;\n  }\n\n  setPhi(phi) {\n    this.phi = phi;\n\n    return this;\n  }\n\n  setTheta(theta) {\n    this.theta = theta;\n\n    return this;\n  }\n\n  copy(p) {\n    this.radius = p.radius;\n    this.phi = p.phi;\n    this.theta = p.theta;\n\n    return this;\n  }\n\n  toVector3D() {\n    return new Vector3D(this.getX(), this.getY(), this.getZ());\n  }\n\n  getX() {\n    return this.radius * Math.sin(this.theta) * Math.cos(this.phi);\n  }\n\n  getY() {\n    return -this.radius * Math.sin(this.theta) * Math.sin(this.phi);\n  }\n\n  getZ() {\n    return this.radius * Math.cos(this.theta);\n  }\n\n  normalize() {\n    this.radius = 1;\n\n    return this;\n  }\n\n  equals(v) {\n    return (\n      v.radius === this.radius && v.phi === this.phi && v.theta === this.theta\n    );\n  }\n\n  clear() {\n    this.radius = 0.0;\n    this.phi = 0.0;\n    this.theta = 0.0;\n\n    return this;\n  }\n\n  clone() {\n    return new Polar3D(this.radius, this.phi, this.theta);\n  }\n}\n", "export const CORE_TYPE_PARTICLE = 'Particle';\nexport const CORE_TYPE_POOL = 'Pool';\nexport const CORE_TYPE_SYSTEM = 'System';\n", "import {\n  DEFAULT_AGE,\n  DEFAULT_ALPHA,\n  DEFAULT_BODY,\n  DEFAULT_DEAD,\n  DEFAULT_EASING,\n  DEFAULT_ENERGY,\n  DEFAULT_LIFE,\n  DEFAULT_MASS,\n  DEFAULT_PARENT,\n  DEFAULT_RADIUS,\n  DEFAULT_SCALE,\n  DEFAULT_SLEEP,\n  DEFAULT_USE_ALPHA,\n  DEFAULT_USE_COLOR,\n} from './constants';\nimport { Util, uid } from '../utils';\n\nimport { PI } from '../constants';\nimport { Vector3D } from '../math';\nimport { CORE_TYPE_PARTICLE as type } from './types';\n\n/**\n * A Particle is an object that is emitted by an emitter.\n *\n */\nexport default class Particle {\n  /**\n   * Constructs a Particle instance.\n   *\n   * @param {object} properties - The properties to instantiate the particle with\n   * @property {number} properties.life - The particle's life\n   * @property {number} properties.age - The particle's age\n   * @property {number} properties.energy - The particle's energy loss\n   * @property {boolean} properties.dead - Determines if the particle is dead or not\n   * @property {boolean} properties.sleep - Determines if the particle is sleeping or not\n   * @property {object} properties.target - The particle's target\n   * @property {object} properties.body - The particle's body\n   * @property {number} properties.mass - The particle's mass\n   * @property {number} properties.radius - The particle's radius\n   * @property {number} properties.alpha - The particle's alpha\n   * @property {number} properties.scale - The particle's scale\n   * @property {number} properties.rotation - The particle's rotation\n   * @property {string|number} properties.color - The particle's color\n   * @property {function} properties.easing - The particle's easing\n   * @property {Vector3D} properties.position - The particle's position\n   * @property {Vector3D} properties.velocity - The particle's velocity\n   * @property {Vector3D} properties.acceleration - The particle's acceleration\n   * @property {array} properties.behaviours - The particle's behaviours array\n   * @property {object} properties.transform - The particle's transform collection\n   * @return void\n   */\n  constructor(properties) {\n    /**\n     * @desc The particle's unique id\n     * @type {number}\n     */\n    this.id = `particle-${uid()}`;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc The particle's life\n     * @type {number}\n     */\n    this.life = DEFAULT_LIFE;\n    /**\n     * @desc The particle's age\n     * @type {number}\n     */\n    this.age = DEFAULT_AGE;\n    /**\n     * @desc The particle's energy loss\n     * @type {number}\n     */\n    this.energy = DEFAULT_ENERGY;\n    /**\n     * @desc Determines if the particle is dead or not\n     * @type {number}\n     */\n    this.dead = DEFAULT_DEAD;\n    /**\n     * @desc Determines if the particle is sleeping or not\n     * @type {number}\n     */\n    this.sleep = DEFAULT_SLEEP;\n    /**\n     * @desc The particle's body\n     * @type {object}\n     */\n    this.body = DEFAULT_BODY;\n    /**\n     * @desc The particle's parent\n     * @type {?Emitter}\n     */\n    this.parent = DEFAULT_PARENT;\n    /**\n     * @desc The particle's mass\n     * @type {number}\n     */\n    this.mass = DEFAULT_MASS;\n    /**\n     * @desc The particle's radius\n     * @type {number}\n     */\n    this.radius = DEFAULT_RADIUS;\n    /**\n     * @desc The particle's alpha\n     * @type {number}\n     */\n    this.alpha = DEFAULT_ALPHA;\n    /**\n     * @desc The particle's scale\n     * @type {number}\n     */\n    this.scale = DEFAULT_SCALE;\n    /**\n     * @desc Determines whether to use color or not\n     * @type {boolean}\n     */\n    this.useColor = DEFAULT_USE_COLOR;\n    /**\n     * @desc Determines whether to use alpha or not\n     * @type {boolean}\n     */\n    this.useAlpha = DEFAULT_USE_ALPHA;\n    /**\n     * @desc The particle's easing\n     * @type {string}\n     */\n    this.easing = DEFAULT_EASING;\n    /**\n     * @desc The particle's position\n     * @type {Vector3D}\n     */\n    this.position = new Vector3D();\n    /**\n     * @desc The particle's velocity\n     * @type {Vector3D}\n     */\n    this.velocity = new Vector3D();\n    /**\n     * @desc The particle's acceleration\n     * @type {Vector3D}\n     */\n    this.acceleration = new Vector3D();\n    /**\n     * @desc The particle's last position, velocity and acceleration\n     * @type {Vector3D}\n     */\n    this.old = {};\n    /**\n     * @desc The particle's old position\n     * @type {Vector3D}\n     */\n    this.old.position = this.position.clone();\n    /**\n     * @desc The particle's old velocity\n     * @type {Vector3D}\n     */\n    this.old.velocity = this.velocity.clone();\n    /**\n     * @desc The particle's old acceleration\n     * @type {Vector3D}\n     */\n    this.old.acceleration = this.acceleration.clone();\n    /**\n     * @desc The particle's behaviours array\n     * @type {array}\n     */\n    this.behaviours = [];\n    /**\n     * @desc The particle's transform collection\n     * @type {object}\n     */\n    this.transform = {};\n    /**\n     * @desc The particle's color store\n     * @type {object}\n     */\n    this.color = { r: 0, g: 0, b: 0 };\n    /**\n     * @desc The particle's rotation\n     * @type {number}\n     */\n    this.rotation = new Vector3D();\n\n    /**\n     * @desc The particle's distance to the camera, only set by the GPURenderer for depth sorting purposes.\n     * @type {number}\n     */\n    this.distanceToCamera = 0;\n\n    // override constructor props with passed properties.\n    Util.setPrototypeByObj(this, properties);\n  }\n\n  /**\n   * Gets the particle's current direction.\n   *\n   * @return {number}\n   */\n  getDirection() {\n    return Math.atan2(this.velocity.x, -this.velocity.y) * (180 / PI);\n  }\n\n  /**\n   * Resets the particle's default properties and clear's its particle's position,\n   * velocity, acceleration, color and rotation. Also destroy's the particle's\n   * transform collection & removes all behaviours.\n   *\n   * @return {Particle}\n   */\n  reset() {\n    this.life = DEFAULT_LIFE;\n    this.age = DEFAULT_AGE;\n    this.energy = DEFAULT_ENERGY;\n    this.dead = DEFAULT_DEAD;\n    this.sleep = DEFAULT_SLEEP;\n    this.body = DEFAULT_BODY;\n    this.parent = DEFAULT_PARENT;\n    this.mass = DEFAULT_MASS;\n    this.radius = DEFAULT_RADIUS;\n    this.alpha = DEFAULT_ALPHA;\n    this.scale = DEFAULT_SCALE;\n    this.useColor = DEFAULT_USE_COLOR;\n    this.useAlpha = DEFAULT_USE_ALPHA;\n    this.easing = DEFAULT_EASING;\n    this.position.set(0, 0, 0);\n    this.velocity.set(0, 0, 0);\n    this.acceleration.set(0, 0, 0);\n    this.old.position.set(0, 0, 0);\n    this.old.velocity.set(0, 0, 0);\n    this.old.acceleration.set(0, 0, 0);\n    this.color.r = 0;\n    this.color.g = 0;\n    this.color.b = 0;\n\n    this.rotation.clear();\n    Util.destroyObject(this.transform);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  /**\n   * Updates the particle's properties by applying each behaviour to the particle.\n   * Will also update the particle's energy, unless it's age is greater than it's life\n   * in which case it will be destroyed.\n   *\n   * @param {number} time - Integration time\n   * @param {integer} index - Particle index\n   * @return void\n   */\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n\n      let i = this.behaviours.length;\n\n      while (i--) {\n        let behaviour = this.behaviours[i];\n\n        //behaviour && \n        behaviour.applyBehaviour(this, time, index);\n      }\n    }\n\n    if (this.age >= this.life) {\n      this.destroy();\n    } else {\n      const scale = this.easing(this.age / this.life);\n\n      this.energy = Math.max(1 - scale, 0);\n    }\n  }\n\n  /**\n   * Adds a behaviour to the particle.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the particle\n   * @return void\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * Adds multiple behaviours to the particle.\n   *\n   * @param {array<Behaviour>} behaviours - An array of behaviours to add to the particle\n   * @return void\n   */\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  /**\n   * Removes the behaviour from the particle.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove from the particle\n   * @return void\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all behaviours from the particle.\n   *\n   * @return void\n   */\n  removeAllBehaviours() {\n    Util.destroyArray(this.behaviours);\n  }\n\n  /**\n   * Destroys the particle.\n   *\n   * @return void\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n", "import PUID from '../utils/PUID';\nimport { CORE_TYPE_POOL as type } from './types';\n/**\n * An object pool implementation. Used for pooling objects to avoid unnecessary\n * garbage collection.\n *\n */\nexport default class Pool {\n  /**\n   * Constructs a Pool instance.\n   *\n   * @return void\n   */\n  constructor() {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc Incrementing id that keeps a count of the number of objects created\n     * @type {integer}\n     */\n    this.cID = 0;\n\n    /**\n     * @desc Map of pools in the format of PUID<String>: pool<Array>\n     * @type {object}\n     */\n    this.list = {};\n  }\n\n  /**\n   * Attempts to create a new object either by creating a new instance or calling its\n   * clone method.\n   *\n   * TODO COVERAGE - for the constructorArgs\n   * @param {function|object} functionOrObject - The object to instantiate or clone\n   * @return {object|undefined}\n   */\n  create(functionOrObject, ...constructorArgs) {\n    if (!this.canCreateNewObject(functionOrObject)) {\n      throw new Error(\n        'The pool is unable to create or clone the object supplied'\n      );\n    }\n\n    this.cID++;\n\n    if (this.canInstantiateObject(functionOrObject)) {\n      return new functionOrObject(...constructorArgs);\n    }\n\n    if (this.canCloneObject(functionOrObject)) {\n      return functionOrObject.clone();\n    }\n  }\n\n  /**\n   * Determines if the object is able to be instantiated or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canInstantiateObject(object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * Determines if the object is able to be cloned or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canCloneObject(object) {\n    return object.clone && typeof object.clone === 'function';\n  }\n\n  /**\n   * Determines if a new object is able to be created.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canCreateNewObject(object) {\n    return this.canInstantiateObject(object) || this.canCloneObject(object)\n      ? true\n      : false;\n  }\n\n  /**\n   * Gets a count of all objects in the pool.\n   *\n   * @return {integer}\n   */\n  getCount() {\n    var count = 0;\n\n    for (var id in this.list) count += this.list[id].length;\n\n    return count++;\n  }\n\n  /**\n   * Gets an object either by creating a new one or retrieving it from the pool.\n   *\n   * @param {function|object} obj - The function or object to get\n   * @param {array} args - The args to pass to the function on creation\n   * @return {object}\n   */\n  get(obj, ...args) {\n    var p,\n      puid = obj.__puid || PUID.id(obj);\n\n    if (this.list[puid] && this.list[puid].length > 0)\n      p = this.list[puid].pop();\n    else p = this.create(obj, ...args);\n\n    p.__puid = obj.__puid || puid;\n\n    return p;\n  }\n\n  /**\n   * Pushes an object into the pool.\n   *\n   * @param {object} obj - The object to expire\n   * @return {integer}\n   */\n  expire(obj) {\n    return this._getList(obj.__puid).push(obj);\n  }\n\n  /**\n   * Destroys all pools.\n   *\n   * @return void\n   */\n  destroy() {\n    for (var id in this.list) {\n      this.list[id].length = 0;\n      delete this.list[id];\n    }\n  }\n\n  /**\n   * Gets the pool mapped to the UID.\n   *\n   * @param {string} uid - The pool uid\n   * @return {array}\n   */\n  _getList(uid) {\n    uid = uid || 'default';\n    if (!this.list[uid]) this.list[uid] = [];\n\n    return this.list[uid];\n  }\n}\n", "/*\n * EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this.listeners = null;\n  }\n\n  set listeners(listeners) {\n    this._listeners = listeners;\n  }\n\n  get listeners() {\n    return this._listeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this.listeners) {\n      this.listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this.listeners[type]) this.listeners[type] = [];\n    this.listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this.listeners) return;\n    if (!this.listeners[type]) return;\n\n    var arr = this.listeners[type];\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete this.listeners[type];\n        }\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this.listeners = null;\n    else if (this.listeners) delete this.listeners[type];\n  }\n\n  dispatchEvent(eventName, eventTarget) {\n    var ret = false,\n      listeners = this.listeners;\n\n    if (eventName && listeners) {\n      var arr = listeners[eventName];\n\n      if (!arr) return ret;\n\n      arr = arr.slice();        //Should use a copy into a temporary here instead...\n      // to avoid issues with items being removed or added during the dispatch\n\n      var handler,\n        i = arr.length;\n\n      while (i--) {\n        handler = arr[i];\n\n        ret = ret || handler(eventTarget);\n      }\n    }\n\n    return !!ret;\n  }\n\n  hasEventListener(type) {\n    var listeners = this.listeners;\n\n    return !!(listeners && listeners[type]);\n  }\n}\n", "export const SYSTEM_UPDATE = 'SYSTEM_UPDATE';\nexport const PARTICLE_CREATED = 'PARTICLE_CREATED';\nexport const PARTICLE_UPDATE = 'PARTICLE_UPDATE';\nexport const PARTICLE_DEAD = 'PARTICLE_DEAD';\nexport const EMITTER_ADDED = 'EMITTER_ADDED';\nexport const EMITTER_REMOVED = 'EMITTER_REMOVED';\nexport const EMITTER_DEAD = 'EMITTER_DEAD';\nexport const SYSTEM_UPDATE_AFTER = 'SYSTEM_UPDATE_AFTER';\n", "import EventDispatcher from './EventDispatcher';\n\nexport default EventDispatcher;\nexport * from './constants';\n", "export { default as Body } from './Body';\nexport { default as BodySprite } from './BodySprite';\nexport { default as InitializerUtil } from './InitializerUtil';\nexport { default as Life } from './Life';\nexport { default as Mass } from './Mass';\nexport { default as Position } from './Position';\nexport { default as Radius } from './Radius';\nexport { default as Rate } from './Rate';\nexport { default as Texture } from './Texture';\nexport { VectorVelocity, PolarVelocity, RadialVelocity } from './Velocity';\n", "import { INITIALIZER_TYPE_ABSTRACT } from './types';\n\n/**\n * The base Emitter / Particle property class.\n *\n * @abstract\n */\nexport default class Initializer {\n  /**\n   * Constructs an Initializer instance.\n   *\n   * @param {string} [type=INITIALIZER_TYPE_ABSTRACT] - The intiializer type\n   * @param {boolean} [isEnabled=true] - Determines if the initializer should be enabled or not\n\n   * @return void\n   */\n  constructor(type = INITIALIZER_TYPE_ABSTRACT, isEnabled = true) {\n    this.type = type;\n    this.isEnabled = isEnabled;\n  }\n\n  /**\n   * Initializes the property on the emitter or particle.\n   *\n   * @see {@link '../emitter/emitter.js'} setupParticle\n   * @param {Emitter} emitter - the emitter to initialize the property on\n   * @param {Particle} particle - the particle to intiialize the property on\n   * @return void\n   */\n  init(emitter, particle) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (particle) {\n      this.initialize(particle);\n      particle.hasBeenInitialized = true;\n    } else {\n      this.initialize(emitter);\n      emitter.hasBeenInitialized = true;\n    }\n  }\n\n  /**\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Place custom property initialization code in this method in the subclass.\n   *\n   * @param {object} target - either an Emitter or a Particle\n   * @abstract\n   */\n  initialize(target) {} // eslint-disable-line\n\n  /**\n   * Determines if the initializer requires a Web GL API to be provided to its constructor.\n   * If true, the WebGL API will need to be provided as the first argument to the constructor\n   * and fromJSON methods.\n   *\n   * @return {boolean}\n   */\n  static requiresWebGlApi() {\n    return false;\n  }\n\n  /**\n   * Returns a new instance of the initializer from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n  static fromJSON(json) {} // eslint-disable-line\n}\n", "import Initializer from './Initializer';\nimport { createArraySpan } from '../math';\nimport { INITIALIZER_TYPE_BODY as type } from './types';\n/**\n * Sets the body property on initialized particles.\n *\n */\nexport default class Body extends Initializer {\n  /**\n   * Constructs a Body initalizer instance.\n   *\n   * @param {string|number|object} body - The content for the particle body, can\n   * be a color or an object (mesh)\n   * @param {?number} w - The width of the particle body\n   * @param {?number} h - The height of the particle body\n   * @return void\n   */\n  constructor(body, w, h, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The content for the particle body\n     * @type {ArraySpan}\n     */\n    this.body = createArraySpan(body);\n\n    /**\n     * @desc The width of the particle Body\n     * @type {number}\n     */\n    this.w = w;\n\n    /**\n     * @desc The height of the particle Body\n     * @type {number}\n     */\n    this.h = h || w;\n  }\n\n  /**\n   * Sets the particle's initial body.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    var body = this.body.getValue();\n\n    if (this.w) {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        body: body,\n      };\n    } else {\n      particle.body = body;\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.body - The color for the particle body\n   * @property {number} json.width - The width of the particle body\n   * @property {number} json.height - The height of the particle body\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { body, width, height, isEnabled = true } = json;\n\n    return new Body(body, width, height, isEnabled);\n  }\n}\n", "import {\n  AdditiveBlending,\n  CustomBlending,\n  MultiplyBlending,\n  NoBlending,\n  NormalBlending,\n  SubtractiveBlending,\n} from '../core/three/';\n\nexport const SUPPORTED_MATERIAL_BLENDING_MODES = {\n  AdditiveBlending,\n  CustomBlending,\n  MultiplyBlending,\n  NoBlending,\n  NormalBlending,\n  SubtractiveBlending,\n};\n\nexport const DEFAULT_MATERIAL_PROPERTIES = {\n  color: 0xff0000,\n  blending: AdditiveBlending,\n  fog: true,\n};\nexport const DEFAULT_JSON_MATERIAL_PROPERTIES = {\n  ...DEFAULT_MATERIAL_PROPERTIES,\n  blending: 'AdditiveBlending',\n};\nexport const DEFAULT_RATE_NUM_PAN = 1;\nexport const DEFAULT_RATE_TIME_PAN = 1;\n", "import {\n  DEFAULT_JSON_MATERIAL_PROPERTIES,\n  DEFAULT_MATERIAL_PROPERTIES,\n  SUPPORTED_MATERIAL_BLENDING_MODES,\n} from './constants';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_BODY_SPRITE as type } from './types';\nimport { withDefaults } from '../utils';\n\n/**\n * Sets the body property to be a THREE.Sprite on initialized particles.\n *\n * NOTE The texture map MUST be set on the SpriteMaterial in the TextureLoader.load\n * callback. Not doing so will cause WebGL buffer errors.\n */\nexport default class BodySprite extends Initializer {\n  /**\n   * Constructs a BodySprite initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object} materialProperties - The sprite material properties\n   * @throws {Error} If the TextureLoader fails to load the supplied texture\n   * @return void\n   */\n  constructor(\n    THREE,\n    texture,\n    materialProperties = DEFAULT_MATERIAL_PROPERTIES,\n    isEnabled = true\n  ) {\n    super(type, isEnabled);\n\n    const { Sprite, SpriteMaterial, TextureLoader } = THREE;\n\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n    this.materialProperties = withDefaults(\n      DEFAULT_MATERIAL_PROPERTIES,\n      materialProperties\n    );\n\n    new TextureLoader().load(\n      texture,\n      map => {\n        /**\n         * @desc The texture for the THREE.SpriteMaterial map.\n         * @type {Texture}\n         */\n        this.texture = map;\n\n        /**\n         * @desc THREE.SpriteMaterial instance.\n         * @type {SpriteMaterial}\n         */\n        this.material = new SpriteMaterial({\n          ...{ map },\n          ...this.materialProperties,\n        });\n\n        /**\n         * @desc THREE.Sprite instance.\n         * @type {Sprite}\n         */\n        this.sprite = new Sprite(this.material);\n      },\n      undefined,\n      error => {\n        throw new Error(error);\n      }\n    );\n  }\n\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n\n  /**\n   * Creates a BodySprite initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} json.texture - The sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n  static fromJSON(json, THREE) {\n    const {\n      texture,\n      materialProperties = DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true,\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const { blending } = properties;\n\n      return {\n        ...properties,\n        blending: blending\n          ? SUPPORTED_MATERIAL_BLENDING_MODES[blending]\n          : SUPPORTED_MATERIAL_BLENDING_MODES[\n            DEFAULT_JSON_MATERIAL_PROPERTIES.blending\n          ],\n      };\n    };\n\n    return new BodySprite(\n      THREE,\n      texture,\n      withDefaults(\n        DEFAULT_JSON_MATERIAL_PROPERTIES,\n        ensureMappedBlendingMode(materialProperties)\n      ),\n      isEnabled\n    );\n  }\n}\n", "import { Euler } from '../core/three/';\n\nconst particleEuler = new Euler();\n\nexport default {\n  particleEuler: null,\n  /**\n   * Loops through the initializers array and calls each initializer's initialize method\n   * on the supplied particle. This sets the particle's initial properties.\n   *\n   * @see {@link '../emitter/Emitter'} setupParticle\n   * @param {Emitter} emitter - The emitter that has called this method\n   * @param {Particle} particle - The particle that has just been created\n   * @param {array<Initializer>} initializers - All of the emitter's initializers\n   * @return void\n   */\n  initialize: function(emitter, particle, initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      initializers[i].init(emitter, particle);\n    }\n\n    emitter.bindEmitter && this.bindEmitter(emitter, particle);\n  },\n\n  /**\n   * Ensures that the emitter's position, velocity and accleration are added\n   * to each created particle.\n   *\n   * @param {Emitter} emitter - The emitter that is emitting the particles\n   * @param {Particle} particle - The newly created particle\n   * @return void\n   */\n  bindEmitter: function(emitter, particle) {\n    const {\n      rotation: { x, y, z },\n    } = emitter;\n\n    particle.position.add(emitter.position);\n    particle.velocity.add(emitter.velocity);\n    particle.acceleration.add(emitter.acceleration);\n    particle.velocity.applyEuler(particleEuler.set(x, y, z));\n  },\n};\n", "import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_LIFE as type } from './types';\n\n/**\n * Sets the life property on initialized particles.\n *\n */\nexport default class Life extends Initializer {\n  /**\n   * Constructs a Life property instance.\n   *\n   * @param {number} min - The minimum life\n   * @param {number} max - The maximum life\n   * @param {boolean} [center] - Determines whether to average the life value\n   * @param {boolean} [isEnabled=true] - Determines if the initializer should be enabled or not\n   * @return void\n   */\n  constructor(min, max, center, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The life span of the particle.\n     * @type {Span}\n     */\n    this.lifePan = createSpan(min, max, center);\n  }\n\n  /**\n   * Sets the particle's initial life.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    if (this.lifePan.a == Infinity || this.lifePan.a == 'infi') {\n      particle.life = Infinity;\n    } else {\n      particle.life = this.lifePan.getValue();\n    }\n  }\n\n  /**\n   * Creates a Life initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.min - The minimum life time\n   * @param {number} json.max - The maximum life time\n   * @param {number} json.center - The center of the life time\n   * @param {boolean} [json.isEnabled=true] - Determines if the initializer should be enabled or not\n   * @return {Life}\n   */\n  static fromJSON(json) {\n    const { min, max, center = false, isEnabled = true } = json;\n\n    return new Life(min, max, center, isEnabled);\n  }\n}\n", "import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_MASS as type } from './types';\n\n/**\n * Sets the mass property on initialized particles.\n *\n */\nexport default class Mass extends Initializer {\n  /**\n   * Constructs a Mass initializer instance.\n   *\n   * @param {number} min - The minumum mass for the particle\n   * @param {number} max - The maximum mass for the particle\n   * @param {boolean} [center] - Determines whether to average the mass value\n   * @return void\n   */\n  constructor(min, max, center = false, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The mass span which is used to set the particle mass value.\n     * @type {Span}\n     */\n    this.massPan = createSpan(min, max, center);\n  }\n\n  /**\n   * Sets the particle's initial mass.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    particle.mass = this.massPan.getValue();\n  }\n\n  /**\n   * Creates a Mass initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.min - The minimum mass\n   * @property {number} json.max - The maximum mass\n   * @property {number} json.center - The center of the mass\n   * @return {Mass}\n   */\n  static fromJSON(json) {\n    const { min, max, center = false, isEnabled = true } = json;\n\n    return new Mass(min, max, center, isEnabled);\n  }\n}\n", "export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}", "export { default as BoxZone } from './BoxZone';\nexport { default as LineZone } from './LineZone';\nexport { default as MeshZone } from './MeshZone';\nexport { default as PointZone } from './PointZone';\nexport { default as ScreenZone } from './ScreenZone';\nexport { default as SphereZone } from './SphereZone';\n", "import Vector3D from '../math/Vector3D';\nimport { ZONE_TYPE_ABSTRACT } from './types';\n\n/**\n * A Zone determines the area in 3D space where an emitter's particles can position\n * themselves. They are supplied to both the Position initializer\n * and the CrossZone behaviour.\n *\n * @see {@link '../initialize/Position.js'}\n * @see {@link '../behaviour/CrossZone.js'}\n * @abstract\n */\nexport default class Zone {\n  /**\n   * Constructs a Zone instance.\n   *\n   * @param {string} type - The zone type\n   * @return void\n   */\n  constructor(type = ZONE_TYPE_ABSTRACT) {\n    this.type = type;\n    this.vector = new Vector3D(0, 0, 0);\n    this.random = 0;\n    this.crossType = 'dead';\n    this.log = true;\n    this.supportsCrossing = true;\n  }\n\n  getPosition() {\n    return null;\n  }\n\n  crossing(particle) {\n    if (!this.supportsCrossing) {\n      return console.warn(\n        `${this.constructor.name} does not support the crossing method`\n      );\n    }\n\n    switch (this.crossType) {\n      case 'bound':\n        this._bound(particle);\n        break;\n\n      case 'cross':\n        this._cross(particle);\n        break;\n\n      case 'dead':\n        this._dead(particle);\n        break;\n    }\n  }\n\n  /**\n   * Determines if this zone is a BoxZone.\n   *\n   * @return {boolean}\n   */\n  isBoxZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a LineZone.\n   *\n   * @return {boolean}\n   */\n  isLineZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a MeshZone.\n   *\n   * @return {boolean}\n   */\n  isMeshZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a PointZone.\n   *\n   * @return {boolean}\n   */\n  isPointZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a ScreenZone.\n   *\n   * @return {boolean}\n   */\n  isScreenZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a SphereZone.\n   *\n   * @return {boolean}\n   */\n  isSphereZone() {\n    return false;\n  }\n\n  /**\n   * Sets the particle's dead property to true if required.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n  _dead(particle) {} //eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  _bound(particle) {} //eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  _cross(particle) {} //eslint-disable-line\n}\n", "import MathUtils from '../math/MathUtils';\nimport Util from '../utils/Util';\nimport Zone from './Zone';\nimport { ZONE_TYPE_BOX as type } from './types';\n\nexport default class BoxZone extends Zone {\n  /**\n   * BoxZone is a box zone\n   * @param {Number|Vector3D} x - the position's x value or a Vector3D Object\n   * @param {Number} y - the position's y value\n   * @param {Number} z - the position's z value\n   * @param {Number} w - the Box's width\n   * @param {Number} h - the Box's height\n   * @param {Number} d - the Box's depth\n   * @example\n   * var boxZone = new BoxZone(0,0,0,50,50,50);\n   * or\n   * var boxZone = new BoxZone(new Vector3D(0,0,0), 50, 50, 50);\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, c, d, e, f) {\n    super(type);\n\n    // TODO this reassigning of arguments is pretty dangerous, need to fix it.\n    // eslint-disable-next-line\n    var x, y, z, w, h, d;\n\n    if (Util.isUndefined(b, c, d, e, f)) {\n      x = y = z = 0;\n      w = h = d = a || 100;\n    } else if (Util.isUndefined(d, e, f)) {\n      x = y = z = 0;\n      w = a;\n      h = b;\n      d = c;\n    } else {\n      x = a;\n      y = b;\n      z = c;\n      w = d;\n      h = e;\n      d = f;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.width = w;\n    this.height = h;\n    this.depth = d;\n    // TODO Set this via an argument to the constructor\n    this.friction = 0.85;\n    // TODO Set this via an argument to the constructor\n    this.max = 6;\n  }\n\n  /**\n   * Returns true to indicate this is a BoxZone.\n   *\n   * @return {boolean}\n   */\n  isBoxZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + MathUtils.randomAToB(-0.5, 0.5) * this.width;\n    this.vector.y = this.y + MathUtils.randomAToB(-0.5, 0.5) * this.height;\n    this.vector.z = this.z + MathUtils.randomAToB(-0.5, 0.5) * this.depth;\n\n    return this.vector;\n  }\n\n  _dead(particle) {\n    if (particle.position.x + particle.radius < this.x - this.width / 2)\n      particle.dead = true;\n    else if (particle.position.x - particle.radius > this.x + this.width / 2)\n      particle.dead = true;\n\n    if (particle.position.y + particle.radius < this.y - this.height / 2)\n      particle.dead = true;\n    else if (particle.position.y - particle.radius > this.y + this.height / 2)\n      particle.dead = true;\n\n    if (particle.position.z + particle.radius < this.z - this.depth / 2)\n      particle.dead = true;\n    else if (particle.position.z - particle.radius > this.z + this.depth / 2)\n      particle.dead = true;\n  }\n\n  _bound(particle) {\n    if (particle.position.x - particle.radius < this.x - this.width / 2) {\n      particle.position.x = this.x - this.width / 2 + particle.radius;\n      particle.velocity.x *= -this.friction;\n      this._static(particle, 'x');\n    } else if (particle.position.x + particle.radius > this.x + this.width / 2) {\n      particle.position.x = this.x + this.width / 2 - particle.radius;\n      particle.velocity.x *= -this.friction;\n      this._static(particle, 'x');\n    }\n\n    if (particle.position.y - particle.radius < this.y - this.height / 2) {\n      particle.position.y = this.y - this.height / 2 + particle.radius;\n      particle.velocity.y *= -this.friction;\n      this._static(particle, 'y');\n    } else if (particle.position.y + particle.radius > this.y + this.height / 2) {\n      particle.position.y = this.y + this.height / 2 - particle.radius;\n      particle.velocity.y *= -this.friction;\n      this._static(particle, 'y');\n    }\n\n    if (particle.position.z - particle.radius < this.z - this.depth / 2) {\n      particle.position.z = this.z - this.depth / 2 + particle.radius;\n      particle.velocity.z *= -this.friction;\n      this._static(particle, 'z');\n    } else if (particle.position.z + particle.radius > this.z + this.depth / 2) {\n      particle.position.z = this.z + this.depth / 2 - particle.radius;\n      particle.velocity.z *= -this.friction;\n      this._static(particle, 'z');\n    }\n  }\n\n  _static(particle, axis) {\n    if (particle.velocity[axis] * particle.acceleration[axis] > 0) return;\n    if (\n      Math.abs(particle.velocity[axis]) <\n      Math.abs(particle.acceleration[axis]) * 0.0167 * this.max\n    ) {\n      particle.velocity[axis] = 0;\n      particle.acceleration[axis] = 0;\n    }\n  }\n\n  _cross(particle) {\n    if (\n      particle.position.x + particle.radius < this.x - this.width / 2 &&\n      particle.velocity.x <= 0\n    )\n      particle.position.x = this.x + this.width / 2 + particle.radius;\n    else if (\n      particle.position.x - particle.radius > this.x + this.width / 2 &&\n      particle.velocity.x >= 0\n    )\n      particle.position.x = this.x - this.width / 2 - particle.radius;\n\n    if (\n      particle.position.y + particle.radius < this.y - this.height / 2 &&\n      particle.velocity.y <= 0\n    )\n      particle.position.y = this.y + this.height / 2 + particle.radius;\n    else if (\n      particle.position.y - particle.radius > this.y + this.height / 2 &&\n      particle.velocity.y >= 0\n    )\n      particle.position.y = this.y - this.height / 2 - particle.radius;\n\n    if (\n      particle.position.z + particle.radius < this.z - this.depth / 2 &&\n      particle.velocity.z <= 0\n    )\n      particle.position.z = this.z + this.depth / 2 + particle.radius;\n    else if (\n      particle.position.z - particle.radius > this.z + this.depth / 2 &&\n      particle.velocity.z >= 0\n    )\n      particle.position.z = this.z - this.depth / 2 - particle.radius;\n  }\n}\n", "import Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_LINE as type } from './types';\n\nexport default class LineZone extends Zone {\n  /**\n   * LineZone is a 3d line zone\n   * @param {Number|Vector3D} x1 - the line's start point of x value or a Vector3D Object\n   * @param {Number|Vector3D} y1 - the line's start point of y value or a Vector3D Object\n   * @param {Number} z1 - the line's start point of z value\n   * @param {Number} x2 - the line's end point of x value\n   * @param {Number} y2 - the line's end point of y value\n   * @param {Number} z2 - the line's end point of z value\n   * @example\n   * var lineZone = new System.LineZone(0,0,0,100,100,0);\n   * or\n   * var lineZone = new System.LineZone(new System.Vector3D(0,0,0),new System.Vector3D(100,100,0));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(x1, y1, z1, x2, y2, z2) {\n    super(type);\n\n    if (x1 instanceof Vector3D) {\n      this.x1 = x1.x;\n      this.y1 = x1.y;\n      this.z1 = x1.z;\n\n      this.x2 = x2.x;\n      this.y2 = x2.y;\n      this.z2 = x2.z;\n    } else {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.z1 = z1;\n\n      this.x2 = x2;\n      this.y2 = y2;\n      this.z2 = z2;\n    }\n\n    this.supportsCrossing = false;\n  }\n\n  /**\n   * Returns true to indicate this is a LineZone.\n   *\n   * @return {boolean}\n   */\n  isLineZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.random = Math.random();\n    this.vector.x = this.x1 + this.random * (this.x2 - this.x1);\n    this.vector.y = this.y1 + this.random * (this.y2 - this.y1);\n    this.vector.z = this.z1 + this.random * (this.z2 - this.z1);\n\n    return this.vector;\n  }\n}\n", "import Zone from './Zone';\nimport { ZONE_TYPE_MESH as type } from './types';\n\n/**\n * Uses a three THREE.Geometry to determine the zone parameters.\n *\n */\nexport default class MeshZone extends Zone {\n  /**\n   * @constructs {MeshZone}\n   *\n   * @param {THREE.Geometry|Mesh} bounds - the geometry or mesh that will determine the zone bounds\n   * @param {number} scale - the zone scale\n   * @param {THREE.Geometry} ThreeGeometry - the three geometry class\n   * @return void\n   */\n  constructor(bounds, scale = 1, ThreeGeometry) {\n    super(type);\n\n    this.geometry = null;\n    this.scale = scale;\n    this.supportsCrossing = false;\n\n    if (bounds.type && bounds.type === 'Geometry') {\n      this.geometry = bounds;\n    }\n\n    if (bounds.geometry) {\n      this.geometry = bounds.geometry;\n    }\n\n    if (!this.geometry) {\n      throw new Error(\n        'MeshZone unable to set geometry from the supplied bounds'\n      );\n    }\n\n    if (this.geometry.isBufferGeometry) {\n      this.geometry = new ThreeGeometry().fromBufferGeometry(this.geometry);\n    }\n  }\n\n  /**\n   * Returns true to indicate this is a MeshZone.\n   *\n   * @return {boolean}\n   */\n  isMeshZone() {\n    return true;\n  }\n\n  getPosition() {\n    const vertices = this.geometry.vertices;\n    const rVector = vertices[(vertices.length * Math.random()) >> 0];\n\n    this.vector.x = rVector.x * this.scale;\n    this.vector.y = rVector.y * this.scale;\n    this.vector.z = rVector.z * this.scale;\n\n    return this.vector;\n  }\n}\n", "import Util from '../utils/Util';\nimport Zone from './Zone';\nimport { ZONE_TYPE_POINT as type } from './types';\n\nexport default class PointZone extends Zone {\n  /**\n   * PointZone is a point zone\n   * @param {Number|Vector3D} x - the center's x value or a Vector3D Object\n   * @param {Number} y - the center's y value\n   * @param {Number} z - the center's z value\n   * @example\n   * var pointZone = new System.PointZone(0,30,10);\n   * or\n   * var pointZone = new System.PointZone(new System.Vector3D(0,30,10));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, c) {\n    super(type);\n\n    // TODO see below, these should probably be assigned properly\n    // eslint-disable-next-line\n    var x, y, z;\n\n    if (Util.isUndefined(a, b, c)) {\n      x = y = z = 0;\n    } else {\n      x = a;\n      // eslint-disable-next-line\n      y = b;\n      // eslint-disable-next-line\n      z = c;\n    }\n\n    this.x = x;\n\n    // TODO shouldn't this be set to y?\n    this.y = x;\n\n    // TODO shouldn't this be set to z?\n    this.z = x;\n    this.supportsCrossing = false;\n  }\n\n  /**\n   * Returns true to indicate this is a PointZone.\n   *\n   * @return {boolean}\n   */\n  isPointZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n    this.vector.z = this.z;\n\n    return this.vector;\n  }\n}\n", "import THREEUtil from '../utils/THREEUtil';\nimport Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_SCREEN as type } from './types';\n\nexport default class ScreenZone extends Zone {\n  /**\n   * ScreenZone is a 3d line zone\n   * @param {Number|Vector3D} x1 - the line's start point of x value or a Vector3D Object\n   * @param {Number|Vector3D} y1 - the line's start point of y value or a Vector3D Object\n   * @param {Number} z1 - the line's start point of z value\n   * @param {Number} x2 - the line's end point of x value\n   * @param {Number} y2 - the line's end point of y value\n   * @param {Number} z2 - the line's end point of z value\n   * @example\n   * var lineZone = new ScreenZone(0,0,0,100,100,0);\n   * or\n   * var lineZone = new ScreenZone(new Vector3D(0,0,0),new Vector3D(100,100,0));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(camera, renderer, dis, dir) {\n    super(type);\n\n    this.camera = camera;\n    this.renderer = renderer;\n    this.dis = dis || 20;\n    dir = dir || '1234';\n\n    for (var i = 1; i < 5; i++) this['d' + i] = dir.indexOf(i + '') >= 0;\n  }\n\n  /**\n   * Returns true to indicate this is a ScreenZone.\n   *\n   * @return {boolean}\n   */\n  isScreenZone() {\n    return true;\n  }\n\n  _dead(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis && this.d1) {\n      particle.dead = true;\n    } else if (pos.y - particle.radius > canvas.height + this.dis && this.d3) {\n      particle.dead = true;\n    }\n\n    if (pos.x + particle.radius < -this.dis && this.d4) {\n      particle.dead = true;\n    } else if (pos.x - particle.radius > canvas.width + this.dis && this.d2) {\n      particle.dead = true;\n    }\n  }\n\n  _bound(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis) {\n      particle.velocity.y *= -1;\n    } else if (pos.y - particle.radius > canvas.height + this.dis) {\n      particle.velocity.y *= -1;\n    }\n\n    if (pos.x + particle.radius < -this.dis) {\n      particle.velocity.y *= -1;\n    } else if (pos.x - particle.radius > canvas.width + this.dis) {\n      particle.velocity.y *= -1;\n    }\n  }\n}\n\nScreenZone.prototype.getPosition = (function() {\n  var vec2 = new Vector3D(),\n    canvas;\n\n  return function() {\n    canvas = this.renderer.domElement;\n    vec2.x = Math.random() * canvas.width;\n    vec2.y = Math.random() * canvas.height;\n    this.vector.copy(THREEUtil.toSpacePos(vec2, this.camera, canvas));\n\n    return this.vector;\n  };\n})();\n\nScreenZone.prototype._cross = (function() {\n  var vec2 = new Vector3D();\n\n  return function(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis) {\n      vec2.x = pos.x;\n      vec2.y = canvas.height + this.dis + particle.radius;\n      particle.position.y = THREEUtil.toSpacePos(vec2, this.camera, canvas).y;\n    } else if (pos.y - particle.radius > canvas.height + this.dis) {\n      vec2.x = pos.x;\n      vec2.y = -this.dis - particle.radius;\n      particle.position.y = THREEUtil.toSpacePos(vec2, this.camera, canvas).y;\n    }\n\n    if (pos.x + particle.radius < -this.dis) {\n      vec2.y = pos.y;\n      vec2.x = canvas.width + this.dis + particle.radius;\n      particle.position.x = THREEUtil.toSpacePos(vec2, this.camera, canvas).x;\n    } else if (pos.x - particle.radius > canvas.width + this.dis) {\n      vec2.y = pos.y;\n      vec2.x = -this.dis - particle.radius;\n      particle.position.x = THREEUtil.toSpacePos(vec2, this.camera, canvas).x;\n    }\n  };\n})();\n", "import { PI } from '../constants';\nimport Util from '../utils/Util';\nimport Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_SPHERE as type } from './types';\n\n/**\n * A spherical zone for particles to be emitted within.\n *\n */\nexport default class SphereZone extends Zone {\n  /**\n   * @constructs {SphereZone}\n   *\n   * @param {number} centerX - the sphere's center x coordinate\n   * @param {number} centerY - the sphere's center y coordinate\n   * @param {number} centerZ - the sphere's center z coordinate\n   * @param {number} radius - the sphere's radius value\n   * @return void\n   */\n  constructor(centerX, centerY, centerZ, radius) {\n    super(type);\n\n    // TODO see below, these should probably be assigned properly\n    // eslint-disable-next-line\n    let x, y, z, r;\n\n    if (Util.isUndefined(centerY, centerZ, radius)) {\n      x = y = z = 0;\n      r = centerX || 100;\n    } else {\n      x = centerX;\n      // eslint-disable-next-line\n      y = centerY;\n      // eslint-disable-next-line\n      z = centerZ;\n      r = radius;\n    }\n\n    this.x = x;\n\n    // TODO shouldn't this be set to y?\n    this.y = x;\n\n    // TODO shouldn't this be set to z?\n    this.z = x;\n    this.radius = r;\n    this.the = this.phi = 0;\n  }\n\n  /**\n   * Returns true to indicate this is a SphereZone.\n   *\n   * @return {boolean}\n   */\n  isSphereZone() {\n    return true;\n  }\n\n  /**\n   * Sets the particle to dead if the particle collides with the sphere.\n   *\n   * @param {object} particle\n   * @return void\n   */\n  _dead(particle) {\n    var d = particle.position.distanceTo(this);\n\n    if (d - particle.radius > this.radius) particle.dead = true;\n  }\n\n  /**\n   * Warns that this zone does not support the _cross method.\n   *\n   * @return void\n   */\n  _cross() {\n    console.warn(`${this.constructor.name} does not support the _cross method`);\n  }\n}\n\nSphereZone.prototype.getPosition = (function() {\n  var tha, phi, r;\n\n  return function() {\n    this.random = Math.random();\n\n    r = this.random * this.radius;\n    tha = PI * Math.random(); //[0-pi]\n    phi = PI * 2 * Math.random(); //[0-2pi]\n\n    this.vector.x = this.x + r * Math.sin(tha) * Math.cos(phi);\n    this.vector.y = this.y + r * Math.sin(phi) * Math.sin(tha);\n    this.vector.z = this.z + r * Math.cos(tha);\n\n    return this.vector;\n  };\n})();\n\nSphereZone.prototype._bound = (function() {\n  var normal = new Vector3D(),\n    v = new Vector3D(),\n    k;\n\n  return function(particle) {\n    var d = particle.position.distanceTo(this);\n\n    if (d + particle.radius >= this.radius) {\n      normal\n        .copy(particle.position)\n        .sub(this)\n        .normalize();\n      v.copy(particle.velocity);\n      k = 2 * v.dot(normal);\n      particle.velocity.sub(normal.scalar(k));\n    }\n  };\n})();\n", "import * as Zone from '../zone';\n\nimport Initializer from './Initializer';\nimport { SUPPORTED_JSON_ZONE_TYPES } from '../core/constants';\nimport { INITIALIZER_TYPE_POSITION as type } from './types';\n\n/**\n * Sets the starting position property for initialized particles.\n * This is derived from a zone randomly chosen from those supplied to the constructor.\n *\n */\nexport default class Position extends Initializer {\n  /**\n   * Constructs a Position initializer instance.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  constructor() {\n    super(type);\n\n    this.reset.apply(this, arguments);\n  }\n\n  /**\n   * Resets the initializer properties.\n   * Clears all previously set zones and resets the zones according to args passed.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  reset() {\n    if (!this.zones) {\n      this.zones = [];\n    } else {\n      this.zones.length = 0;\n    }\n\n    /**\n     * @desc The zones to use as bounds for calculating the particle's starting position.\n     * @type {array<Zone>}\n     */\n    this.zones = this.zones.concat(Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Adds a zone or zones to this.zones.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  addZone() {\n    this.zones = this.zones.concat(Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Creates a Position initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {string} json.zoneType - The type of zone to use for initial position\n   * @return {Position}\n   */\n  static fromJSON(json) {\n    const { zoneType, ...params } = json;\n\n    if (!SUPPORTED_JSON_ZONE_TYPES.includes(zoneType)) {\n      throw new Error(\n        `The zone type ${zoneType} is invalid or not yet supported`\n      );\n    }\n\n    return new Position(new Zone[zoneType](...Object.values(params)));\n  }\n}\n\n/**\n * Sets the particle's initial position.\n *\n * @param {Particle} particle - the particle to initialize the property on\n * @return void\n */\nPosition.prototype.initialize = (function() {\n  let zone;\n\n  return function(target) {\n    zone = this.zones[(Math.random() * this.zones.length) >> 0];\n\n    zone.getPosition();\n\n    target.position.x = zone.vector.x;\n    target.position.y = zone.vector.y;\n    target.position.z = zone.vector.z;\n  };\n})();\n", "import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_RADIUS as type } from './types';\n/**\n * Sets the radius property on initialized particles.\n *\n */\nexport default class Radius extends Initializer {\n  /**\n   * Constructs a Radius initializer instance.\n   *\n   * @param {number} width - The width of the particle radius\n   * @param {number} height - The height of the particle radius\n   * @param {boolean} [center=false] - Determines whether to average the radius value\n   * @return void\n   */\n  constructor(width, height, center = false, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The radius span which is used to set the particle radius value.\n     * @type {Span}\n     */\n    this.radius = createSpan(width, height, center);\n  }\n\n  /**\n   * Resets the initializer properties.\n   * Clears all previously set zones and resets the zones according to args passed.\n   *\n   * @param {number} width - The width of the particle radius\n   * @param {number} height - The height of the particle radius\n   * @param {boolean} [center=false] - Determines whether to average the radius value\n   * @return void\n   */\n  reset(width, height, center = false) {\n    this.radius = createSpan(width, height, center);\n  }\n\n  /**\n   * Sets the particle's initial radius.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.transform.oldRadius = particle.radius;\n  }\n\n  /**\n   * Creates a Radius initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.width - The width of the particle radius\n   * @property {number} json.height - The height of the particle radius\n   * @property {number} json.center - The center of the particle radius\n   * @return {Radius}\n   */\n  static fromJSON(json) {\n    const { width, height, center = false, isEnabled = true } = json;\n\n    return new Radius(width, height, center, isEnabled);\n  }\n}\n", "import { DEFAULT_RATE_NUM_PAN, DEFAULT_RATE_TIME_PAN } from './constants';\nimport { Span, createSpan } from '../math';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_RATE as type } from './types';\n\n/**\n * Calculates the rate of particle emission.\n *\n * NOTE This doesn't need to be an initializer, it doesn't have an initialize\n * method, it overrides the base init method and it is only relevent to the Emitter class.\n * It would be better to move this to the Emitter module itself as a standalone class.\n *\n */\nexport default class Rate extends Initializer {\n  /**\n   * Constructs a Rate instance.\n   *\n   * @param {number|array|Span} numPan - The number of particles to emit\n   * @param {number|array|Span} timePan - The time between each particle emission\n   * @return void\n   */\n  constructor(numPan = DEFAULT_RATE_NUM_PAN, timePan = DEFAULT_RATE_TIME_PAN) {\n    super(type);\n\n    /**\n     * @desc Sets the number of particles to emit.\n     * @type {Span}\n     */\n    this.numPan = createSpan(numPan);\n\n    /**\n     * @desc Sets the time between each particle emission.\n     * @type {Span}\n     */\n    this.timePan = createSpan(timePan);\n\n    /**\n     * @desc The rate's start time.\n     * @type {number}\n     */\n    this.startTime = 0;\n\n    /**\n     * @desc The rate's next time.\n     * @type {number}\n     */\n    this.nextTime = 0;\n\n    this.init();\n  }\n\n  /**\n   * Sets the startTime and nextTime properties.\n   *\n   * @return void\n   */\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  /**\n   * Gets the number of particles to emit.\n   *\n   * @param {number} time - Current particle engine time\n   * @return {number}\n   */\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.init();\n\n      if (this.numPan.b == 1) {\n        if (this.numPan.getValue('Float') > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue('Int');\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Creates a Rate initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.particlesMin - The minimum number of particles to emit\n   * @property {number} json.particlesMax - The maximum number of particles to emit\n   * @property {number} json.perSecondMin - The minimum per second emit rate\n   * @property {number} json.perSecondMax - The maximum per second emit rate\n   * @return {Rate}\n   */\n  static fromJSON(json) {\n    const { particlesMin, particlesMax, perSecondMin, perSecondMax } = json;\n\n    return new Rate(\n      new Span(particlesMin, particlesMax),\n      new Span(perSecondMin, perSecondMax)\n    );\n  }\n}\n", "import {\n  DEFAULT_JSON_MATERIAL_PROPERTIES,\n  DEFAULT_MATERIAL_PROPERTIES,\n  SUPPORTED_MATERIAL_BLENDING_MODES,\n} from './constants';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_TEXTURE as type } from './types';\nimport { withDefaults } from '../utils';\n\n/**\n * Sets the body property to be a THREE.Sprite with a texture map on initialized particles.\n *\n */\nexport default class Texture extends Initializer {\n  /**\n   * Constructs an Texture initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object|undefined} materialProperties - The sprite material properties\n   * @param {?Texture} loadedTexture - Preloaded THREE.Texture instance\n   */\n  constructor(\n    THREE,\n    loadedTexture,\n    materialProperties = DEFAULT_MATERIAL_PROPERTIES,\n    isEnabled = true\n  ) {\n    super(type, isEnabled);\n\n    const { Sprite, SpriteMaterial } = THREE;\n\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n    this.materialProperties = withDefaults(\n      DEFAULT_MATERIAL_PROPERTIES,\n      materialProperties\n    );\n\n    /**\n     * @desc The texture for the THREE.SpriteMaterial map.\n     * @type {Texture}\n     */\n    this.texture = loadedTexture;\n\n    /**\n     * @desc THREE.SpriteMaterial instance.\n     * @type {SpriteMaterial}\n     */\n    this.material = new SpriteMaterial({\n      ...{ map: loadedTexture },\n      ...this.materialProperties,\n    });\n\n    /**\n     * @desc THREE.Sprite instance.\n     * @type {Sprite}\n     */\n    this.sprite = new Sprite(this.material);\n  }\n\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n\n  /**\n   * Creates a Texture initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {Texture} json.loadedTexture - The loaded sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n  static fromJSON(json, THREE) {\n    const {\n      loadedTexture,\n      materialProperties = DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true,\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const { blending } = properties;\n\n      return {\n        ...properties,\n        blending: blending\n          ? SUPPORTED_MATERIAL_BLENDING_MODES[blending]\n          : SUPPORTED_MATERIAL_BLENDING_MODES[\n            DEFAULT_JSON_MATERIAL_PROPERTIES.blending\n          ],\n      };\n    };\n\n    return new Texture(\n      THREE,\n      loadedTexture,\n      withDefaults(\n        DEFAULT_JSON_MATERIAL_PROPERTIES,\n        ensureMappedBlendingMode(materialProperties)\n      ),\n      isEnabled\n    );\n  }\n}\n", "import { MEASURE, PI } from '../../constants';\nimport { MathUtils, Vector3D } from '../../math';\n\nimport Initializer from '../Initializer';\n\n/**\n * Abstract class for Velocity initializers.\n *\n */\nexport default class Velocity extends Initializer {\n  /**\n   * Constructs a Velocity intitializer instance.\n   *\n   * @return void\n   */\n  constructor(type, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Directional vector\n     * @type {Vector3D}\n     */\n    this.dirVec = new Vector3D(0, 0, 0);\n  }\n\n  normalize(vr) {\n    return vr * MEASURE;\n  }\n}\n\n/**\n * Sets the particle's initial velocity.\n *\n * @singleton\n * @param {Particle} particle - the particle to initialize the property on\n * @return void\n */\nVelocity.prototype.initialize = (function() {\n  var tha;\n  var normal = new Vector3D(0, 0, 1);\n  var v = new Vector3D(0, 0, 0);\n\n  return function initialize(particle) {\n    tha = this.tha * Math.random();\n    this._useV && this.dirVec.copy(this.dir).scalar(this.radiusPan.getValue());\n\n    MathUtils.getNormal(this.dirVec, normal);\n    v.copy(this.dirVec).applyAxisAngle(normal, tha);\n    v.applyAxisAngle(this.dirVec.normalize(), Math.random() * PI * 2);\n\n    particle.velocity.copy(v);\n\n    return this;\n  };\n})();\n", "import { DR } from '../../constants';\nimport { Polar3D } from '../../math';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_POLAR_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class PolarVelocity extends Velocity {\n  /**\n   * Constructs a PolarVelocity initializer.\n   *\n   * @param {Polar3D} polar3d - The polar vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(polar3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Directional vector\n     * @type {Vector3D}\n     */\n    this.dirVec = polar3d.toVector3D();\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = false;\n  }\n\n  /**\n   * Creates a PolarVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.polarRadius - The Polar3D radius\n   * @param {number} json.polarTheta - The Polar3D theta\n   * @param {number} json.polarPhi - The Polar3D phi\n   * @param {number} json.velocityTheta - The velocity theta\n   * @return {PolarVelocity}\n   */\n  static fromJSON(json) {\n    const {\n      polarRadius,\n      polarTheta,\n      polarPhi,\n      velocityTheta,\n      isEnabled = true,\n    } = json;\n\n    return new PolarVelocity(\n      new Polar3D(polarRadius, polarTheta, polarPhi),\n      velocityTheta,\n      isEnabled\n    );\n  }\n}\n", "import { Vector3D, createSpan } from '../../math';\n\nimport { DR } from '../../constants';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_RADIAL_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class RadialVelocity extends Velocity {\n  /**\n   * Constructs a RadialVelocity initializer.\n   *\n   * @param {number|Span} radius - The velocity radius\n   * @param {Vector3D} vector3d - The directional vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(radius, vector3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Velocity radius span.\n     * @type {Span}\n     */\n    this.radiusPan = createSpan(radius);\n\n    /**\n     * @desc Direction vector.\n     * @type {Vector3D}\n     */\n    this.dir = vector3d.clone().normalize();\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = true;\n  }\n\n  /**\n   * Creates a RadialVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.radius - The velocity radius\n   * @param {number} json.x - The velocity x axis direction\n   * @param {number} json.y - The velocity y axis direction\n   * @param {number} json.z - The velocity z axis direction\n   * @param {number} json.theta - The velocity theta\n   * @return {RadialVelocity}\n   */\n  static fromJSON(json) {\n    const { radius, x, y, z, theta, isEnabled = true } = json;\n\n    return new RadialVelocity(radius, new Vector3D(x, y, z), theta, isEnabled);\n  }\n}\n", "import { Vector3D, createSpan } from '../../math';\n\nimport { DR } from '../../constants';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_VECTOR_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class VectorVelocity extends Velocity {\n  /**\n   * Constructs a VectorVelocity initializer.\n   *\n   * @param {Vector3D} vector3d - The directional vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(vector3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Velocity radius span.\n     * @type {Span}\n     */\n    this.radiusPan = createSpan(1);\n\n    /**\n     * @desc Direction vector.\n     * @type {Vector3D}\n     */\n    this.dir = vector3d.clone();\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = true;\n  }\n\n  /**\n   * Creates a VectorVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.x - The velocity x axis direction\n   * @param {number} json.y - The velocity y axis direction\n   * @param {number} json.z - The velocity z axis direction\n   * @param {number} json.theta - The velocity theta\n   * @return {VectorVelocity}\n   */\n  static fromJSON(json) {\n    const { x, y, z, theta, isEnabled = true } = json;\n\n    return new VectorVelocity(new Vector3D(x, y, z), theta, isEnabled);\n  }\n}\n", "import { Rate } from '../initializer';\n\nexport const DEFAULT_DAMPING = 0.006;\nexport const DEFAULT_BIND_EMITTER = true;\nexport const DEFAULT_EMITTER_RATE = new Rate(1, 0.1);\nexport const DEFAULT_BIND_EMITTER_EVENT = false;\nexport const DEFAULT_EMITTER_INDEX = undefined;\n", "import {\n  DEFAULT_BIND_EMITTER,\n  DEFAULT_BIND_EMITTER_EVENT,\n  DEFAULT_DAMPING,\n  DEFAULT_EMITTER_INDEX,\n  DEFAULT_EMITTER_RATE,\n} from './constants';\nimport EventDispatcher, {\n  EMITTER_DEAD,\n  PARTICLE_CREATED,\n  PARTICLE_DEAD,\n  PARTICLE_UPDATE,\n} from '../events';\nimport { INTEGRATION_TYPE_EULER, integrate } from '../math';\nimport { Util, uid } from '../utils';\n\nimport { InitializerUtil } from '../initializer';\nimport Particle from '../core/Particle';\nimport isNumber from 'lodash/isNumber';\nimport { EMITTER_TYPE_EMITTER as type } from './types';\n\n/**\n * Emitters are the System engine's particle factories. They cause particles to\n * be rendered by emitting them, and store all particle initializers and behaviours.\n *\n */\nexport default class Emitter extends Particle {\n  /**\n   * Constructs an Emitter instance.\n   *\n   * @param {object} properties - The properties to instantiate the emitter with\n   * @return void\n   */\n  constructor(properties) {\n    super(properties);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc The particles emitted by this emitter.\n     * @type {array}\n     */\n    this.particles = [];\n\n    /**\n     * @desc The initializers for particles emitted by this emitter.\n     * @type {array}\n     */\n    this.initializers = [];\n\n    /**\n     * @desc The behaviours for particles emitted by this emitter.\n     * @type {array}\n     */\n    this.behaviours = [];\n\n    /**\n     * @desc The behaviours for the emitter.\n     * @type {array}\n     */\n    this.emitterBehaviours = [];\n\n    /**\n     * @desc The current emit iteration.\n     * @type {integer}\n     */\n    this.currentEmitTime = 0;\n\n    /**\n     * @desc The total number of times the emitter should emit particles.\n     * @type {integer}\n     */\n    this.totalEmitTimes = -1;\n\n    /**\n     * @desc The friction coefficient for all particle to emit by.\n     * @type {number}\n     */\n    this.damping = DEFAULT_DAMPING;\n\n    /**\n     * @desc Ensures that particles emitted by this emitter are positioned\n     * according to the emitter's properties.\n     * @type {boolean}\n     */\n    this.bindEmitter = DEFAULT_BIND_EMITTER;\n\n    /**\n     * @desc Determines if the emitter will dispatch internal events. Defaults\n     * to false\n     * @type {boolean}\n     */\n    this.bindEmitterEvent = DEFAULT_BIND_EMITTER_EVENT;\n\n    /**\n     * @desc The number of particles to emit per second (a [particle]/b [s])\n     * @type {Rate}\n     */\n    this.rate = DEFAULT_EMITTER_RATE;\n\n    /**\n     * @desc Determines if the emitter is emitting particles or not.\n     * @type {boolean}\n     */\n    this.isEmitting = false;\n\n    /**\n     * @desc The emitter's id.\n     * @type {string}\n     */\n    this.id = `emitter-${uid()}`;\n    this.cID = 0;\n    this.name = 'Emitter';\n\n    /**\n     * @desc The index of the emitter as it is added to the system.\n     * @type {number|undefined}\n     */\n    this.index = DEFAULT_EMITTER_INDEX;\n\n    /**\n     * @desc The emitter's internal event dispatcher.\n     * @type {EventDispatcher}\n     */\n    this.eventDispatcher = new EventDispatcher();\n  }\n\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<Particle>} [target=this] - The event target\n   */\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n\n  /**\n   * Sets the emitter rate.\n   *\n   * @param {Rate} rate - a rate initializer object\n   * @return {Emitter}\n   */\n  setRate(rate) {\n    this.rate = rate;\n\n    return this;\n  }\n\n  /**\n   * Sets the position of the emitter.\n   *\n   * @param {object} newPosition - an object the new x, y and z props\n   * @return {Emitter}\n   */\n  setPosition(newPosition = {}) {\n    const { position } = this;\n    const { x = position.x, y = position.y, z = position.z } = newPosition;\n\n    this.position.set(x, y, z);\n\n    return this;\n  }\n\n  /**\n   * Sets the rotation of the emitter.\n   *\n   * @param {object} newRotation - an object the new x, y and z props\n   * @return {Emitter}\n   */\n  setRotation(newRotation = {}) {\n    const { rotation } = this;\n    const { x = rotation.x, y = rotation.y, z = rotation.z } = newRotation;\n\n    this.rotation.set(x, y, z);\n\n    return this;\n  }\n\n  /**\n   * Sets the total number of times the emitter should emit particles as well as\n   * the emitter's life. Also intializes the emitter rate.\n   * This enables the emitter to emit particles.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n  emit(totalEmitTimes = Infinity, life = Infinity) {\n    this.currentEmitTime = 0;\n    this.totalEmitTimes = isNumber(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    if (totalEmitTimes === 1) {\n      this.life = totalEmitTimes;\n    } else {\n      this.life = isNumber(life) ? life : Infinity;\n    }\n\n    this.rate.init();\n    this.isEmitting = true;\n\n    return this;\n  }\n\n  /**\n   * Experimental emit method that is designed to be called from the System.emit method.\n   *\n   * @return {Emitter}\n   */\n  experimental_emit() {\n    const { isEmitting, totalEmitTimes, life } = this;\n\n    if (!isEmitting) {\n      this.currentEmitTime = 0;\n\n      if (!totalEmitTimes) {\n        this.setTotalEmitTimes(Infinity);\n      }\n\n      if (!life) {\n        this.setLife(Infinity);\n      }\n\n      this.rate.init();\n      this.isEmitting = true;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the total emit times for the emitter.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @return {Emitter}\n   */\n  setTotalEmitTimes(totalEmitTimes = Infinity) {\n    this.totalEmitTimes = isNumber(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    return this;\n  }\n\n  /**\n   * Sets the life of the emitter.\n   *\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n  setLife(life = Infinity) {\n    if (this.totalEmitTimes === 1) {\n      this.life = this.totalEmitTimes;\n    } else {\n      this.life = isNumber(life) ? life : Infinity;\n    }\n\n    return this;\n  }\n\n  /**\n   * Stops the emitter from emitting particles.\n   *\n   * @return void\n   */\n  stopEmit() {\n    this.totalEmitTimes = -1;\n    this.currentEmitTime = 0;\n    this.isEmitting = false;\n  }\n\n  /**\n   * Kills all of the emitter's particles.\n   *\n   * @return void\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n\n    while (i--) {\n      this.particles[i].dead = true;\n    }\n  }\n\n  /**\n   * Adds a particle initializer to the emitter.\n   * Each initializer is run on each particle when they are created.\n   *\n   * @param {Initializer} initializer - The initializer to add\n   * @return {Emitter}\n   */\n  addInitializer(initializer) {\n    this.initializers.push(initializer);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple particle initializers to the emitter.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n  addInitializers(initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      this.addInitializer(initializers[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's particle initializers.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n  setInitializers(initializers) {\n    this.initializers = initializers;\n\n    return this;\n  }\n\n  /**\n   * Removes an initializer from the emitter's initializers array.\n   *\n   * @param {Initializer} initializer - The initializer to remove\n   * @return {Emitter}\n   */\n  removeInitializer(initializer) {\n    const index = this.initializers.indexOf(initializer);\n\n    if (index > -1) {\n      this.initializers.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all initializers.\n   *\n   * @return {Emitter}\n   */\n  removeAllInitializers() {\n    Util.destroyArray(this.initializers);\n\n    return this;\n  }\n\n  /**\n   * Adds a behaviour to the emitter. All emitter behaviours are added to each particle when\n   * they are emitted.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  setBehaviours(behaviours) {\n    this.behaviours = behaviours;\n\n    return this;\n  }\n\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n  removeAllBehaviours() {\n    Util.destroyArray(this.behaviours);\n\n    return this;\n  }\n\n  /**\n   * Adds an emitter behaviour to the emitter.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n  addEmitterBehaviour(behaviour) {\n    this.emitterBehaviours.push(behaviour);\n\n    behaviour.initialize(this);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  addEmitterBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addEmitterBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  setEmitterBehaviours(behaviours) {\n    const length = behaviours.length;\n\n    this.emitterBehaviours = behaviours;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].initialize(this);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n  removeEmitterBehaviour(behaviour) {\n    const index = this.emitterBehaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.emitterBehaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n  removeAllEmitterBehaviours() {\n    Util.destroyArray(this.emitterBehaviours);\n\n    return this;\n  }\n\n  /**\n   * Adds the event listener for the EMITTER_DEAD event.\n   *\n   * @param {onEmitterDead} - The function to call when the EMITTER_DEAD is dispatched.\n   * @return {Emitter}\n   */\n  addOnEmitterDeadEventListener(onEmitterDead) {\n    this.eventDispatcher.addEventListener(`${this.id}_${EMITTER_DEAD}`, () =>\n      onEmitterDead()\n    );\n\n    return this;\n  }\n\n  /**\n   * Creates a particle by retreiving one from the pool and setting it up with\n   * the supplied initializer and behaviour.\n   *\n   * @return {Emitter}\n   */\n  createParticle() {\n    const particle = this.parent.pool.get(Particle);\n    const index = this.particles.length;\n\n    this.setupParticle(particle, index);\n    this.parent && this.parent.dispatch(PARTICLE_CREATED, particle);\n    this.bindEmitterEvent && this.dispatch(PARTICLE_CREATED, particle);\n\n    return particle;\n  }\n\n  /**\n   * Sets up a particle by running all initializers on it and setting its behaviours.\n   * Also adds the particle to this.particles.\n   *\n   * @param {Particle} particle - The particle to setup\n   * @return void\n   */\n  setupParticle(particle, index) {\n    const { initializers, behaviours } = this;\n\n    InitializerUtil.initialize(this, particle, initializers);\n\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n    particle.index = index;\n\n    this.particles.push(particle);\n  }\n\n  /**\n   * Updates the emitter according to the time passed by calling the generate\n   * and integrate methods. The generate method creates particles, the integrate\n   * method updates existing particles.\n   *\n   * If the emitter age is greater than time, the emitter is killed.\n   *\n   * This method also indexes/deindexes particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  update(time) {\n    if (!this.isEmitting) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.dead || this.age >= this.life) {\n      this.destroy();\n    }\n\n    this.generate(time);\n    this.integrate(time);\n\n    let i = this.particles.length;\n\n    while (i--) {\n      const particle = this.particles[i];\n\n      if (particle.dead) {\n        this.parent && this.parent.dispatch(PARTICLE_DEAD, particle);\n        this.bindEmitterEvent && this.dispatch(PARTICLE_DEAD, particle);\n        this.parent.pool.expire(particle.reset());\n        this.particles.splice(i, 1);\n      }\n    }\n\n    this.updateEmitterBehaviours(time);\n  }\n\n  /**\n   * Updates the emitter's emitter behaviours.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  updateEmitterBehaviours(time) {\n    if (this.sleep) {\n      return;\n    }\n\n    const length = this.emitterBehaviours.length;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].applyBehaviour(this, time, i);\n    }\n  }\n\n  /**\n   * Runs the integration algorithm on the emitter and all particles.\n   * Updates the particles with the timstamp passed.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  integrate(time) {\n    const integrationType = this.parent\n      ? this.parent.integrationType\n      : INTEGRATION_TYPE_EULER;\n    const damping = 1 - this.damping;\n\n    integrate(this, time, damping, integrationType);\n\n    let index = this.particles.length;\n\n    while (index--) {\n      const particle = this.particles[index];\n\n      particle.update(time, index);\n      integrate(particle, time, damping, integrationType);\n\n      this.parent && this.parent.dispatch(PARTICLE_UPDATE, particle);\n      this.bindEmitterEvent && this.dispatch(PARTICLE_UPDATE, particle);\n    }\n  }\n\n  /**\n   * Generates new particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  generate(time) {\n    if (this.totalEmitTimes === 1) {\n      let i = this.rate.getValue(99999);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n\n      this.totalEmitTimes = 0;\n\n      return;\n    }\n\n    this.currentEmitTime += time;\n\n    if (this.currentEmitTime < this.totalEmitTimes) {\n      let i = this.rate.getValue(time);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * Kills the emitter.\n   *\n   * @return void\n   */\n  destroy() {\n    this.dead = true;\n    this.energy = 0;\n    this.totalEmitTimes = -1;\n\n    if (this.particles.length == 0) {\n      this.isEmitting = false;\n      this.removeAllInitializers();\n      this.removeAllBehaviours();\n      this.dispatch(`${this.id}_${EMITTER_DEAD}`);\n\n      this.parent && this.parent.removeEmitter(this);\n    }\n  }\n}\n", "export const EMITTER_TYPE_EMITTER = 'Emitter';\nexport const EMITTER_TYPE_FOLLOW = 'FollowEmitter';\n", "export { default as Alpha } from './Alpha';\nexport { default as Attraction } from './Attraction';\nexport { default as Collision } from './Collision';\nexport { default as Color } from './Color';\nexport { default as CrossZone } from './CrossZone';\nexport { default as Force } from './Force';\nexport { default as Gravity } from './Gravity';\nexport { default as RandomDrift } from './RandomDrift';\nexport { default as Repulsion } from './Repulsion';\nexport { default as Rotate } from './Rotate';\nexport { default as Scale } from './Scale';\nexport { default as Spring } from './Spring';\nexport { default as Behaviour } from './Behaviour';\n", "import { easeLinear } from '../ease';\n\nexport const DEFAULT_LIFE = Infinity;\nexport const DEFAULT_ATTRACITON_RADIUS = 1000;\nexport const DEFAULT_ATTRACTION_FORCE_SCALAR = 100;\nexport const DEFAULT_BEHAVIOUR_EASING = easeLinear;\nexport const DEFAULT_BEHAVIOUR_EASING_TYPE = 'easeLinear';\nexport const DEFAULT_RANDOM_DRIFT_DELAY = 0.03;\nexport const PARTICLE_ALPHA_THRESHOLD = 0.002;\nexport const PARTICLE_LENGTH_SQ_THRESHOLD = 0.000004;\nexport const DEFAULT_CROSS_TYPE = 'dead';\n", "import { DEFAULT_BEHAVIOUR_EASING, DEFAULT_LIFE } from './constants';\n\nimport { BEHAVIOUR_TYPE_ABSTRACT } from './types';\nimport { MEASURE } from '../constants';\nimport isNumber from 'lodash/isNumber';\nimport { uid } from '../utils';\n\n/**\n * The base behaviour class.\n * Behaviours manage a particle's behaviour after they have been emitted.\n *\n */\nexport default class Behaviour {\n  /**\n   * Constructs a Behaviour instance.\n   *\n   * @param {number} [life=Infinity] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {string} [type=BEHAVIOUR_TYPE_ABSTRACT] - The behaviour type\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(\n    life = Infinity,\n    easing = DEFAULT_BEHAVIOUR_EASING,\n    type = BEHAVIOUR_TYPE_ABSTRACT,\n    isEnabled = true\n  ) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if the behaviour will be applied or not\n     * @type {boolean}\n     */\n    this.isEnabled = isEnabled;\n\n    /**\n     * @desc The behaviour's id\n     * @type {string} id\n     */\n    this.id = `behaviour-${uid()}`;\n\n    /**\n     * @desc The life of the behaviour\n     * @type {number}\n     */\n    this.life = life;\n\n    /**\n     * @desc The behaviour's decaying trend\n     * @type {function}\n     */\n    this.easing = easing;\n\n    /**\n     * @desc The age of the behaviour\n     * @type {number}\n     */\n    this.age = 0;\n\n    /**\n     * @desc The energy of the behaviour\n     * @type {number}\n     */\n    this.energy = 1;\n\n    /**\n     * Determines if the behaviour is dead or not\n     * @type {boolean}\n     */\n    this.dead = false;\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @param {number} [life=DEFAULT_LIFE] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   */\n  reset(life = DEFAULT_LIFE, easing = DEFAULT_BEHAVIOUR_EASING) {\n    this.life = life;\n    this.easing = easing || DEFAULT_BEHAVIOUR_EASING;\n  }\n\n  /**\n   * Ensures that life is infinity if an invalid value is supplied.\n   *\n   * @return void\n   */\n  set life(life) {\n    this._life = isNumber(life) ? life : DEFAULT_LIFE;\n  }\n\n  /**\n   * Gets the behaviour's life.\n   *\n   * @return {Number}\n   */\n  get life() {\n    return this._life;\n  }\n\n  /**\n   * Normalize a force by 1:100;\n   *\n   * @param {Vector3D} force - The force to normalize.\n   * @return {Vector3D}\n   */\n  normalizeForce(force) {\n    return force.scalar(MEASURE);\n  }\n\n  /**\n   * Normalize a value by 1:100;\n   *\n   * @param {number} value - The value to normalize\n   * @return {number}\n   */\n  normalizeValue(value) {\n    return value * MEASURE;\n  }\n\n  /**\n   * Set the behaviour's initial properties on the particle.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n  initialize(particle) {} // eslint-disable-line\n\n  /**\n   * Apply behaviour to the target as a factor of time.\n   * Internally calls the mutate method to change properties on the target\n   * Will not do so if the behaviour is disabled\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @param {integer} index - the target index\n   * @return mixed\n   */\n  applyBehaviour(target, time, index) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this.mutate(target, time, index);\n  }\n\n  /**\n   * Change the target's properties according to specific behaviour logic.\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return mixed\n   */\n  mutate(target, time, index) {} // eslint-disable-line\n\n  /**\n   * Compares the age of the behaviour vs integration time and determines\n   * if the behaviour should be set to dead or not.\n   * Sets the behaviour energy as a factor of particle age and life.\n   *\n   * @param {Particle} particle - The particle to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return void\n   */\n  energize(particle, time) {\n    if (this.dead) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.age >= this.life) {\n      this.energy = 0;\n      this.dead = true;\n\n      return;\n    }\n\n    const scale = this.easing(particle.age / particle.life);\n\n    this.energy = Math.max(1 - scale, 0);\n  }\n\n  /**\n   * Destory this behaviour.\n   *\n   * @abstract\n   */\n  destroy() {}\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n  fromJSON(json) {} // eslint-disable-line\n}\n", "import { MathUtils, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { PARTICLE_ALPHA_THRESHOLD } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ALPHA as type } from './types';\n\n/**\n * Behaviour that applies an alpha transition effect to particles.\n *\n */\nexport default class Alpha extends Behaviour {\n  /**\n   * Constructs an Alpha behaviour instance.\n   *\n   * @param {number} alphaA - The starting alpha value\n   * @param {?number} alphaB - The ending alpha value\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(alphaA = 1, alphaB = null, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    /**\n     * @desc The starting alpha value\n     * @type {number|Span}\n     */\n    this.alphaA = alphaA;\n\n    /**\n     * @desc The ending alpha value\n     * @type {number|Span}\n     */\n    this.alphaB = alphaB;\n\n    this.reset(alphaA, alphaB);\n  }\n\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} alphaA - the starting alpha value\n   * @param {?number} alphaB - the ending alpha value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(alphaA = 1, alphaB = null, life, easing) {\n    this.same = alphaB === null || alphaB === undefined ? true : false;\n    this.alphaA = createSpan(alphaA);\n    this.alphaB = createSpan(alphaB);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    particle.useAlpha = true;\n    particle.transform.alphaA = this.alphaA.getValue();\n\n    particle.transform.alphaB = this.same\n      ? particle.transform.alphaA\n      : this.alphaB.getValue();\n  }\n\n  /**\n   * Mutates the target's alpha/opacity property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.alpha = MathUtils.lerp(\n      particle.transform.alphaA,\n      particle.transform.alphaB,\n      this.energy\n    );\n\n    if (particle.alpha < PARTICLE_ALPHA_THRESHOLD) {\n      particle.alpha = 0;\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.alphaA - The starting alpha value\n   * @property {number} json.alphaB - The ending alpha value\n   * @property {number} json.life - The life of the behaviour\n   * @property {string} json.easing - The easing equation to use for transforms\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { alphaA, alphaB, life, easing, isEnabled = true } = json;\n\n    return new Alpha(alphaA, alphaB, life, getEasingByName(easing), isEnabled);\n  }\n}\n", "import {\n  DEFAULT_ATTRACITON_RADIUS,\n  DEFAULT_ATTRACTION_FORCE_SCALAR,\n  DEFAULT_BEHAVIOUR_EASING,\n  DEFAULT_LIFE,\n  PARTICLE_LENGTH_SQ_THRESHOLD,\n} from './constants';\n\nimport Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ATTRACTION as type } from './types';\n\n/**\n * Behaviour that causes particles to be attracted to a target position.\n *\n */\nexport default class Attraction extends Behaviour {\n  /**\n   * Constructs an Attraction behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be attracted to\n   * @param {number} force - The attraction force scalar multiplier\n   * @param {number} radius - The attraction radius\n   * @param {number} [life=DEFAULT_LIFE] - The life of the particle\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(\n    targetPosition = new Vector3D(),\n    force = DEFAULT_ATTRACTION_FORCE_SCALAR,\n    radius = DEFAULT_ATTRACITON_RADIUS,\n    life = DEFAULT_LIFE,\n    easing = DEFAULT_BEHAVIOUR_EASING,\n    isEnabled = true\n  ) {\n    super(life, easing, type, isEnabled);\n\n    /**\n     * @desc The position the particles will be attracted to\n     * @type {Vector3D}\n     */\n    this.targetPosition = targetPosition;\n\n    /**\n     * @desc The attraction radius\n     * @type {number} - the attraction radius\n     */\n    this.radius = radius;\n\n    /**\n     * @desc The attraction force scalar multiplier\n     * @type {number}\n     */\n    this.force = this.normalizeValue(force);\n\n    /**\n     * @desc The radius of the attraction squared\n     * @type {number}\n     */\n    this.radiusSq = this.radius * this.radius;\n\n    /**\n     * @desc The attraction force in 3D space\n     * @type {Vector3D}\n     */\n    this.attractionForce = new Vector3D();\n\n    /**\n     * @desc The linear attraction force\n     * @type {number}\n     */\n    this.lengthSq = 0;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(\n    targetPosition = new Vector3D(),\n    force = DEFAULT_ATTRACTION_FORCE_SCALAR,\n    radius = DEFAULT_ATTRACITON_RADIUS,\n    life,\n    easing\n  ) {\n    this.targetPosition = targetPosition;\n    this.radius = radius;\n    this.force = this.normalizeValue(force);\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector3D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Mutates particle acceleration.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.position);\n\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (\n      this.lengthSq > PARTICLE_LENGTH_SQ_THRESHOLD &&\n      this.lengthSq < this.radiusSq\n    ) {\n      this.attractionForce.normalize();\n      this.attractionForce.scalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.scalar(this.force);\n\n      particle.acceleration.add(this.attractionForce);\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { x, y, z, force, radius, life, easing, isEnabled = true } = json;\n\n    return new Attraction(\n      new Vector3D(x, y, z),\n      force,\n      radius,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n", "import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { BEHAVIOUR_TYPE_COLLISION as type } from './types';\n\n/**\n * Behaviour that causes particles to move away from other particles they collide with.\n */\nexport default class Collision extends Behaviour {\n  /**\n   * Constructs a Collision behaviour instance.\n   *\n   * @param {Emitter} emitter - The emitter containing the particles to detect collisions against\n   * @param {boolean} useMass - Determiens whether to use mass or not\n   * @param {function} onCollide - Function to call when particles collide\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(emitter, useMass, onCollide, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(emitter, useMass, onCollide);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Emitter} emitter - The emitter containing the particles to detect collisions against\n   * @param {boolean} useMass - Determiens whether to use mass or not\n   * @param {function} onCollide - Function to call when particles collide\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(emitter, useMass, onCollide, life, easing) {\n    this.emitter = emitter;\n    this.useMass = useMass;\n    this.onCollide = onCollide;\n    this.particles = [];\n    this.delta = new Vector3D();\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Detects collisions with other particles and calls the\n   * onCollide function on colliding particles.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    const particles = this.emitter\n      ? this.emitter.particles.slice(index)\n      : this.particles.slice(index);\n\n    let otherParticle, lengthSq, overlap, distance, averageMass1, averageMass2;\n\n    let i = particles.length;\n\n    while (i--) {\n      otherParticle = particles[i];\n\n      if (otherParticle == particle) {\n        continue;\n      }\n\n      this.delta.copy(otherParticle.position).sub(particle.position);\n\n      lengthSq = this.delta.lengthSq();\n      distance = particle.radius + otherParticle.radius;\n\n      if (lengthSq <= distance * distance) {\n        overlap = distance - Math.sqrt(lengthSq);\n        overlap += 0.5;\n\n        averageMass1 = this._getAverageMass(particle, otherParticle);\n        averageMass2 = this._getAverageMass(otherParticle, particle);\n\n        particle.position.add(\n          this.delta\n            .clone()\n            .normalize()\n            .scalar(overlap * -averageMass1)\n        );\n\n        otherParticle.position.add(\n          this.delta.normalize().scalar(overlap * averageMass2)\n        );\n\n        this.onCollide && this.onCollide(particle, otherParticle);\n      }\n    }\n  }\n\n  /**\n   * Gets the average mass of both particles.\n   *\n   * @param {Particle} particleA - The first particle\n   * @param {Particle} particleB - The second particle\n   * @return {number}\n   */\n  _getAverageMass(particleA, particleB) {\n    return this.useMass\n      ? particleB.mass / (particleA.mass + particleB.mass)\n      : 0.5;\n  }\n\n  // TODO\n  fromJSON(json) {} // eslint-disable-line\n}\n", "import { MathUtils, createColorSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { ColorUtil } from '../utils';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_COLOR as type } from './types';\n\n/**\n * A behaviour which mutates the color of a particle over time.\n *\n */\nexport default class Color extends Behaviour {\n  /**\n   * Constructs a Color behaviour instance.\n   *\n   * @param {number|string} colorA - the starting color\n   * @param {number|string} colorB - the ending color\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(colorA, colorB, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(colorA, colorB);\n  }\n\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  reset(colorA, colorB, life, easing) {\n    this.same = colorB === null || colorB === undefined ? true : false;\n\n    this.colorA = createColorSpan(colorA);\n    this.colorB = createColorSpan(colorB);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.transform.colorA = ColorUtil.getRGB(this.colorA.getValue());\n\n    particle.useColor = true;\n    particle.transform.colorB = this.same\n      ? particle.transform.colorA\n      : ColorUtil.getRGB(this.colorB.getValue());\n  }\n\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    if (!this._same) {\n      particle.color.r = MathUtils.lerp(\n        particle.transform.colorA.r,\n        particle.transform.colorB.r,\n        this.energy\n      );\n      particle.color.g = MathUtils.lerp(\n        particle.transform.colorA.g,\n        particle.transform.colorB.g,\n        this.energy\n      );\n      particle.color.b = MathUtils.lerp(\n        particle.transform.colorA.b,\n        particle.transform.colorB.b,\n        this.energy\n      );\n    } else {\n      particle.color.r = particle.transform.colorA.r;\n      particle.color.g = particle.transform.colorA.g;\n      particle.color.b = particle.transform.colorA.b;\n    }\n  }\n\n  /**\n   * Creates a Color initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.colorA - The starting color\n   * @property {number} json.colorB - The ending color\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Color}\n   */\n  static fromJSON(json) {\n    const { colorA, colorB, life, easing, isEnabled = true } = json;\n\n    return new Color(colorA, colorB, life, getEasingByName(easing), isEnabled);\n  }\n}\n", "import * as Zone from '../zone';\n\nimport Behaviour from './Behaviour';\nimport { DEFAULT_CROSS_TYPE } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_CROSS_ZONE as type } from './types';\n\n/**\n * Behaviour that allows for specific functions to be called on particles when\n * they interact with a zone.\n *\n */\nexport default class CrossZone extends Behaviour {\n  /**\n   * Constructs a CrossZone behaviour instance.\n   *\n   * @param {Zone} zone - the zone used to apply to particles with this behaviour\n   * @param {string} [crossType=DEFAULT_CROSS_TYPE] - enum of cross types, valid strings include 'dead', 'bound', 'cross'\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   */\n  constructor(zone, crossType, life, easing, isEnabled) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(zone, crossType);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Zone} zone - the zone used to apply to particles with this behaviour\n   * @param {string} [crossType=DEFAULT_CROSS_TYPE] - enum of cross types, valid strings include 'dead', 'bound', 'cross'\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   */\n  reset(zone, crossType = DEFAULT_CROSS_TYPE, life, easing) {\n    /**\n     * @desc The zone used to apply to particles with this behaviour\n     * @type {Zone}\n     */\n    this.zone = zone;\n    this.zone.crossType = crossType;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   *\n   * @see {@link '../zone/Zone.js'} crossing\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.zone.crossing.call(this.zone, particle);\n  }\n\n  /**\n   * Creates a CrossZone initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @return {CrossZone}\n   */\n  static fromJSON(json) {\n    const {\n      zoneType,\n      zoneParams,\n      crossType,\n      life,\n      easing,\n      isEnabled = true,\n    } = json;\n\n    const zone = new Zone[zoneType](...Object.values(zoneParams));\n\n    return new CrossZone(\n      zone,\n      crossType,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n", "import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_FORCE as type } from './types';\n/**\n * Behaviour that forces particles along a specific axis.\n *\n */\nexport default class Force extends Behaviour {\n  /**\n   * Constructs a Force behaviour instance.\n   *\n   * @param {number} fx - the x axis force\n   * @param {number} fy - the y axis force\n   * @param {number} fz - the z axis force\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(fx, fy, fz, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(fx, fy, fz);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} fx - the x axis force\n   * @param {number} fy - the y axis force\n   * @param {number} fz - the z axis force\n   */\n  reset(fx, fy, fz) {\n    /**\n     * @desc The normalized force to exert on the particle in\n     * @type {Vector3D}\n     */\n    this.force = this.normalizeForce(new Vector3D(fx, fy, fz));\n\n    /**\n     * @desc The id of the force vector\n     * @property {number} this.force.id\n     */\n    this.force.id = Math.random();\n  }\n\n  /**\n   * Mutates the particle.acceleration property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.acceleration.add(this.force);\n  }\n\n  /**\n   * Creates a Force initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @return {Force}\n   */\n  static fromJSON(json) {\n    const { fx, fy, fz, life, easing, isEnabled = true } = json;\n\n    return new Force(fx, fy, fz, life, getEasingByName(easing), isEnabled);\n  }\n}\n", "import Force from './Force';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_GRAVITY as type } from './types';\n\n/**\n * Behaviour that forces particles down the y axis.\n *\n */\nexport default class Gravity extends Force {\n  /**\n   * Constructs a Gravity behaviour instance.\n   *\n   * @param {number} gravity - the force to pull the particle down the y axis\n   * @param {number} life - the life of the particle\n   * @param {string} easing - the easing equation to use\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(gravity, life, easing, isEnabled = true) {\n    super(0, -gravity, 0, life, easing, isEnabled);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  static fromJSON(json) {\n    const { gravity, life, easing, isEnabled = true } = json;\n\n    return new Gravity(gravity, life, getEasingByName(easing), isEnabled);\n  }\n}\n", "import { MathUtils, Vector3D, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { DEFAULT_RANDOM_DRIFT_DELAY } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_RANDOM_DRIFT as type } from './types';\n\n/**\n * Behaviour that causes particles to drift to random coordinates in 3D space.\n *\n */\nexport default class RandomDrift extends Behaviour {\n  /**\n   * Constructs a RandomDrift behaviour instance.\n   *\n   * @param {number} driftX - x axis drift\n   * @param {number} driftY - y axis drift\n   * @param {number} driftZ - z axis drift\n   * @param {number} [delay=DEFAULT_RANDOM_DRIFT_DELAY] - drift delay\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  constructor(\n    driftX,\n    driftY,\n    driftZ,\n    delay = DEFAULT_RANDOM_DRIFT_DELAY,\n    life,\n    easing,\n    isEnabled = true\n  ) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(driftX, driftY, driftZ, delay);\n\n    /**\n     * @desc Internal time used for calculating drift vs internal delay.\n     * @type {number}\n     */\n    this.time = 0;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} driftX - x axis drift\n   * @param {number} driftY - y axis drift\n   * @param {number} driftZ - z axis drift\n   * @param {number} [delay=DEFAULT_RANDOM_DRIFT_DELAY] - drift delay\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   */\n  reset(\n    driftX,\n    driftY,\n    driftZ,\n    delay = DEFAULT_RANDOM_DRIFT_DELAY,\n    life,\n    easing\n  ) {\n    /**\n     * @desc A Vector3D that stores the drift properties.\n     * @type {Vector3D}\n     */\n    this.randomForce = this.normalizeForce(\n      new Vector3D(driftX, driftY, driftZ)\n    );\n    /**\n     * @desc A Span containing the delay supplied.\n     * @type {Span}\n     */\n    this.delayPan = createSpan(delay);\n    this.time = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Mutates the particle.acceleration property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.time += time;\n\n    if (this.time >= this.delayPan.getValue()) {\n      const ax = MathUtils.randomAToB(-this.randomForce.x, this.randomForce.x);\n      const ay = MathUtils.randomAToB(-this.randomForce.y, this.randomForce.y);\n      const az = MathUtils.randomAToB(-this.randomForce.z, this.randomForce.z);\n\n      particle.acceleration.addValue(ax, ay, az);\n\n      this.time = 0;\n    }\n  }\n\n  static fromJSON(json) {\n    const { x, y, z, delay, life, easing, isEnabled = true } = json;\n\n    return new RandomDrift(\n      x,\n      y,\n      z,\n      delay,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n", "import Attraction from './Attraction';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_REPULSION as type } from './types';\n/**\n * Behaviour that causes particles to be repelled from a target position.\n *\n */\nexport default class Repulsion extends Attraction {\n  /**\n   * Constructs an Repulsion behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be repelled from\n   * @param {number} force - The repulsion force scalar multiplier\n   * @param {number} radius - The repulsion radius\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  constructor(targetPosition, force, radius, life, easing, isEnabled = true) {\n    super(targetPosition, force, radius, life, easing, isEnabled);\n\n    /**\n     * @desc Repulsion is attraction with negative force.\n     * @type {number}\n     */\n    this.force *= -1;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    super.reset(targetPosition, force, radius, life, easing);\n    this.force *= -1;\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { x, y, z, force, radius, life, easing, isEnabled = true } = json;\n\n    return new Repulsion(\n      new Vector3D(x, y, z),\n      force,\n      radius,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n", "import { DR, PI } from '../constants';\nimport { MathUtils, Vector3D, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ROTATE as type } from './types';\n\n/**\n * Behaviour that rotates particles.\n */\nexport default class Rotate extends Behaviour {\n  /**\n   * Constructs a Rotate behaviour instance.\n   *\n   * @param {number} x - X axis rotation\n   * @param {number} y - Y axis rotation\n   * @param {number} z - Z axis rotation\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(x, y, z, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(x, y, z);\n  }\n\n  /**\n   * Gets the rotation type.\n   *\n   * @return {string}\n   */\n  get rotationType() {\n    return this._rotationType;\n  }\n\n  /**\n   * Sets the rotation type.\n   *\n   * @param {string}\n   * @return void\n   */\n  set rotationType(rotationType) {\n    /**\n     * @desc The rotation type. ENUM of ['same', 'set', 'to', 'add'].\n     * @type {string}\n     */\n    this._rotationType = rotationType;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} x - X axis rotation\n   * @param {number} y - Y axis rotation\n   * @param {number} z - Z axis rotation\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(x, y, z, life, easing) {\n    /**\n     * @desc X axis rotation.\n     * @type {number|Span}\n     */\n    this.x = x || 0;\n\n    /**\n     * @desc Y axis rotation.\n     * @type {number|Span}\n     */\n    this.y = y || 0;\n\n    /**\n     * @desc Z axis rotation.\n     * @type {number|Span}\n     */\n    this.z = z || 0;\n\n    if (x === undefined || x == 'same') {\n      this.rotationType = 'same';\n    } else if (y == undefined) {\n      this.rotationType = 'set';\n    } else if (z === undefined) {\n      this.rotationType = 'to';\n    } else {\n      this.rotationType = 'add';\n      this.x = createSpan(this.x * DR);\n      this.y = createSpan(this.y * DR);\n      this.z = createSpan(this.z * DR);\n    }\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    switch (this.rotationType) {\n      case 'same':\n        break;\n\n      case 'set':\n        this._setRotation(particle.rotation, this.x);\n        break;\n\n      case 'to':\n        particle.transform.fR = particle.transform.fR || new Vector3D();\n        particle.transform.tR = particle.transform.tR || new Vector3D();\n        this._setRotation(particle.transform.fR, this.x);\n        this._setRotation(particle.transform.tR, this.y);\n        break;\n\n      case 'add':\n        particle.transform.addR = new Vector3D(\n          this.x.getValue(),\n          this.y.getValue(),\n          this.z.getValue()\n        );\n        break;\n    }\n  }\n\n  /**\n   * Sets the particle's rotation prior to the behaviour being applied.\n   *\n   * NOTE It's hard to see here, but this is mutating the particle's rotation\n   * even though the particle is not being passed in directly.\n   *\n   * NOTE the else if below will never be reached because the value being passed in\n   * will never be of type Vector3D.\n   *\n   * @param {Vector3D} particleRotation - the particle's rotation vector\n   * @param {string|number} value - the value to set the rotation value to, if 'random'\n   * rotation is randomised\n   * @return void\n   */\n  _setRotation(particleRotation, value) {\n    particleRotation = particleRotation || new Vector3D();\n    if (value == 'random') {\n      var x = MathUtils.randomAToB(-PI, PI);\n      var y = MathUtils.randomAToB(-PI, PI);\n      var z = MathUtils.randomAToB(-PI, PI);\n\n      particleRotation.set(x, y, z);\n    }\n    // we can't ever get here because value will never be a Vector3D!\n    // consider refactoring to\n    //  if (value instance of Span) { vec3.add(value.getValue()); }\n    else if (value instanceof Vector3D) {\n      particleRotation.copy(value);\n    }\n  }\n\n  /**\n   * Mutates the particle.rotation property.\n   *\n   * @see http://stackoverflow.com/questions/21622956/how-to-convert-direction-vector-to-euler-angles\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    switch (this.rotationType) {\n      // orients the particle in the direction it is moving\n      case 'same':\n        if (!particle.rotation) {\n          particle.rotation = new Vector3D();\n        }\n\n        particle.rotation.eulerFromDir(particle.velocity);\n        break;\n\n      case 'set':\n        //\n        break;\n\n      case 'to':\n        particle.rotation.x = MathUtils.lerp(\n          particle.transform.fR.x,\n          particle.transform.tR.x,\n          this.energy\n        );\n        particle.rotation.y = MathUtils.lerp(\n          particle.transform.fR.y,\n          particle.transform.tR.y,\n          this.energy\n        );\n        particle.rotation.z = MathUtils.lerp(\n          particle.transform.fR.z,\n          particle.transform.tR.z,\n          this.energy\n        );\n        break;\n\n      case 'add':\n        particle.rotation.add(particle.transform.addR);\n        break;\n    }\n  }\n\n  static fromJSON(json) {\n    const { x, y, z, life, easing, isEnabled = true } = json;\n\n    return new Rotate(x, y, z, life, getEasingByName(easing), isEnabled);\n  }\n}\n", "import { MathUtils, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_SCALE as type } from './types';\n\n/**\n * Behaviour that scales particles.\n *\n */\nexport default class Scale extends Behaviour {\n  /**\n   * Constructs a Scale behaviour instance.\n   *\n   * @param {number} scaleA - the starting scale value\n   * @param {?number} scaleB - the ending scale value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(scaleA, scaleB, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(scaleA, scaleB);\n  }\n\n  /**\n   * Gets the _same property which determines if the scale props are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the scale props are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} scaleA - the starting scale value\n   * @param {?number} scaleB - the ending scale value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(scaleA, scaleB, life, easing) {\n    this.same = scaleB === null || scaleB === undefined ? true : false;\n\n    /**\n     * @desc The starting scale.\n     * @type {Span}\n     */\n    this.scaleA = createSpan(scaleA || 1);\n\n    /**\n     * @desc The ending scale.\n     * @type {Span}\n     */\n    this.scaleB = createSpan(scaleB);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   * Stores initial values for comparison and mutation in the applyBehaviour method.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    particle.transform.scaleA = this.scaleA.getValue();\n    particle.transform.oldRadius = particle.radius;\n\n    particle.transform.scaleB = this.same\n      ? particle.transform.scaleA\n      : this.scaleB.getValue();\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   * Mutates the particle's scale and its radius according to this scale.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.scale = MathUtils.lerp(\n      particle.transform.scaleA,\n      particle.transform.scaleB,\n      this.energy\n    );\n\n    if (particle.scale < 0.0005) {\n      particle.scale = 0;\n    }\n\n    particle.radius = particle.transform.oldRadius * particle.scale;\n  }\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Spring}\n   */\n  static fromJSON(json) {\n    const { scaleA, scaleB, life, easing, isEnabled = true } = json;\n\n    return new Scale(scaleA, scaleB, life, getEasingByName(easing), isEnabled);\n  }\n}\n", "import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_SPRING as type } from './types';\n\n/**\n * Behaviour that causes particles to spring.\n *\n */\nexport default class Spring extends Behaviour {\n  /**\n   * Constructs a Spring behaviour instance.\n   *\n   * @param {number} x - X axis spring\n   * @param {number} y - Y axis spring\n   * @param {number} z - Z axis spring\n   * @param {number} spring - Spring factor\n   * @param {number} friction - Spring friction\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(x, y, z, spring, friction, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(x, y, z, spring, friction);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} x - X axis spring\n   * @param {number} y - Y axis spring\n   * @param {number} z - Z axis spring\n   * @param {number} spring - Spring factor\n   * @param {number} friction - Spring friction\n   * @return void\n   */\n  reset(x, y, z, spring, friction) {\n    if (!this.pos) {\n      this.pos = new Vector3D(x, y, z);\n    } else {\n      this.pos.set(x, y, z);\n    }\n\n    this.spring = spring || 0.1;\n    this.friction = friction || 0.98;\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   * Mutates the particle's velocity according to this.pos and this.spring.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.velocity.x += (this.pos.x - particle.position.x) * this.spring;\n    particle.velocity.y += (this.pos.y - particle.position.y) * this.spring;\n    particle.velocity.z += (this.pos.z - particle.position.z) * this.spring;\n  }\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Spring}\n   */\n  static fromJSON(json) {\n    const { x, y, z, spring, friction, life, easing, isEnabled = true } = json;\n\n    return new Spring(\n      x,\n      y,\n      z,\n      spring,\n      friction,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n", "import * as Behaviour from '../behaviour';\nimport * as Initializer from '../initializer';\n\nimport { EULER, POOL_MAX } from '../constants';\nimport {\n  INITIALIZER_TYPES_THAT_REQUIRE_THREE,\n  SUPPORTED_JSON_BEHAVIOUR_TYPES,\n  SUPPORTED_JSON_INITIALIZER_TYPES,\n} from './constants';\n\nimport Rate from '../initializer/Rate';\n\n/**\n * Makes a rate instance.\n *\n * @param {object} json - The data required to construct a Rate instance\n * @return {Rate}\n */\nconst makeRate = json => Rate.fromJSON(json);\n\n/**\n * Makes initializers from json items.\n *\n * @param {array<object>} items - An array of objects which provide initializer constructor params\n * @param {object} THREE - The Web GL Api to use\n * @return {array<Initializer>}\n */\nconst makeInitializers = (items, THREE) => {\n  const initializers = [];\n\n  items.forEach(data => {\n    const { type, properties } = data;\n\n    if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n      throw new Error(\n        `The initializer type ${type} is invalid or not yet supported`\n      );\n    }\n\n    if (INITIALIZER_TYPES_THAT_REQUIRE_THREE.includes(type)) {\n      initializers.push(Initializer[type].fromJSON(properties, THREE));\n    } else {\n      initializers.push(Initializer[type].fromJSON(properties));\n    }\n  });\n\n  return initializers;\n};\n\n/**\n * Makes behaviours from json items.\n *\n * @param {array<object>} items - An array of objects which provide behaviour constructor params\n * @return {array<Behaviour>}\n */\nconst makeBehaviours = items => {\n  const behaviours = [];\n\n  items.forEach(data => {\n    const { type, properties } = data;\n\n    if (!SUPPORTED_JSON_BEHAVIOUR_TYPES.includes(type)) {\n      throw new Error(\n        `The behaviour type ${type} is invalid or not yet supported`\n      );\n    }\n\n    behaviours.push(Behaviour[type].fromJSON(properties));\n  });\n\n  return behaviours;\n};\n\n/**\n * Creates a System instance from a JSON object.\n *\n * @deprecated Use fromJSONAsync instead.\n *\n * @param {object} json - The JSON to create the System instance from\n * @param {object} THREE - The Web GL Api to use\n * @param {function} System - The system class\n * @param {function} Emitter - The emitter class\n * @param {number} json.preParticles - The predetermined number of particles\n * @param {string} json.integrationType - The integration algorithm to use\n * @param {array<object>} json.emitters - The emitters for the system instance\n * @return {System}\n */\nexport default (json, THREE, System, Emitter) => {\n  const {\n    preParticles = POOL_MAX,\n    integrationType = EULER,\n    emitters = [],\n  } = json;\n  const system = new System(THREE, preParticles, integrationType);\n\n  emitters.forEach(data => {\n    const emitter = new Emitter();\n    const {\n      rate,\n      rotation,\n      initializers,\n      behaviours,\n      emitterBehaviours = [],\n      position,\n      totalEmitTimes = Infinity,\n      life = Infinity,\n    } = data;\n\n    emitter\n      .setRate(makeRate(rate))\n      .setRotation(rotation)\n      .setInitializers(makeInitializers(initializers, THREE))\n      .setBehaviours(makeBehaviours(behaviours))\n      .setEmitterBehaviours(makeBehaviours(emitterBehaviours))\n      .setPosition(position)\n      .emit(totalEmitTimes, life);\n\n    system.addEmitter(emitter);\n  });\n\n  return system;\n};\n", "import * as Behaviour from '../behaviour';\nimport * as Initializer from '../initializer';\n\nimport { EULER, POOL_MAX } from '../constants';\nimport {\n  INITIALIZER_TYPES_THAT_REQUIRE_THREE,\n  SUPPORTED_JSON_BEHAVIOUR_TYPES,\n  SUPPORTED_JSON_INITIALIZER_TYPES,\n} from './constants';\n\nimport Rate from '../initializer/Rate';\nimport TextureInitializer from '../initializer/Texture';\n\nconst DEFAULT_OPTIONS = { shouldAutoEmit: true };\n\n/**\n * Makes a rate instance.\n *\n * @param {object} json - The data required to construct a Rate instance\n * @return {Rate}\n */\nconst makeRate = json => Rate.fromJSON(json);\n\n/**\n * Makes initializers from json items.\n *\n * @param {array<object>} items - An array of objects which provide initializer constructor params\n * @param {object} THREE - The Web GL Api to use\n * @return {array<Initializer>}\n */\nconst makeInitializers = (items, THREE) =>\n  new Promise((resolve, reject) => {\n    if (!items.length) {\n      return resolve([]);\n    }\n\n    const numberOfInitializers = items.length;\n    const madeInitializers = [];\n    const doNotRequireTextureLoading = items.filter(\n      ({ properties }) => !properties.texture\n    );\n    const doRequireTextureLoading = items.filter(\n      ({ properties }) => properties.texture\n    );\n\n    doNotRequireTextureLoading.forEach(data => {\n      const { type, properties } = data;\n\n      if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n        return reject(\n          `The initializer type ${type} is invalid or not yet supported`\n        );\n      }\n\n      if (INITIALIZER_TYPES_THAT_REQUIRE_THREE.includes(type)) {\n        madeInitializers.push(Initializer[type].fromJSON(properties, THREE));\n      } else {\n        madeInitializers.push(Initializer[type].fromJSON(properties));\n      }\n\n      if (madeInitializers.length === numberOfInitializers) {\n        return resolve(madeInitializers);\n      }\n    });\n\n    doRequireTextureLoading.forEach(data => {\n      const {\n        type,\n        properties,\n        properties: { texture },\n      } = data;\n      const textureLoader = new THREE.TextureLoader();\n\n      if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n        return reject(\n          `The initializer type ${type} is invalid or not yet supported`\n        );\n      }\n\n      textureLoader.load(\n        texture,\n        loadedTexture => {\n          madeInitializers.push(\n            TextureInitializer.fromJSON(\n              {\n                ...properties,\n                loadedTexture,\n              },\n              THREE\n            )\n          );\n\n          if (madeInitializers.length === numberOfInitializers) {\n            return resolve(madeInitializers);\n          }\n        },\n        undefined,\n        reject\n      );\n    });\n  });\n\n/**\n * Makes behaviours from json items.\n *\n * @param {array<object>} items - An array of objects which provide behaviour constructor params\n * @return {Promise<array>}\n */\nconst makeBehaviours = items =>\n  new Promise((resolve, reject) => {\n    if (!items.length) {\n      return resolve([]);\n    }\n\n    const numberOfBehaviours = items.length;\n    const madeBehaviours = [];\n\n    items.forEach(data => {\n      const { type, properties } = data;\n\n      if (!SUPPORTED_JSON_BEHAVIOUR_TYPES.includes(type)) {\n        return reject(\n          `The behaviour type ${type} is invalid or not yet supported`\n        );\n      }\n\n      madeBehaviours.push(Behaviour[type].fromJSON(properties));\n\n      if (madeBehaviours.length === numberOfBehaviours) {\n        return resolve(madeBehaviours);\n      }\n    });\n  });\n\nconst makeEmitters = (emitters, Emitter, THREE, shouldAutoEmit) =>\n  new Promise((resolve, reject) => {\n    if (!emitters.length) {\n      return resolve([]);\n    }\n\n    const madeEmitters = [];\n    const numberOfEmitters = emitters.length;\n\n    if (!numberOfEmitters) {\n      return resolve(madeEmitters);\n    }\n\n    emitters.forEach(data => {\n      const emitter = new Emitter();\n      const {\n        rate,\n        rotation,\n        initializers,\n        behaviours,\n        emitterBehaviours = [],\n        position,\n        totalEmitTimes = Infinity,\n        life = Infinity,\n      } = data;\n\n      emitter\n        .setRate(makeRate(rate))\n        .setRotation(rotation)\n        .setPosition(position);\n\n      makeInitializers(initializers, THREE)\n        .then(madeInitializers => {\n          emitter.setInitializers(madeInitializers);\n\n          return makeBehaviours(behaviours);\n        })\n        .then(madeBehaviours => {\n          emitter.setBehaviours(madeBehaviours);\n\n          return makeBehaviours(emitterBehaviours);\n        })\n        .then(madeEmitterBehaviours => {\n          emitter.setEmitterBehaviours(madeEmitterBehaviours);\n\n          return Promise.resolve(emitter);\n        })\n        .then(emitter => {\n          madeEmitters.push(\n            shouldAutoEmit\n              ? emitter.emit(totalEmitTimes, life)\n              : emitter.setTotalEmitTimes(totalEmitTimes).setLife(life)\n          );\n\n          if (madeEmitters.length === numberOfEmitters) {\n            return resolve(madeEmitters);\n          }\n        })\n        .catch(reject);\n    });\n  });\n\n/**\n * Creates a System instance from a JSON object.\n *\n * @param {object} json - The JSON to create the System instance from\n * @param {number} json.preParticles - The predetermined number of particles\n * @param {string} json.integrationType - The integration algorithm to use\n * @param {array<object>} json.emitters - The emitters for the system instance\n * @param {object} THREE - The Web GL Api to use\n * @param {function} System - The system class\n * @param {function} Emitter - The emitter class\n * @param {object} [options={}] - Optional config options\n * @return {Promise<System>}\n */\nexport default (json, THREE, System, Emitter, options = {}) =>\n  new Promise((resolve, reject) => {\n    const {\n      preParticles = POOL_MAX,\n      integrationType = EULER,\n      emitters = [],\n    } = json;\n    const system = new System(preParticles, integrationType);\n    const { shouldAutoEmit } = { ...DEFAULT_OPTIONS, ...options };\n\n    makeEmitters(emitters, Emitter, THREE, shouldAutoEmit)\n      .then(madeEmitters => {\n        const numberOfEmitters = madeEmitters.length;\n\n        if (!numberOfEmitters) {\n          return resolve(system);\n        }\n\n        madeEmitters.forEach(madeEmitter => {\n          system.addEmitter(madeEmitter);\n\n          if (system.emitters.length === numberOfEmitters) {\n            resolve(system);\n          }\n        });\n      })\n      .catch(reject);\n  });\n", "import EventDispatcher, {\n  EMITTER_ADDED,\n  EMITTER_REMOVED,\n  SYSTEM_UPDATE,\n  SYSTEM_UPDATE_AFTER,\n} from '../events';\n\nimport { DEFAULT_SYSTEM_DELTA } from './constants';\nimport Emitter from '../emitter/Emitter';\nimport { INTEGRATION_TYPE_EULER } from '../math/constants';\nimport { POOL_MAX } from '../constants';\nimport Pool from './Pool';\nimport fromJSON from './fromJSON';\nimport fromJSONAsync from './fromJSONAsync';\nimport { CORE_TYPE_SYSTEM as type } from './types';\n\n/**\n * The core of the three-system particle engine.\n * A System instance can contain multiple emitters, each with their own initializers\n * and behaviours.\n *\n */\nexport default class System {\n  /**\n   * Constructs a System instance.\n   *\n   * @param {object} THREE - ThreeJs\n   * @param {number} [preParticles=POOL_MAX] - The number of particles to start with\n   * @param {string} [integrationType=INTEGRATION_TYPE_EULER] - The integration type to use\n   * @return void\n   */\n  constructor(\n    preParticles = POOL_MAX,\n    integrationType = INTEGRATION_TYPE_EULER\n  ) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if the system can update or not. Set to false when destroying\n     * to ensure that external calls to update do not throw errors.\n     * @type {boolean}\n     */\n    this.canUpdate = true;\n\n    /**\n     * @desc The number of particles to start with.\n     * @type {number}\n     */\n    this.preParticles = preParticles;\n\n    /**\n     * @desc The integration algorithm type to use.\n     * @param {string}\n     */\n    this.integrationType = integrationType;\n\n    /**\n     * @desc The emitters in the particle system.\n     * @type {array<Emitter>}\n     */\n    this.emitters = [];\n\n    /**\n     * @desc The renderers for the system.\n     * @type {array<Renderer>}\n     */\n    this.renderers = [];\n\n    /**\n     * @desc A pool used to manage the internal system cache of objects\n     * @type {Pool}\n     */\n    this.pool = new Pool();\n\n    /**\n     * @desc Internal event dispatcher\n     * @type {EventDispatcher}\n     */\n    this.eventDispatcher = new EventDispatcher();\n  }\n\n  /**\n   * Creates a System instance from a JSON object.\n   *\n   * @param {object} json - The JSON to create the System instance from\n   * @param {object} THREE - The Web GL Api to use eg., THREE\n   * @return {System}\n   *\n   * @deprecated use fromJSONAsync instead\n   */\n  static fromJSON(json, THREE) {\n    return fromJSON(json, THREE, System, Emitter);\n  }\n\n  /**\n   * Loads a System instance from JSON asynchronously. Ensures all textures are\n   * fully loaded before resolving with the instantiated System instance.\n   *\n   * @param {object} json - The JSON to create the System instance from\n   * @param {object} THREE - The Web GL Api to use eg., THREE\n   * @param {?object} options - Optional config options\n   * @return {Promise<System>}\n   */\n  static fromJSONAsync(json, THREE, options) {\n    return fromJSONAsync(json, THREE, System, Emitter, options);\n  }\n\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<System|Emitter|Particle>} [target=this] - The event target\n   */\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n\n  /**\n   * Adds a renderer to the System instance and initializes it.\n   *\n   * @param {Renderer} renderer - The renderer to add\n   * @return {System}\n   */\n  addRenderer(renderer) {\n    this.renderers.push(renderer);\n    renderer.init(this);\n\n    return this;\n  }\n\n  /**\n   * Removes a renderer from the System instance.\n   *\n   * @param {Renderer} renderer\n   * @return {System}\n   */\n  removeRenderer(renderer) {\n    this.renderers.splice(this.renderers.indexOf(renderer), 1);\n    renderer.remove(this);\n\n    return this;\n  }\n\n  /**\n   * Adds an emitter to the System instance.\n   * Dispatches the EMITTER_ADDED event.\n   *\n   * @param {Emitter} emitter - The emitter to add\n   * @return {System}\n   */\n  addEmitter(emitter) {\n    const index = this.emitters.length;\n\n    emitter.parent = this;\n    emitter.index = index;\n\n    this.emitters.push(emitter);\n    this.dispatch(EMITTER_ADDED, emitter);\n\n    return this;\n  }\n\n  /**\n   * Removes an emitter from the System instance.\n   * Dispatches the EMITTER_REMOVED event.\n   *\n   * @param {Emitter} emitter - The emitter to remove\n   * @return {System}\n   */\n  removeEmitter(emitter) {\n    if (emitter.parent !== this) {\n      return this;\n    }\n\n    emitter.parent = null;\n    emitter.index = undefined;\n\n    this.emitters.splice(this.emitters.indexOf(emitter), 1);\n    this.dispatch(EMITTER_REMOVED, emitter);\n\n    return this;\n  }\n\n  /**\n   * Wires up life cycle methods and causes a system's emitters to emit particles.\n   * Expects emitters to have their totalEmitTimes and life set already.\n   * Inifnite systems will resolve immediately.\n   *\n   * @param {object} hooks - Functions to hook into the life cycle API\n   * @param {function} hooks.onStart - Called when the system starts to emit particles\n   * @param {function} hooks.onUpdate - Called each time the system updates\n   * @param {function} hooks.onEnd - Called when the system's emitters have all died\n   * @return {Promise}\n   */\n  emit({ onStart, onUpdate, onEnd }) {\n    if (onStart) {\n      onStart();\n    }\n\n    if (onUpdate) {\n      this.eventDispatcher.addEventListener(SYSTEM_UPDATE, onUpdate);\n    }\n\n    const emitters = this.emitters.map(emitter => {\n      const { life } = emitter;\n\n      if (life === Infinity) {\n        if (onEnd) {\n          onEnd();\n        }\n\n        emitter.experimental_emit();\n\n        return Promise.resolve();\n      }\n\n      return new Promise(resolve => {\n        emitter.addOnEmitterDeadEventListener(() => {\n          if (onEnd) {\n            onEnd();\n          }\n\n          resolve();\n        });\n\n        emitter.experimental_emit();\n      });\n    });\n\n    try {\n      return Promise.all(emitters);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  /**\n   * Updates the particle system based on the delta passed.\n   *\n   * @example\n   * animate = () => {\n   *   threeRenderer.render(threeScene, threeCamera);\n   *   system.update();\n   *   requestAnimationFrame(animate);\n   * }\n   * animate();\n   *\n   * @param {number} delta - Delta time\n   * @return {Promise}\n   */\n  update(delta = DEFAULT_SYSTEM_DELTA) {\n    const d = delta || DEFAULT_SYSTEM_DELTA;\n\n    if (this.canUpdate) {\n      if (d > 0) {\n        let i = this.emitters.length;\n\n        while (i--) {\n          const emitter = this.emitters[i];\n\n          emitter.update(d);\n          emitter.isEmitting && this.dispatch(SYSTEM_UPDATE);\n        }\n      }\n\n      this.dispatch(SYSTEM_UPDATE_AFTER);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Gets a count of the total number of particles in the system.\n   *\n   * @return {integer}\n   */\n  getCount() {\n    const length = this.emitters.length;\n\n    let total = 0;\n\n    let i;\n\n    for (i = 0; i < length; i++) {\n      total += this.emitters[i].particles.length;\n    }\n\n    return total;\n  }\n\n  /**\n   * Destroys all emitters, renderers and the Nebula pool.\n   * Ensures that this.update will not perform any operations while the system\n   * is being destroyed.\n   *\n   * @return void\n   */\n  destroy() {\n    const length = this.emitters.length;\n\n    this.canUpdate = false;\n\n    for (let e = 0; e < length; e++) {\n      this.emitters[e] && this.emitters[e].destroy();\n      delete this.emitters[e];\n    }\n\n    for (let r = 0; r < length; r++) {\n      if (this.renderers[r] && this.renderers[r].destroy) {\n        this.renderers[r].destroy();\n        delete this.renderers[r];\n      }\n    }\n\n    this.emitters.length = 0;\n    this.pool.destroy();\n    this.canUpdate = true;\n  }\n}\n", "export const DEFAULT_WIDTH = 10;\nexport const DEFAULT_HEIGHT = 10;\nexport const DEFAULT_DEPTH = 10;\nexport const DEFAULT_RADIUS = 15;\nexport const DEFAULT_SIZE = 15;\nexport const DEFAULT_POSITION = 0;\n", "import { DEFAULT_POSITION, DEFAULT_SIZE as size } from './constants';\n\n/**\n * @exports Debug - methods and helpers for debugging System emitters, zones and particles.\n * @requires THREE - { SphereGeometry, BoxGeometry, MeshBasicMaterial, OctahedronGeometry, Mesh }\n */\nexport default {\n  /**\n   * Adds an event listener to the system instance's SYSTEM_UPDATE event.\n   *\n   * @param {System} system - the system instance\n   * @param {function} onSystemUpdated - the function to call when system has been updated\n   * @return {Debug}\n   */\n  addEventListener: function(system, onSystemUpdated) {\n    system.eventDispatcher.addEventListener('SYSTEM_UPDATE', onSystemUpdated);\n\n    return this;\n  },\n\n  /**\n   * Draws a wireframe mesh around the zone for debugging purposes.\n   *\n   * @param {System} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {Zone} zone - a Zone instance\n   * @return void\n   */\n  drawZone: function(THREE, system, container, zone = {}) {\n    const color = '#2194ce';\n    const wireframe = true;\n    const {\n      width = size,\n      height = size,\n      depth = size,\n      radius = size,\n      x = DEFAULT_POSITION,\n      y = DEFAULT_POSITION,\n      z = DEFAULT_POSITION,\n    } = zone;\n\n    let geometry;\n\n    if (zone.isPointZone()) {\n      geometry = new THREE.SphereGeometry(15);\n    }\n\n    if (zone.isLineZone()) {\n      // TODO\n    }\n\n    if (zone.isBoxZone()) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    if (zone.isSphereZone()) {\n      geometry = new THREE.SphereGeometry(radius, size, size);\n    }\n\n    if (zone.isMeshZone()) {\n      geometry = zone.geometry.geometry\n        ? zone.geometry.geometry.clone()\n        : zone.geometry.clone();\n    }\n\n    if (!geometry) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    const material = new THREE.MeshBasicMaterial({ color, wireframe });\n    // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n\n    container.add(mesh);\n\n    this.addEventListener(system, function() {\n      mesh.position.set(x, y, z);\n    });\n  },\n\n  /**\n   * Draws a mesh for each particle emitted in order to help debug particles.\n   *\n   * @param {object} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {object} emitter - the emitter to debug\n   * @param {string} color - the color for the debug mesh material\n   * @return void\n   */\n  drawEmitter: function(THREE, system, container, emitter, color) {\n    const geometry = new THREE.OctahedronGeometry(size);\n    const material = new THREE.MeshBasicMaterial({\n      color: color || '#aaa',\n      wireframe: true,\n    });\n    // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n\n    container.add(mesh);\n\n    this.addEventListener(system, function() {\n      mesh.position.copy(emitter.position);\n      mesh.rotation.set(\n        emitter.rotation.x,\n        emitter.rotation.y,\n        emitter.rotation.z\n      );\n    });\n  },\n\n  /**\n   * Renders emitter / particle information into the info element.\n   *\n   * @param {object} system - the system instance\n   * @param {integer} style - style to apply (see the addInfo method's switch statement)\n   * @return void\n   */\n  renderInfo: (function() {\n    function getCreatedNumber(type, system) {\n      var pool = type == 'material' ? '_materialPool' : '_targetPool';\n      var renderer = system.renderers[0];\n\n      return renderer[pool].cID;\n    }\n\n    function getEmitterPos(system) {\n      var e = system.emitters[0];\n\n      return (\n        Math.round(e.p.x) + ',' + Math.round(e.p.y) + ',' + Math.round(e.p.z)\n      );\n    }\n\n    return function(system, style) {\n      this.addInfo(style);\n      var str = '';\n\n      switch (this._infoType) {\n        case 2:\n          str += 'emitter:' + system.emitters.length + '<br>';\n          str += 'em speed:' + system.emitters[0].cID + '<br>';\n          str += 'pos:' + getEmitterPos(system);\n          break;\n\n        case 3:\n          str += system.renderers[0].name + '<br>';\n          str += 'target:' + getCreatedNumber('target') + '<br>';\n          str += 'material:' + getCreatedNumber('material');\n          break;\n\n        default:\n          str += 'particles:' + system.getCount() + '<br>';\n          str += 'pool:' + system.pool.getCount() + '<br>';\n          str += 'total:' + (system.getCount() + system.pool.getCount());\n      }\n      this._infoCon.innerHTML = str;\n    };\n  })(),\n\n  /**\n   * Appends the info element into the dom.\n   *\n   * @param {integer} style - the style type to apply\n   * @return void\n   */\n  addInfo: (function() {\n    return function(style) {\n      var self = this;\n\n      if (!this._infoCon) {\n        this._infoCon = document.createElement('div');\n        this._infoCon.style.cssText = [\n          'position:fixed;bottom:0px;left:0;cursor:pointer;',\n          'opacity:0.9;z-index:10000;padding:10px;font-size:12px;',\n          'width:120px;height:50px;background-color:#002;color:#0ff;',\n        ].join('');\n\n        this._infoType = 1;\n        this._infoCon.addEventListener(\n          'click',\n          function() {\n            self._infoType++;\n            if (self._infoType > 3) self._infoType = 1;\n          },\n          false\n        );\n\n        var bg, color;\n\n        switch (style) {\n          case 2:\n            bg = '#201';\n            color = '#f08';\n            break;\n\n          case 3:\n            bg = '#020';\n            color = '#0f0';\n            break;\n\n          default:\n            bg = '#002';\n            color = '#0ff';\n        }\n\n        this._infoCon.style['background-color'] = bg;\n        this._infoCon.style['color'] = color;\n      }\n\n      if (!this._infoCon.parentNode) document.body.appendChild(this._infoCon);\n    };\n  })(),\n};\n", "/**\n * You can use this emit particles.\n *\n * This method will console.log the fixed number of your info  in updata or requestAnimationFrame\n *\n * use like this log('+12',mc); log 12 times\n *\n * @return void\n */\nexport default function() {\n  let once = 0;\n\n  if (window.console && window.console.trace) {\n    var arg = Array.prototype.slice.call(arguments);\n    var s1 = arguments[0] + '';\n\n    if (s1.indexOf('+') == 0) {\n      var n = parseInt(arguments[0]);\n\n      if (once < n) {\n        arg.shift();\n        console.trace.apply(console, arg);\n        once++;\n      }\n    } else {\n      arg.unshift('+15');\n      this.apply(console, arg);\n    }\n  }\n}\n", "import Emitter from './Emitter';\nimport THREEUtil from '../utils/THREEUtil';\nimport Util from '../utils/Util';\nimport { EMITTER_TYPE_FOLLOW as type } from './types';\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from System.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class System.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} pObj the parameters object;\n   */\n  constructor(mouseTarget, ease, pObj) {\n    super(pObj);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    var self = this;\n\n    this.mousemoveHandler = function(e) {\n      self.mousemove.call(self, e);\n    };\n\n    this.mousedownHandler = function(e) {\n      self.mousedown.call(self, e);\n    };\n\n    this.mouseupHandler = function(e) {\n      self.mouseup.call(self, e);\n    };\n\n    this.mouseTarget.addEventListener(\n      'mousemove',\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stopEmit\n   */\n  stopEmit() {\n    this._allowEmitting = false;\n  }\n\n  setCameraAndCanvas(camera, canvas) {\n    this.camera = camera;\n    this.canvas = canvas;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX == 0) {\n      this.position.x += (e.layerX - this.position.x) * this.ease;\n      this.position.y += (e.layerY - this.position.y) * this.ease;\n    } else if (e.offsetX || e.offsetX == 0) {\n      this.position.x += (e.offsetX - this.position.x) * this.ease;\n      this.position.y += (e.offsetY - this.position.y) * this.ease;\n    }\n\n    this.position.copy(\n      THREEUtil.toSpacePos(this.position, this.camera, this.canvas)\n    );\n\n    if (this._allowEmitting) super.emit('once');\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      'mousemove',\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n", "import {\n  PARTICLE_CREATED,\n  PARTICLE_DEAD,\n  PARTICLE_UPDATE,\n  SYSTEM_UPDATE,\n} from '../events/constants';\n\nimport { RENDERER_TYPE_BASE } from './types';\nimport { __DEV__ } from '../constants';\n\nexport default class BaseRenderer {\n  constructor(type = RENDERER_TYPE_BASE) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  init(system) {\n    var self = this;\n\n    this.system = system;\n\n    this.system.eventDispatcher.addEventListener(SYSTEM_UPDATE, function(\n      system\n    ) {\n      self.onSystemUpdate.call(self, system);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_CREATED, function(\n      particle\n    ) {\n      self.onParticleCreated.call(self, particle);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_UPDATE, function(\n      particle\n    ) {\n      self.onParticleUpdate.call(self, particle);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_DEAD, function(\n      particle\n    ) {\n      self.onParticleDead.call(self, particle);\n    });\n\n    this.logRendererType();\n  }\n\n  remove() {\n    this.system = null;\n  }\n\n  /**\n   * @abstract\n   */\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onParticleDead(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onSystemUpdate(system) {} // eslint-disable-line\n\n  /**\n   * Logs the renderer type being used when in development mode.\n   *\n   * @return void\n   */\n  logRendererType() {\n    if (!__DEV__) {\n      return;\n    }\n\n    console.log(`${this.type}`);\n  }\n}\n", "import BaseRenderer from './BaseRenderer';\nimport { Pool } from '../core';\nimport { RENDERER_TYPE_CUSTOM as type } from './types';\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor() {\n    super(type);\n\n    this.targetPool = new Pool();\n    this.materialPool = new Pool();\n  }\n\n  onSystemUpdate() {}\n\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  onParticleDead(particle) {} // eslint-disable-line\n}\n", "import BaseRenderer from './BaseRenderer';\nimport { PUID } from '../utils';\nimport { Pool } from '../core';\nimport { RENDERER_TYPE_MESH as type } from './types';\n\n/**\n * @requires THREE - { Mesh, BoxGeometry, MeshLambertMaterial }\n */\nexport default class MeshRenderer extends BaseRenderer {\n  /**\n   * @param {object} container - An Object3D container, usually a THREE.Scene\n   * @param {object} THREE - THREE Api\n   */\n  constructor(container, THREE) {\n    super(type);\n\n    this.container = container;\n    this._targetPool = new Pool();\n    this._materialPool = new Pool();\n    this._body = new THREE.Mesh(\n      new THREE.BoxGeometry(50, 50, 50),\n      new THREE.MeshLambertMaterial({ color: '#ff0000' })\n    );\n  }\n\n  isThreeSprite(particle) {\n    return particle.target.isSprite;\n  }\n\n  onSystemUpdate() {}\n\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      //set target\n      if (!particle.body) particle.body = this._body;\n      particle.target = this._targetPool.get(particle.body);\n\n      //set material\n      if (particle.useAlpha || particle.useColor) {\n        particle.target.material.__puid = PUID.id(particle.body.material);\n        particle.target.material = this._materialPool.get(\n          particle.target.material\n        );\n      }\n    }\n\n    if (particle.target) {\n      particle.target.position.copy(particle.position);\n      this.container.add(particle.target);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    const { target, useAlpha, useColor, rotation } = particle;\n\n    if (!target) {\n      return;\n    }\n\n    target.position.copy(particle.position);\n\n    if (!this.isThreeSprite(particle)) {\n      target.rotation.set(rotation.x, rotation.y, rotation.z);\n    }\n\n    this.scale(particle);\n\n    if (useAlpha) {\n      target.material.opacity = particle.alpha;\n      target.material.transparent = true;\n    }\n\n    if (useColor) {\n      target.material.color.copy(particle.color);\n    }\n  }\n\n  scale(particle) {\n    particle.target.scale.set(particle.scale, particle.scale, particle.scale);\n  }\n\n  onParticleDead(particle) {\n    if (particle.target) {\n      if (particle.useAlpha || particle.useColor)\n        this._materialPool.expire(particle.target.material);\n\n      this._targetPool.expire(particle.target);\n      this.container.remove(particle.target);\n      particle.target = null;\n    }\n  }\n}\n", "import MeshRenderer from './MeshRenderer';\nimport { RENDERER_TYPE_SPRITE as type } from './types';\n\n/**\n * @requires THREE - { Mesh, BoxGeometry, MeshLambertMaterial, Sprite, SpriteMaterial }\n */\nexport default class SpriteRenderer extends MeshRenderer {\n  constructor(container, THREE) {\n    super(container, THREE);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this._body = new THREE.Sprite(\n      new THREE.SpriteMaterial({ color: 0xffffff })\n    );\n  }\n\n  scale(particle) {\n    particle.target.scale.set(\n      particle.scale * particle.radius,\n      particle.scale * particle.radius,\n      1\n    );\n  }\n}\n", "// Primitives\nexport const DEFAULT_MAX_PARTICLES = 10000;\nexport const VECTOR_3_SIZE = ['x', 'y', 'z'].length;\nexport const RGBA_SIZE = ['r', 'g', 'b', 'a'].length;\nexport const FLOAT_BYTE_SIZE = 4;\n\n// Byte sizes\nexport const POSITION_BYTE_SIZE = VECTOR_3_SIZE * FLOAT_BYTE_SIZE;\nexport const SIZE_BYTE_SIZE = FLOAT_BYTE_SIZE;\nexport const RGBA_BYTE_SIZE = RGBA_SIZE * FLOAT_BYTE_SIZE;\nexport const ALL_BYTE_SIZES = [\n  POSITION_BYTE_SIZE,\n  SIZE_BYTE_SIZE,\n  RGBA_BYTE_SIZE,\n];\nexport const PARTICLE_BYTE_SIZE = ALL_BYTE_SIZES.reduce(\n  (cur, acc) => cur + acc\n);\n\n// Attributes\nexport const POSITION_ATTRIBUTE_BUFFER_SIZE = VECTOR_3_SIZE;\nexport const SIZE_ATTRIBUTE_BUFFER_SIZE = 1;\nexport const RGBA_ATTRIBUTE_BUFFER_SIZE = RGBA_SIZE;\nexport const ALPHA_ATTRIBUTE_BUFFER_SIZE = 1;\nexport const TEXID_ATTRIBUTE_BUFFER_SIZE = 2;\n\nexport const ATTRIBUTE_TO_SIZE_MAP = {\n  position: POSITION_ATTRIBUTE_BUFFER_SIZE,\n  size: SIZE_ATTRIBUTE_BUFFER_SIZE,\n  // THREE.Color does not contain alpha, so we will have separate attributes for these\n  color: RGBA_ATTRIBUTE_BUFFER_SIZE,\n  alpha: ALPHA_ATTRIBUTE_BUFFER_SIZE,\n  texID: TEXID_ATTRIBUTE_BUFFER_SIZE,\n};\n\nexport const PARTICLE_STRIDE = [\n  POSITION_ATTRIBUTE_BUFFER_SIZE,\n  SIZE_ATTRIBUTE_BUFFER_SIZE,\n  RGBA_ATTRIBUTE_BUFFER_SIZE,\n  ALPHA_ATTRIBUTE_BUFFER_SIZE,\n  TEXID_ATTRIBUTE_BUFFER_SIZE,\n].reduce((cur, acc) => cur + acc);\n", "import { DEFAULT_MAX_PARTICLES } from './ParticleBuffer/constants';\n\nexport const DEFAULT_RENDERER_OPTIONS = {\n  blending: 'AdditiveBlending',\n  baseColor: 0xffffff,\n  depthTest: true,\n  depthWrite: false,\n  transparent: true,\n  maxParticles: DEFAULT_MAX_PARTICLES,\n  shouldDebugTextureAtlas: false,\n  shouldForceDesktopRenderer: false,\n  shouldForceMobileRenderer: false,\n};\n", "/**\n * Simple class that stores the particle's \"target\" or \"next\" state.\n *\n */\nexport class Target {\n  constructor(THREE) {\n    this.position = new THREE.Vector3();\n    this.size = 0;\n    this.color = new THREE.Color();\n    this.alpha = 0;\n    this.texture = null;\n    this.index = 0;\n  }\n\n  reset() {\n    this.position.set(0, 0, 0);\n    this.size = 0;\n    this.color.setRGB(0, 0, 0);\n    this.alpha = 0;\n    this.texture = null;\n  }\n}\n", "/**\n * Map of particle IDs to integer ids\n */\nexport class UniqueList {\n  constructor(max = Infinity) {\n    this.max = max;\n    this.count = 0;\n    this._items = {};\n  }\n\n  add(item) {\n    if (this._items[item] !== undefined) {\n      return;\n    }\n\n    this._items[item] = this.count++;\n  }\n\n  find(item) {\n    return this._items[item];\n  }\n\n  destroy() {\n    this._items = {};\n    this.count = 0;\n  }\n}\n", "import {\n  ATTRIBUTE_TO_SIZE_MAP,\n  DEFAULT_MAX_PARTICLES,\n  PARTICLE_BYTE_SIZE,\n} from './constants';\n\nlet THREE;\n\n/**\n * Creates and provides performant buffers for mapping particle properties to geometry vertices.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n * @see https://threejs.org/examples/?q=buffe#webgl_buffergeometry_points_interleaved\n * @see https://threejs.org/examples/?q=points#webgl_custom_attributes_points\n */\nexport default class ParticleBuffer {\n  constructor(maxParticles = DEFAULT_MAX_PARTICLES, three) {\n    THREE = three;\n    this.maxParticles = maxParticles;\n\n    this.createInterleavedBuffer().createBufferGeometry();\n  }\n\n  /**\n   * Creates the interleaved buffer that will be used to write data to the GPU.\n   *\n   * @return {ParticleBuffer}\n   */\n  createInterleavedBuffer() {\n    const arrayBuffer = new ArrayBuffer(this.maxParticles * PARTICLE_BYTE_SIZE);\n\n    this.interleavedBuffer = new THREE.InterleavedBuffer(\n      new Float32Array(arrayBuffer),\n      PARTICLE_BYTE_SIZE\n    );\n    // this.interleavedBuffer.usage = THREE.DynamicDrawUsage;\n    \n    return this;\n  }\n\n  /**\n   * Sets the geometry's buffer attributes.\n   *\n   * NOTE Each attribute needs to be set at the right index in the buffer right after the previous\n   * attribute that occupies a set amount of size in the buffer.\n   *\n   * @return {ParticleBufferGeometry}\n   */\n  createBufferGeometry() {\n    this.geometry = new THREE.BufferGeometry();\n\n    const { interleavedBuffer, geometry } = this;\n\n    Object.keys(ATTRIBUTE_TO_SIZE_MAP).reduce((offset, attribute) => {\n      const size = ATTRIBUTE_TO_SIZE_MAP[attribute];\n\n      geometry.setAttribute(\n        attribute,\n        new THREE.InterleavedBufferAttribute(interleavedBuffer, size, offset)\n      );\n\n      return (offset += size);\n    }, 0);\n\n    return this;\n  }\n\n  /**\n   * Gets the publicly accessible interleaved buffer.\n   *\n   * @return {THREE.InterleavedBuffer} buffers - The interleaved buffer\n   */\n  get buffer() {\n    return this.interleavedBuffer;\n  }\n\n  get stride() {\n    return PARTICLE_BYTE_SIZE;\n  }\n}\n", "export const DATA_TEXTURE_SIZE = 256;\n", "\nexport default function potpack(boxes) {\n\n    // calculate total box area and maximum box width\n    let area = 0;\n    let maxWidth = 0;\n\n    for (const box of boxes) {\n        area += box.w * box.h;\n        maxWidth = Math.max(maxWidth, box.w);\n    }\n\n    // sort the boxes for insertion by height, descending\n    boxes.sort((a, b) => b.h - a.h);\n\n    // aim for a squarish resulting container,\n    // slightly adjusted for sub-100% space utilization\n    const startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth);\n\n    // start with a single empty space, unbounded at the bottom\n    const spaces = [{x: 0, y: 0, w: startWidth, h: Infinity}];\n\n    let width = 0;\n    let height = 0;\n\n    for (const box of boxes) {\n        // look through spaces backwards so that we check smaller spaces first\n        for (let i = spaces.length - 1; i >= 0; i--) {\n            const space = spaces[i];\n\n            // look for empty spaces that can accommodate the current box\n            if (box.w > space.w || box.h > space.h) continue;\n\n            // found the space; add the box to its top-left corner\n            // |-------|-------|\n            // |  box  |       |\n            // |_______|       |\n            // |         space |\n            // |_______________|\n            box.x = space.x;\n            box.y = space.y;\n\n            height = Math.max(height, box.y + box.h);\n            width = Math.max(width, box.x + box.w);\n\n            if (box.w === space.w && box.h === space.h) {\n                // space matches the box exactly; remove it\n                const last = spaces.pop();\n                if (i < spaces.length) spaces[i] = last;\n\n            } else if (box.h === space.h) {\n                // space matches the box height; update it accordingly\n                // |-------|---------------|\n                // |  box  | updated space |\n                // |_______|_______________|\n                space.x += box.w;\n                space.w -= box.w;\n\n            } else if (box.w === space.w) {\n                // space matches the box width; update it accordingly\n                // |---------------|\n                // |      box      |\n                // |_______________|\n                // | updated space |\n                // |_______________|\n                space.y += box.h;\n                space.h -= box.h;\n\n            } else {\n                // otherwise the box splits the space into two spaces\n                // |-------|-----------|\n                // |  box  | new space |\n                // |_______|___________|\n                // | updated space     |\n                // |___________________|\n                spaces.push({\n                    x: space.x + box.w,\n                    y: space.y,\n                    w: space.w - box.w,\n                    h: box.h\n                });\n                space.y += box.h;\n                space.h -= box.h;\n            }\n            break;\n        }\n    }\n\n    return {\n        w: width, // container width\n        h: height, // container height\n        fill: (area / (width * height)) || 0 // space utilization\n    };\n}\n", "import {\n  RENDERER_TYPE_GPU_DESKTOP,\n  RENDERER_TYPE_GPU_MOBILE,\n} from '../../../types';\n\nimport { DATA_TEXTURE_SIZE } from './constants';\nimport { __DEV__ } from '../../../../constants';\nimport potpack from 'potpack';\n\n/**\n * Dynamic texture atlas for performant support of systems with multiple emitters and textures.\n *\n */\nexport default class TextureAtlas {\n  constructor(renderer, shouldDebug) {\n    const { three: THREE, type: rendererType } = renderer;\n    const data = new Float32Array(DATA_TEXTURE_SIZE * 4);\n    const ctx = (this.ctx = document.createElement('canvas').getContext('2d'));\n    const { canvas } = ctx;\n\n    this.shouldDebug = shouldDebug;\n    this.rendererType = rendererType;\n    this.indexData = data;\n    this.canvas = canvas;\n    this.entries = [];\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      this.atlasIndex = new THREE.DataTexture(\n        data,\n        DATA_TEXTURE_SIZE,\n        1,\n        THREE.RGBAFormat,\n        THREE.FloatType\n      );\n    }\n\n    canvas.width = canvas.height = DATA_TEXTURE_SIZE;\n\n    if (shouldDebug) {\n      this.debug(canvas, ctx);\n    }\n\n    this.atlasTexture = new THREE.CanvasTexture(canvas);\n    this.atlasTexture.flipY = false;\n\n    renderer.material.uniforms.uTexture.value = this.atlasTexture;\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      renderer.material.uniforms.atlasIndex.value = this.atlasIndex;\n    }\n\n    renderer.material.uniformsNeedUpdate = true;\n  }\n\n  /**\n   * Logs to the console when in dev mode.\n   *\n   */\n  log(...args) {\n    if (!__DEV__) {\n      return;\n    }\n\n    console.log(...args);\n  }\n\n  /**\n   * Debugs the texture atlas by rendering it to a canvas in the DOM.\n   *\n   */\n  debug() {\n    const { canvas, ctx } = this;\n    const halfmax = canvas.width;\n\n    ctx.fillStyle = 'purple';\n    ctx.fillRect(0, 0, halfmax, halfmax);\n    ctx.fillStyle = 'green';\n    ctx.fillRect(0, halfmax, halfmax, halfmax);\n    ctx.fillStyle = 'blue';\n    ctx.fillRect(halfmax, 0, halfmax, halfmax);\n    ctx.fillStyle = 'orange';\n    ctx.fillRect(halfmax, halfmax, halfmax, halfmax);\n    ctx.fillStyle = 'yellow';\n    ctx.font = canvas.width + 'px Verdana';\n    ctx.fillText('top row', 100, 500);\n    ctx.fillStyle = 'pink';\n    ctx.fillText('bottom row', 100, 1500);\n\n    canvas.style.position = 'absolute';\n    canvas.style.width = canvas.style.height = '300px';\n    canvas.style.left = canvas.style.top = '0px';\n    canvas.style.zIndex = 100;\n\n    document.body.appendChild(canvas);\n  }\n\n  /**\n   * Adds a texture to the texture atlas and flags that the atlas needs to be updated.\n   *\n   */\n  addTexture(texture) {\n    this.log('Adding texture to atlas:', texture.uuid);\n\n    texture.textureIndex = this.entries.length;\n    this.entries.push({ texture: texture });\n    this.needsUpdate = true;\n  }\n\n  /**\n   * Updates the texture atlas. Will only rebuild the atlas if all images are loaded.\n   *\n   */\n  update() {\n    if (!this.needsUpdate) {\n      return;\n    }\n\n    const {\n      entries,\n      canvas,\n      indexData,\n      ctx,\n      atlasIndex,\n      atlasTexture,\n      rendererType,\n    } = this;\n\n    for (let i = 0; i < entries.length; i++) {\n      if (!entries[i].texture.image) {\n        return;\n      }\n    }\n\n    this.needsUpdate = false;\n\n    for (let i = 0; i < entries.length; i++) {\n      const e = entries[i];\n      const { texture } = e;\n      const { width, height } = texture.image;\n\n      e.w = width;\n      e.h = height;\n    }\n\n    const stats = potpack(entries);\n\n    this.log('Rebuilt atlas:', stats);\n\n    if (canvas.width != stats.w || canvas.height != stats.h) {\n      canvas.width = stats.w;\n      canvas.height = stats.h;\n    }\n\n    for (let i = 0; i < entries.length; i++) {\n      const e = this.entries[i];\n      const ii = e.texture.textureIndex * 4;\n\n      if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n        indexData[ii + 0] = e.x / canvas.width;\n        indexData[ii + 1] = e.y / canvas.height;\n        indexData[ii + 2] = (e.x + e.w) / canvas.width;\n        indexData[ii + 3] = (e.y + e.h) / canvas.height;\n      }\n\n      if (rendererType === RENDERER_TYPE_GPU_MOBILE) {\n        indexData[ii + 0] = e.x / (canvas.width + 1);\n        indexData[ii + 1] = e.y / (canvas.height + 1);\n        indexData[ii + 2] = (e.x + e.w) / (canvas.width + 1);\n        indexData[ii + 3] = (e.y + e.h) / (canvas.height + 1);\n      }\n\n      ctx.drawImage(e.texture.image, e.x, e.y, e.w, e.h);\n    }\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      atlasIndex.needsUpdate = true;\n    }\n\n    atlasTexture.needsUpdate = true;\n  }\n\n  /**\n   * Disposes of the textures used by the texture atlas.\n   *\n   * @return void\n   */\n  destroy() {\n    const { atlasIndex, atlasTexture, canvas } = this;\n\n    atlasTexture.dispose();\n    atlasIndex && atlasIndex.dispose();\n\n    if (this.shouldDebug) {\n      canvas.remove();\n    }\n\n    this.entries = [];\n  }\n}\n", "export const fragmentShader = () => {\n  return `\n    uniform vec3 baseColor;\n    uniform sampler2D uTexture;\n    uniform sampler2D atlasIndex;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      gl_FragColor = vec4(baseColor * targetColor, targetAlpha);\n\n      vec2 uv = gl_PointCoord;\n      uv = mix(tileRect.xy, tileRect.zw, gl_PointCoord);\n\n      gl_FragColor = gl_FragColor * texture2D(uTexture, uv);\n\n    }\n`;\n};\n", "export const SIZE_ATTENUATION_FACTOR = '600.0';\n", "import { DATA_TEXTURE_SIZE } from '../../common/TextureAtlas/constants';\nimport { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    //atlasIndex is a 256x1 float texture of tile rectangles as r=minx g=miny b=maxx a=maxy\n    uniform sampler2D atlasIndex;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute float texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      tileID = texID;\n      //get the tile rectangle from the atlasIndex texture..\n      tileRect = texture2D(atlasIndex, vec2((tileID + 0.5) / ${DATA_TEXTURE_SIZE}.0, 0.5));\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n", "import { ParticleBuffer, Target, TextureAtlas, UniqueList } from '../common';\nimport { fragmentShader, vertexShader } from './shaders';\n\nimport BaseRenderer from '../../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from '../common/constants';\nimport { Pool } from '../../../core';\nimport { RENDERER_TYPE_GPU_DESKTOP } from '../../types';\n\nlet THREE;\n\n/**\n * GPURenderer for devices that support floating point textures.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class DesktopGPURenderer extends BaseRenderer {\n  constructor(container, three, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU_DESKTOP);\n\n    THREE = this.three = three;\n    const props = { ...DEFAULT_RENDERER_OPTIONS, ...options };\n    const {\n      camera,\n      maxParticles,\n      baseColor,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent,\n      shouldDebugTextureAtlas,\n    } = props;\n    const particleBuffer = new ParticleBuffer(maxParticles, THREE);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        baseColor: { value: new THREE.Color(baseColor) },\n        uTexture: { value: null },\n        atlasIndex: { value: null },\n      },\n      vertexShader: vertexShader(),\n      fragmentShader: fragmentShader(),\n      blending: THREE[blending],\n      depthTest,\n      depthWrite,\n      transparent,\n    });\n\n    this.container = container;\n    this.camera = camera;\n    this.targetPool = new Pool();\n    this.uniqueList = new UniqueList(maxParticles);\n    this.particleBuffer = particleBuffer;\n    this.buffer = particleBuffer.buffer;\n    this.stride = particleBuffer.stride;\n    this.geometry = particleBuffer.geometry;\n    this.material = material;\n    this.points = new THREE.Points(this.geometry, this.material);\n    this.points.frustumCulled = false;\n    this.shouldDebugTextureAtlas = shouldDebugTextureAtlas;\n\n    this.container.add(this.points);\n  }\n\n  onSystemUpdate(system) {\n    super.onSystemUpdate(system);\n\n    this.buffer.needsUpdate = true;\n\n    this.textureAtlas && this.textureAtlas.update();\n  }\n\n  /**\n   * Pools the particle target if it does not exist.\n   * Updates the target and maps particle properties to the point.\n   *\n   * @param {Particle}\n   */\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      particle.target = this.targetPool.get(Target, THREE);\n      this.uniqueList.add(particle.id);\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Maps particle properties to the point if the particle has a target.\n   *\n   * @param {Particle}\n   */\n  onParticleUpdate(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Resets and clears the particle target.\n   *\n   * @param {Particle}\n   */\n  onParticleDead(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    particle.target.reset();\n    this.mapParticleTargetPropsToPoint(particle);\n\n    particle.target = null;\n  }\n\n  /**\n   * Maps all mutable properties from the particle to the target.\n   *\n   * @param {Particle}\n   * @return {DesktopGPURenderer}\n   */\n  updateTarget(particle) {\n    const { position, scale, radius, color, alpha, body, id } = particle;\n    const { r, g, b } = color;\n\n    particle.target.position.copy(position);\n    particle.target.size = scale * radius;\n    particle.target.color.setRGB(r, g, b);\n    particle.target.alpha = alpha;\n    particle.target.index = this.uniqueList.find(id);\n\n    if (body && body instanceof THREE.Sprite) {\n      const { map } = body.material;\n\n      particle.target.texture = map;\n      particle.target.textureIndex = this.getTextureID(\n        map,\n        this.shouldDebugTextureAtlas\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Entry point for mapping particle properties to buffer geometry points.\n   *\n   * @param {Particle} particle - The particle containing the properties to map\n   * @return {DesktopGPURenderer}\n   */\n  mapParticleTargetPropsToPoint(particle) {\n    this.updatePointPosition(particle)\n      .updatePointSize(particle)\n      .updatePointColor(particle)\n      .updatePointAlpha(particle)\n      .updatePointTextureIndex(particle);\n\n    return this;\n  }\n\n  /**\n   * Updates the point's position according to the particle's target position.\n   *\n   * @param {Particle} particle - The particle containing the target position.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointPosition(particle) {\n    const attribute = 'position';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.position.x;\n    buffer.array[target.index * stride + offset + 1] = target.position.y;\n    buffer.array[target.index * stride + offset + 2] = target.position.z;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's size relative to the particle's target scale and radius.\n   *\n   * @param {Particle} particle - The particle containing the target scale.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointSize(particle) {\n    const attribute = 'size';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.size;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's color attribute according with the particle's target color.\n   *\n   * @param {Particle} particle - The particle containing the target color and alpha.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointColor(particle) {\n    const attribute = 'color';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.color.r;\n    buffer.array[target.index * stride + offset + 1] = target.color.g;\n    buffer.array[target.index * stride + offset + 2] = target.color.b;\n\n    return this;\n  }\n\n  /**\n   * Updates the point alpha attribute with the particle's target alpha.\n   *\n   * @param {Particle} particle - The particle containing the target alpha.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointAlpha(particle) {\n    const attribute = 'alpha';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.alpha;\n\n    return this;\n  }\n\n  /**\n   * Updates the point texture attribute with the particle's target texture.\n   *\n   * @param {Particle} particle - The particle containing the target texture.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointTextureIndex(particle) {\n    const attribute = 'texID';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.textureIndex;\n\n    return this;\n  }\n\n  getTextureID(texture, debug) {\n    if (texture.textureIndex === undefined) {\n      if (!this.textureAtlas) {\n        this.textureAtlas = new TextureAtlas(this, debug);\n      }\n\n      this.textureAtlas.addTexture(texture);\n    }\n\n    return texture.textureIndex;\n  }\n\n  /**\n   * Tears down the GPURenderer.\n   *\n   * @return void\n   */\n  destroy() {\n    const { container, points, textureAtlas, uniqueList } = this;\n\n    container.remove(points);\n    uniqueList.destroy();\n    textureAtlas && textureAtlas.destroy();\n  }\n}\n", "export const fragmentShader = () => {\n  return `\n    uniform vec3 baseColor;\n    uniform sampler2D uTexture;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n\n    void main() {\n      gl_FragColor = vec4(baseColor * targetColor, targetAlpha);\n\n      vec2 uv = gl_PointCoord;\n      uv = mix(tileRect.xy, tileRect.zw, gl_PointCoord);\n\n      gl_FragColor = gl_FragColor * texture2D(uTexture, uv);\n    }\n`;\n};\n", "import { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    uniform vec2 atlasDim;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute vec2 texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      vec2 tmin = floor(texID) / atlasDim;\n      vec2 tmax = fract(texID);\n      tileRect = vec4(tmin,tmax);\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n", "import { ParticleBuffer, Target, TextureAtlas, UniqueList } from '../common';\nimport { fragmentShader, vertexShader } from './shaders';\n\nimport BaseRenderer from '../../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from '../common/constants';\nimport { Pool } from '../../../core';\nimport { RENDERER_TYPE_GPU_MOBILE } from '../../types';\n\nlet THREE;\n\n/**\n * GPURenderer for mobile devices that do not support floating point textures.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class MobileGPURenderer extends BaseRenderer {\n  constructor(container, three, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU_MOBILE);\n\n    THREE = this.three = three;\n    const props = { ...DEFAULT_RENDERER_OPTIONS, ...options };\n    const {\n      camera,\n      maxParticles,\n      baseColor,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent,\n      shouldDebugTextureAtlas,\n    } = props;\n    const particleBuffer = new ParticleBuffer(maxParticles, THREE);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        baseColor: { value: new THREE.Color(baseColor) },\n        uTexture: { value: null },\n        FFatlasIndex: { value: null },\n        atlasDim: { value: new THREE.Vector2() },\n      },\n      vertexShader: vertexShader(),\n      fragmentShader: fragmentShader(),\n      blending: THREE[blending],\n      depthTest,\n      depthWrite,\n      transparent,\n    });\n\n    this.camera = camera;\n    this.targetPool = new Pool();\n    this.uniqueList = new UniqueList(maxParticles);\n    this.particleBuffer = particleBuffer;\n    this.buffer = particleBuffer.buffer;\n    this.stride = particleBuffer.stride;\n    this.geometry = particleBuffer.geometry;\n    this.material = material;\n    this.points = new THREE.Points(this.geometry, this.material);\n    this.points.frustumCulled = false;\n    this.shouldDebugTextureAtlas = shouldDebugTextureAtlas;\n\n    container.add(this.points);\n  }\n\n  onSystemUpdate(system) {\n    super.onSystemUpdate(system);\n\n    this.buffer.needsUpdate = true;\n\n    const { textureAtlas } = this;\n\n    if (textureAtlas) {\n      textureAtlas.update();\n      this.material.uniforms.atlasDim.value.set(\n        textureAtlas.atlasTexture.image.width,\n        textureAtlas.atlasTexture.image.height\n      );\n    }\n  }\n\n  /**\n   * Pools the particle target if it does not exist.\n   * Updates the target and maps particle properties to the point.\n   *\n   * @param {Particle}\n   */\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      particle.target = this.targetPool.get(Target, THREE);\n      this.uniqueList.add(particle.id);\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Maps particle properties to the point if the particle has a target.\n   *\n   * @param {Particle}\n   */\n  onParticleUpdate(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Resets and clears the particle target.\n   *\n   * @param {Particle}\n   */\n  onParticleDead(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    particle.target.reset();\n    this.mapParticleTargetPropsToPoint(particle);\n\n    particle.target = null;\n  }\n\n  /**\n   * Maps all mutable properties from the particle to the target.\n   *\n   * @param {Particle}\n   * @return {GPURenderer}\n   */\n  updateTarget(particle) {\n    const { position, scale, radius, color, alpha, body, id } = particle;\n    const { r, g, b } = color;\n\n    particle.target.position.copy(position);\n    particle.target.size = scale * radius;\n    particle.target.color.setRGB(r, g, b);\n    particle.target.alpha = alpha;\n    particle.target.index = this.uniqueList.find(id);\n\n    if (body && body instanceof THREE.Sprite) {\n      const { map } = body.material;\n\n      particle.target.texture = map;\n      particle.target.textureIndex = this.getTextureID(\n        map,\n        this.shouldDebugTextureAtlas\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Entry point for mapping particle properties to buffer geometry points.\n   *\n   * @param {Particle} particle - The particle containing the properties to map\n   * @return {GPURenderer}\n   */\n  mapParticleTargetPropsToPoint(particle) {\n    this.updatePointPosition(particle)\n      .updatePointSize(particle)\n      .updatePointColor(particle)\n      .updatePointAlpha(particle)\n      .updatePointTextureIndex(particle);\n\n    return this;\n  }\n\n  /**\n   * Updates the point's position according to the particle's target position.\n   *\n   * @param {Particle} particle - The particle containing the target position.\n   * @return {GPURenderer}\n   */\n  updatePointPosition(particle) {\n    const attribute = 'position';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.position.x;\n    buffer.array[target.index * stride + offset + 1] = target.position.y;\n    buffer.array[target.index * stride + offset + 2] = target.position.z;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's size relative to the particle's target scale and radius.\n   *\n   * @param {Particle} particle - The particle containing the target scale.\n   * @return {GPURenderer}\n   */\n  updatePointSize(particle) {\n    const attribute = 'size';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.size;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's color attribute according with the particle's target color.\n   *\n   * @param {Particle} particle - The particle containing the target color and alpha.\n   * @return {GPURenderer}\n   */\n  updatePointColor(particle) {\n    const attribute = 'color';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.color.r;\n    buffer.array[target.index * stride + offset + 1] = target.color.g;\n    buffer.array[target.index * stride + offset + 2] = target.color.b;\n\n    return this;\n  }\n\n  /**\n   * Updates the point alpha attribute with the particle's target alpha.\n   *\n   * @param {Particle} particle - The particle containing the target alpha.\n   * @return {GPURenderer}\n   */\n  updatePointAlpha(particle) {\n    const attribute = 'alpha';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.alpha;\n\n    return this;\n  }\n\n  /**\n   * Updates the point texture attribute with the particle's target texture.\n   *\n   * @param {Particle} particle - The particle containing the target texture.\n   * @return {GPURenderer}\n   */\n  updatePointTextureIndex(particle) {\n    const attribute = 'texID';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n    const id = target.index * stride + offset + 0;\n\n    // eslint-disable-next-line\n    if (false) {\n      buffer.array[id] = target.textureIndex;\n    } else {\n      let ti = target.textureIndex * 4;\n      const ta = this.textureAtlas;\n      const ida = ta.indexData;\n      const nx = ida[ti++];\n      const ny = ida[ti++];\n      const px = ida[ti++];\n      const py = ida[ti++];\n\n      buffer.array[id] = ((nx * ta.atlasTexture.image.width) | 0) + px;\n      buffer.array[id + 1] = ((ny * ta.atlasTexture.image.height) | 0) + py;\n    }\n\n    return this;\n  }\n\n  getTextureID(texture, debug) {\n    if (texture.textureIndex === undefined) {\n      if (!this.textureAtlas) {\n        this.textureAtlas = new TextureAtlas(this, debug);\n      }\n\n      this.textureAtlas.addTexture(texture);\n    }\n\n    return texture.textureIndex;\n  }\n\n  destroy() {\n    const { container, points, textureAtlas, uniqueList } = this;\n\n    container.remove(points);\n    uniqueList.destroy();\n    textureAtlas && textureAtlas.destroy();\n  }\n}\n", "import BaseRenderer from '../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from './common/constants';\nimport DesktopGPURenderer from './Desktop';\nimport MobileGPURenderer from './Mobile';\nimport { RENDERER_TYPE_GPU } from '../types';\n\n/**\n * Performant particle renderer that uses THREE.Points to propagate particle (postiion, rgba etc.,) properties to\n * vertices in a ParticleBufferGeometry.\n * Uses a dynamic texture atlas to support systems with mutliple sprites in a performant way.\n *\n * NOTE! This is an experimental renderer and is currently not covered by tests, coverage will be added when the API\n * is more stable. Currently only compatible with sprite/texture based systems. Meshes are not yet supported.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class GPURenderer extends BaseRenderer {\n  constructor(container, THREE, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU);\n\n    const { shouldForceDesktopRenderer, shouldForceMobileRenderer } = options;\n    const args = [container, THREE, options];\n\n    if (shouldForceDesktopRenderer) {\n      return new DesktopGPURenderer(...args);\n    }\n\n    if (shouldForceMobileRenderer) {\n      return new MobileGPURenderer(...args);\n    }\n\n    if (!this.isFloatingPointTextureSupported()) {\n      return new MobileGPURenderer(...args);\n    }\n\n    return new DesktopGPURenderer(...args);\n  }\n\n  isFloatingPointTextureSupported() {\n    const canvas = document.createElement('canvas');\n\n    if (window.WebGL2RenderingContext && canvas.getContext('webgl2')) {\n      // return false here to test the mobile renderer on desktop\n      return true;\n    }\n\n    const gl = canvas.getContext('webgl');\n    const support = !!gl.getExtension('OES_texture_float');\n\n    canvas.remove();\n\n    return support;\n  }\n}\n", "import { System } from './core';\n\nexport * from './behaviour';\nexport * from './debug';\nexport * from './ease';\nexport * from './emitter';\nexport * from './initializer';\nexport * from './math';\nexport * from './renderer';\nexport * from './utils';\nexport * from './zone';\nexport { System, Particle, Pool } from './core';\nexport default System;\n"],
  "mappings": "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",
  "names": ["i", "Symbol", "Symbol", "Symbol", "sample", "isNumber", "BEHAVIOUR_TYPE_ABSTRACT", "BEHAVIOUR_TYPE_ALPHA", "BEHAVIOUR_TYPE_ATTRACTION", "BEHAVIOUR_TYPE_COLLISION", "BEHAVIOUR_TYPE_COLOR", "BEHAVIOUR_TYPE_CROSS_ZONE", "BEHAVIOUR_TYPE_FORCE", "BEHAVIOUR_TYPE_GRAVITY", "BEHAVIOUR_TYPE_RANDOM_DRIFT", "BEHAVIOUR_TYPE_REPULSION", "BEHAVIOUR_TYPE_ROTATE", "BEHAVIOUR_TYPE_SCALE", "BEHAVIOUR_TYPE_SPRING", "INITIALIZER_TYPE_ABSTRACT", "INITIALIZER_TYPE_BODY", "INITIALIZER_TYPE_BODY_SPRITE", "INITIALIZER_TYPE_TEXTURE", "INITIALIZER_TYPE_LIFE", "INITIALIZER_TYPE_MASS", "INITIALIZER_TYPE_POSITION", "INITIALIZER_TYPE_RADIUS", "INITIALIZER_TYPE_VECTOR_VELOCITY", "INITIALIZER_TYPE_POLAR_VELOCITY", "INITIALIZER_TYPE_RADIAL_VELOCITY", "INITIALIZER_TYPE_RATE", "INITIALIZER_TYPES_THAT_REQUIRE_THREE", "INITIALIZER_TYPE_BODY_SPRITE", "INITIALIZER_TYPE_TEXTURE", "ZONE_TYPE_ABSTRACT", "ZONE_TYPE_BOX", "ZONE_TYPE_LINE", "ZONE_TYPE_MESH", "ZONE_TYPE_POINT", "ZONE_TYPE_SCREEN", "ZONE_TYPE_SPHERE", "RENDERER_TYPE_BASE", "RENDERER_TYPE_CUSTOM", "RENDERER_TYPE_SPRITE", "RENDERER_TYPE_MESH", "RENDERER_TYPE_GPU", "RENDERER_TYPE_GPU_MOBILE", "RENDERER_TYPE_GPU_DESKTOP", "PI", "POOL_MAX", "DR", "PI", "MEASURE", "EULER", "__DEV__", "process", "env", "ease", "easeLinear", "value", "easeInQuad", "Math", "pow", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInSine", "cos", "PI", "easeOutSine", "sin", "easeInOutSine", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInBack", "s", "easeOutBack", "easeInOutBack", "setEasingByName", "easeName", "getEasingByName", "name", "DEFAULT_LIFE", "Infinity", "DEFAULT_AGE", "DEFAULT_ENERGY", "DEFAULT_DEAD", "DEFAULT_SLEEP", "DEFAULT_BODY", "DEFAULT_PARENT", "DEFAULT_MASS", "DEFAULT_RADIUS", "DEFAULT_ALPHA", "DEFAULT_SCALE", "DEFAULT_USE_COLOR", "DEFAULT_USE_ALPHA", "DEFAULT_EASING", "easeLinear", "DEFAULT_SYSTEM_DELTA", "SUPPORTED_JSON_INITIALIZER_TYPES", "INITIALIZER_TYPE_POSITION", "INITIALIZER_TYPE_LIFE", "INITIALIZER_TYPE_RADIUS", "INITIALIZER_TYPE_MASS", "INITIALIZER_TYPE_BODY", "INITIALIZER_TYPE_BODY_SPRITE", "INITIALIZER_TYPE_TEXTURE", "INITIALIZER_TYPE_POLAR_VELOCITY", "INITIALIZER_TYPE_RADIAL_VELOCITY", "INITIALIZER_TYPE_VECTOR_VELOCITY", "SUPPORTED_JSON_BEHAVIOUR_TYPES", "BEHAVIOUR_TYPE_ALPHA", "BEHAVIOUR_TYPE_ATTRACTION", "BEHAVIOUR_TYPE_COLOR", "BEHAVIOUR_TYPE_CROSS_ZONE", "BEHAVIOUR_TYPE_FORCE", "BEHAVIOUR_TYPE_GRAVITY", "BEHAVIOUR_TYPE_RANDOM_DRIFT", "BEHAVIOUR_TYPE_REPULSION", "BEHAVIOUR_TYPE_ROTATE", "BEHAVIOUR_TYPE_SCALE", "BEHAVIOUR_TYPE_SPRING", "SUPPORTED_JSON_ZONE_TYPES", "ZONE_TYPE_BOX", "ZONE_TYPE_LINE", "ZONE_TYPE_MESH", "ZONE_TYPE_POINT", "ZONE_TYPE_SPHERE", "o", "getRGB", "color", "rgb", "hex", "Math", "floor", "r", "g", "b", "m", "exec", "min", "parseInt", "charAt", "_id", "_uids", "Map", "getNewId", "id", "functionOrObject", "has", "get", "newId", "set", "_Math", "DEG2RAD", "Math", "PI", "RAD2DEG", "generateUUID", "lut", "i", "toString", "d0", "random", "d1", "d2", "d3", "uuid", "toUpperCase", "clamp", "value", "min", "max", "euclideanModulo", "n", "m", "mapLinear", "x", "a1", "a2", "b1", "b2", "lerp", "y", "t", "smoothstep", "smootherstep", "randInt", "low", "high", "floor", "randFloat", "randFloatSpread", "range", "degToRad", "degrees", "radToDeg", "radians", "isPowerOfTwo", "ceilPowerOfTwo", "pow", "ceil", "log", "LN2", "floorPowerOfTwo", "Quaternion", "x", "y", "z", "w", "_x", "_y", "_z", "_w", "undefined", "Object", "assign", "slerp", "qa", "qb", "qm", "t", "copy", "slerpFlat", "dst", "dstOffset", "src0", "srcOffset0", "src1", "srcOffset1", "x0", "y0", "z0", "w0", "x1", "y1", "z1", "w1", "s", "cos", "dir", "sqrSin", "Number", "EPSILON", "sin", "Math", "sqrt", "len", "atan2", "tDir", "f", "defineProperties", "prototype", "get", "set", "value", "_onChangeCallback", "isQuaternion", "clone", "constructor", "quaternion", "setFromEuler", "euler", "update", "isEuler", "Error", "order", "c1", "c2", "c3", "s1", "s2", "s3", "setFromAxisAngle", "axis", "angle", "halfAngle", "setFromRotationMatrix", "m", "te", "elements", "m11", "m12", "m13", "m21", "m22", "m23", "m31", "m32", "m33", "trace", "setFromUnitVectors", "vFrom", "vTo", "EPS", "r", "dot", "abs", "normalize", "angleTo", "q", "acos", "_Math", "clamp", "rotateTowards", "step", "min", "inverse", "conjugate", "v", "lengthSq", "length", "l", "multiply", "p", "console", "warn", "multiplyQuaternions", "premultiply", "a", "b", "qax", "qay", "qaz", "qaw", "qbx", "qby", "qbz", "qbw", "cosHalfTheta", "sqrSinHalfTheta", "sinHalfTheta", "halfTheta", "ratioA", "ratioB", "equals", "fromArray", "array", "offset", "toArray", "_onChange", "callback", "Vector3", "x", "y", "z", "Object", "assign", "prototype", "isVector3", "set", "setScalar", "scalar", "setX", "setY", "setZ", "setComponent", "index", "value", "Error", "getComponent", "clone", "constructor", "copy", "v", "add", "w", "undefined", "console", "warn", "addVectors", "addScalar", "s", "a", "b", "addScaledVector", "sub", "subVectors", "subScalar", "multiply", "multiplyVectors", "multiplyScalar", "applyEuler", "quaternion", "Quaternion", "euler", "isEuler", "error", "applyQuaternion", "setFromEuler", "applyAxisAngle", "axis", "angle", "setFromAxisAngle", "applyMatrix3", "m", "e", "elements", "applyMatrix4", "q", "qx", "qy", "qz", "qw", "ix", "iy", "iz", "iw", "project", "camera", "matrixWorldInverse", "projectionMatrix", "unproject", "projectionMatrixInverse", "matrixWorld", "transformDirection", "normalize", "divide", "divideScalar", "min", "Math", "max", "clamp", "clampScalar", "minVal", "maxVal", "clampLength", "length", "floor", "ceil", "round", "roundToZero", "negate", "dot", "lengthSq", "sqrt", "manhattanLength", "abs", "setLength", "lerp", "alpha", "lerpVectors", "v1", "v2", "cross", "crossVectors", "ax", "ay", "az", "bx", "by", "bz", "projectOnVector", "vector", "projectOnPlane", "planeNormal", "reflect", "normal", "angleTo", "theta", "acos", "_Math", "distanceTo", "distanceToSquared", "dx", "dy", "dz", "manhattanDistanceTo", "setFromSpherical", "setFromSphericalCoords", "radius", "phi", "sinPhiRadius", "sin", "cos", "setFromCylindrical", "c", "setFromCylindricalCoords", "setFromMatrixPosition", "setFromMatrixScale", "sx", "setFromMatrixColumn", "sy", "sz", "fromArray", "equals", "array", "offset", "toArray", "fromBufferAttribute", "attribute", "getX", "getY", "getZ", "Matrix4", "elements", "arguments", "length", "console", "error", "Object", "assign", "prototype", "isMatrix4", "set", "n11", "n12", "n13", "n14", "n21", "n22", "n23", "n24", "n31", "n32", "n33", "n34", "n41", "n42", "n43", "n44", "te", "identity", "clone", "fromArray", "copy", "m", "me", "copyPosition", "extractBasis", "xAxis", "yAxis", "zAxis", "setFromMatrixColumn", "makeBasis", "x", "y", "z", "extractRotation", "v1", "Vector3", "scaleX", "scaleY", "scaleZ", "makeRotationFromEuler", "euler", "isEuler", "a", "Math", "cos", "b", "sin", "c", "d", "e", "f", "order", "ae", "af", "be", "bf", "ce", "cf", "de", "df", "ac", "ad", "bc", "bd", "makeRotationFromQuaternion", "zero", "one", "q", "compose", "lookAt", "eye", "target", "up", "subVectors", "lengthSq", "normalize", "crossVectors", "abs", "multiply", "n", "undefined", "warn", "multiplyMatrices", "premultiply", "a11", "a12", "a13", "a14", "a21", "a22", "a23", "a24", "a31", "a32", "a33", "a34", "a41", "a42", "a43", "a44", "b11", "b12", "b13", "b14", "b21", "b22", "b23", "b24", "b31", "b32", "b33", "b34", "b41", "b42", "b43", "b44", "multiplyScalar", "s", "applyToBufferAttribute", "attribute", "i", "l", "count", "getX", "getY", "getZ", "applyMatrix4", "setXYZ", "determinant", "transpose", "tmp", "setPosition", "isVector3", "getInverse", "throwOnDegenerate", "t11", "t12", "t13", "t14", "det", "msg", "Error", "detInv", "scale", "v", "getMaxScaleOnAxis", "scaleXSq", "scaleYSq", "scaleZSq", "sqrt", "max", "makeTranslation", "makeRotationX", "theta", "makeRotationY", "makeRotationZ", "makeRotationAxis", "axis", "angle", "t", "tx", "ty", "makeScale", "makeShear", "position", "quaternion", "_x", "_y", "_z", "w", "_w", "x2", "y2", "z2", "xx", "xy", "xz", "yy", "yz", "zz", "wx", "wy", "wz", "sx", "sy", "sz", "decompose", "vector", "matrix", "invSX", "invSY", "invSZ", "setFromRotationMatrix", "makePerspective", "left", "right", "top", "bottom", "near", "far", "makeOrthographic", "h", "p", "equals", "array", "offset", "toArray", "Euler", "x", "y", "z", "order", "_x", "_y", "_z", "_order", "DefaultOrder", "RotationOrders", "Object", "defineProperties", "prototype", "get", "set", "value", "_onChangeCallback", "assign", "isEuler", "clone", "constructor", "copy", "euler", "setFromRotationMatrix", "m", "update", "clamp", "_Math", "te", "elements", "m11", "m12", "m13", "m21", "m22", "m23", "m31", "m32", "m33", "Math", "asin", "abs", "atan2", "console", "warn", "setFromQuaternion", "matrix", "Matrix4", "q", "makeRotationFromQuaternion", "setFromVector3", "v", "reorder", "Quaternion", "newOrder", "setFromEuler", "equals", "fromArray", "array", "undefined", "toArray", "offset", "toVector3", "optionalResult", "Vector3", "_onChange", "callback", "NoBlending", "NormalBlending", "AdditiveBlending", "SubtractiveBlending", "MultiplyBlending", "CustomBlending", "toScreenPos", "vector", "Vector3", "pos", "camera", "canvas", "copy", "project", "x", "Math", "round", "width", "y", "height", "z", "toSpacePos", "dir", "distance", "set", "unproject", "sub", "position", "normalize", "add", "multiplyScalar", "initValue", "value", "defaults", "_value", "undefined", "isArray", "Object", "prototype", "toString", "call", "destroyArray", "array", "length", "destroyObject", "obj", "o", "isUndefined", "id", "arguments", "arg", "setVectorByObj", "target", "pOBJ", "position", "x", "y", "z", "velocity", "acceleration", "copy", "setPrototypeByObj", "proObj", "filters", "key", "hasOwnProperty", "indexOf", "_getValue", "pan", "constructor", "type", "getValue", "uid", "withDefaults", "defaults", "properties", "randomAToB", "a", "b", "INT", "Math", "random", "randomFloating", "center", "f", "randomZone", "display", "degreeTransform", "PI", "toColor16", "getRGB", "num", "toString", "randomColor", "slice", "lerp", "energy", "getNormal", "v", "n", "x", "y", "z", "set", "normalize", "axisRotate", "v0", "k", "tha", "cos", "sin", "p", "dot", "copy", "cross", "scalar", "addValue", "MATH_TYPE_ARRAY_SPAN", "MATH_TYPE_COLOR_SPAN", "MATH_TYPE_BOX", "MATH_TYPE_POLAR_3D", "MATH_TYPE_SPAN", "Span", "constructor", "a", "b", "center", "_isArray", "type", "Util", "isArray", "initValue", "_center", "getValue", "INT", "length", "Math", "random", "MathUtils", "randomAToB", "randomFloating", "createSpan", "c", "undefined", "ArraySpan", "Span", "constructor", "items", "type", "Array", "isArray", "getValue", "sample", "createArraySpan", "import_sample", "ColorSpan", "Span", "constructor", "colors", "type", "shouldRandomize", "Array", "isArray", "getValue", "MathUtils", "randomColor", "sample", "createColorSpan", "console", "warn", "Box", "constructor", "x", "y", "z", "w", "h", "d", "type", "width", "height", "depth", "bottom", "right", "contains", "INTEGRATION_TYPE_EULER", "INTEGRATION_TYPE_RK2", "INTEGRATION_TYPE_RK4", "INTEGRATION_TYPE_VERLET", "eulerIntegration", "particle", "time", "damping", "sleep", "old", "position", "copy", "velocity", "acceleration", "scalar", "mass", "add", "Math", "pow", "DEFAULT_SYSTEM_DELTA", "clear", "integrate", "type", "INTEGRATION_TYPE_EULER", "Vector3D", "Vector3", "clear", "x", "y", "z", "scalar", "s", "addValue", "a", "b", "c", "toString", "eulerFromDir", "vector3D", "euler", "Euler", "setFromVector3", "Polar3D", "constructor", "radius", "theta", "phi", "type", "set", "setRadius", "setPhi", "setTheta", "copy", "p", "toVector3D", "Vector3D", "getX", "getY", "getZ", "Math", "sin", "cos", "normalize", "equals", "v", "clear", "clone", "CORE_TYPE_PARTICLE", "CORE_TYPE_POOL", "CORE_TYPE_SYSTEM", "Particle", "constructor", "properties", "id", "uid", "type", "life", "DEFAULT_LIFE", "age", "DEFAULT_AGE", "energy", "DEFAULT_ENERGY", "dead", "DEFAULT_DEAD", "sleep", "DEFAULT_SLEEP", "body", "DEFAULT_BODY", "parent", "DEFAULT_PARENT", "mass", "DEFAULT_MASS", "radius", "DEFAULT_RADIUS", "alpha", "DEFAULT_ALPHA", "scale", "DEFAULT_SCALE", "useColor", "DEFAULT_USE_COLOR", "useAlpha", "DEFAULT_USE_ALPHA", "easing", "DEFAULT_EASING", "position", "Vector3D", "velocity", "acceleration", "old", "clone", "behaviours", "transform", "color", "r", "g", "b", "rotation", "distanceToCamera", "Util", "setPrototypeByObj", "getDirection", "Math", "atan2", "x", "y", "PI", "reset", "set", "clear", "destroyObject", "removeAllBehaviours", "update", "time", "index", "i", "length", "behaviour", "applyBehaviour", "destroy", "max", "addBehaviour", "push", "initialize", "addBehaviours", "removeBehaviour", "indexOf", "splice", "destroyArray", "Pool", "constructor", "type", "cID", "list", "create", "functionOrObject", "constructorArgs", "canCreateNewObject", "Error", "canInstantiateObject", "canCloneObject", "clone", "object", "getCount", "count", "id", "length", "get", "obj", "args", "p", "puid", "__puid", "PUID", "pop", "expire", "_getList", "push", "destroy", "uid", "EventDispatcher", "constructor", "listeners", "_listeners", "addEventListener", "type", "listener", "removeEventListener", "push", "arr", "i", "l", "length", "splice", "removeAllEventListeners", "dispatchEvent", "eventName", "eventTarget", "ret", "slice", "handler", "hasEventListener", "SYSTEM_UPDATE", "PARTICLE_CREATED", "PARTICLE_UPDATE", "PARTICLE_DEAD", "EMITTER_ADDED", "EMITTER_REMOVED", "EMITTER_DEAD", "SYSTEM_UPDATE_AFTER", "EventDispatcher", "Initializer", "constructor", "type", "INITIALIZER_TYPE_ABSTRACT", "isEnabled", "init", "emitter", "particle", "initialize", "hasBeenInitialized", "reset", "target", "requiresWebGlApi", "fromJSON", "json", "Body", "Initializer", "constructor", "body", "w", "h", "isEnabled", "type", "createArraySpan", "initialize", "particle", "getValue", "width", "height", "fromJSON", "json", "SUPPORTED_MATERIAL_BLENDING_MODES", "AdditiveBlending", "CustomBlending", "MultiplyBlending", "NoBlending", "NormalBlending", "SubtractiveBlending", "DEFAULT_MATERIAL_PROPERTIES", "color", "blending", "fog", "DEFAULT_JSON_MATERIAL_PROPERTIES", "_objectSpread", "DEFAULT_RATE_NUM_PAN", "DEFAULT_RATE_TIME_PAN", "BodySprite", "Initializer", "constructor", "THREE", "texture", "materialProperties", "DEFAULT_MATERIAL_PROPERTIES", "isEnabled", "type", "Sprite", "SpriteMaterial", "TextureLoader", "withDefaults", "load", "map", "material", "_objectSpread", "sprite", "undefined", "error", "Error", "initialize", "particle", "body", "fromJSON", "json", "DEFAULT_JSON_MATERIAL_PROPERTIES", "ensureMappedBlendingMode", "properties", "blending", "SUPPORTED_MATERIAL_BLENDING_MODES", "particleEuler", "Euler", "initialize", "emitter", "particle", "initializers", "i", "length", "init", "bindEmitter", "rotation", "x", "y", "z", "position", "add", "velocity", "acceleration", "applyEuler", "set", "Life", "Initializer", "constructor", "min", "max", "center", "isEnabled", "type", "lifePan", "createSpan", "initialize", "particle", "a", "Infinity", "life", "getValue", "fromJSON", "json", "Mass", "Initializer", "constructor", "min", "max", "center", "isEnabled", "type", "massPan", "createSpan", "initialize", "particle", "mass", "getValue", "fromJSON", "json", "Zone", "constructor", "type", "ZONE_TYPE_ABSTRACT", "vector", "Vector3D", "random", "crossType", "log", "supportsCrossing", "getPosition", "crossing", "particle", "console", "warn", "name", "_bound", "_cross", "_dead", "isBoxZone", "isLineZone", "isMeshZone", "isPointZone", "isScreenZone", "isSphereZone", "BoxZone", "Zone", "constructor", "a", "b", "c", "d", "e", "f", "type", "x", "y", "z", "w", "h", "Util", "isUndefined", "width", "height", "depth", "friction", "max", "isBoxZone", "getPosition", "vector", "MathUtils", "randomAToB", "_dead", "particle", "position", "radius", "dead", "_bound", "velocity", "_static", "axis", "acceleration", "Math", "abs", "_cross", "LineZone", "Zone", "constructor", "x1", "y1", "z1", "x2", "y2", "z2", "type", "Vector3D", "x", "y", "z", "supportsCrossing", "isLineZone", "getPosition", "random", "Math", "vector", "MeshZone", "Zone", "constructor", "bounds", "scale", "ThreeGeometry", "type", "geometry", "supportsCrossing", "Error", "isBufferGeometry", "fromBufferGeometry", "isMeshZone", "getPosition", "vertices", "rVector", "length", "Math", "random", "vector", "x", "y", "z", "PointZone", "Zone", "constructor", "a", "b", "c", "type", "x", "y", "z", "Util", "isUndefined", "supportsCrossing", "isPointZone", "getPosition", "vector", "ScreenZone", "Zone", "constructor", "camera", "renderer", "dis", "dir", "type", "i", "indexOf", "isScreenZone", "_dead", "particle", "pos", "THREEUtil", "toScreenPos", "position", "domElement", "canvas", "y", "radius", "d1", "dead", "height", "d3", "x", "d4", "width", "d2", "_bound", "velocity", "prototype", "getPosition", "vec2", "Vector3D", "Math", "random", "vector", "copy", "toSpacePos", "_cross", "SphereZone", "Zone", "constructor", "centerX", "centerY", "centerZ", "radius", "type", "x", "y", "z", "r", "Util", "isUndefined", "the", "phi", "isSphereZone", "_dead", "particle", "d", "position", "distanceTo", "dead", "_cross", "console", "warn", "name", "prototype", "getPosition", "tha", "random", "Math", "PI", "vector", "sin", "cos", "_bound", "normal", "Vector3D", "v", "k", "copy", "sub", "normalize", "velocity", "dot", "scalar", "Position", "Initializer", "constructor", "type", "reset", "apply", "arguments", "zones", "length", "concat", "Array", "prototype", "slice", "call", "addZone", "fromJSON", "json", "zoneType", "params", "SUPPORTED_JSON_ZONE_TYPES", "includes", "Error", "Zone", "Object", "values", "initialize", "zone", "target", "Math", "random", "getPosition", "position", "x", "vector", "y", "z", "Radius", "Initializer", "constructor", "width", "height", "center", "isEnabled", "type", "radius", "createSpan", "reset", "initialize", "particle", "getValue", "transform", "oldRadius", "fromJSON", "json", "Rate", "Initializer", "constructor", "numPan", "DEFAULT_RATE_NUM_PAN", "timePan", "DEFAULT_RATE_TIME_PAN", "type", "createSpan", "startTime", "nextTime", "init", "getValue", "time", "b", "fromJSON", "json", "particlesMin", "particlesMax", "perSecondMin", "perSecondMax", "Span", "Texture", "Initializer", "constructor", "THREE", "loadedTexture", "materialProperties", "DEFAULT_MATERIAL_PROPERTIES", "isEnabled", "type", "Sprite", "SpriteMaterial", "withDefaults", "texture", "material", "_objectSpread", "map", "sprite", "initialize", "particle", "body", "fromJSON", "json", "DEFAULT_JSON_MATERIAL_PROPERTIES", "ensureMappedBlendingMode", "properties", "blending", "SUPPORTED_MATERIAL_BLENDING_MODES", "Velocity", "Initializer", "constructor", "type", "isEnabled", "dirVec", "Vector3D", "normalize", "vr", "MEASURE", "prototype", "initialize", "tha", "normal", "v", "particle", "Math", "random", "_useV", "copy", "dir", "scalar", "radiusPan", "getValue", "MathUtils", "getNormal", "applyAxisAngle", "PI", "velocity", "PolarVelocity", "Velocity", "constructor", "polar3d", "theta", "isEnabled", "type", "tha", "DR", "dirVec", "toVector3D", "_useV", "fromJSON", "json", "polarRadius", "polarTheta", "polarPhi", "velocityTheta", "Polar3D", "RadialVelocity", "Velocity", "constructor", "radius", "vector3d", "theta", "isEnabled", "type", "radiusPan", "createSpan", "dir", "clone", "normalize", "tha", "DR", "_useV", "fromJSON", "json", "x", "y", "z", "Vector3D", "VectorVelocity", "Velocity", "constructor", "vector3d", "theta", "isEnabled", "type", "radiusPan", "createSpan", "dir", "clone", "tha", "DR", "_useV", "fromJSON", "json", "x", "y", "z", "Vector3D", "DEFAULT_DAMPING", "DEFAULT_BIND_EMITTER", "DEFAULT_EMITTER_RATE", "Rate", "DEFAULT_BIND_EMITTER_EVENT", "DEFAULT_EMITTER_INDEX", "undefined", "EMITTER_TYPE_EMITTER", "EMITTER_TYPE_FOLLOW", "Emitter", "Particle", "constructor", "properties", "type", "particles", "initializers", "behaviours", "emitterBehaviours", "currentEmitTime", "totalEmitTimes", "damping", "DEFAULT_DAMPING", "bindEmitter", "DEFAULT_BIND_EMITTER", "bindEmitterEvent", "DEFAULT_BIND_EMITTER_EVENT", "rate", "DEFAULT_EMITTER_RATE", "isEmitting", "id", "uid", "cID", "name", "index", "DEFAULT_EMITTER_INDEX", "eventDispatcher", "EventDispatcher", "dispatch", "event", "target", "dispatchEvent", "setRate", "setPosition", "newPosition", "position", "x", "y", "z", "set", "setRotation", "newRotation", "rotation", "emit", "Infinity", "life", "isNumber", "init", "experimental_emit", "setTotalEmitTimes", "setLife", "stopEmit", "removeAllParticles", "i", "length", "dead", "addInitializer", "initializer", "push", "addInitializers", "setInitializers", "removeInitializer", "indexOf", "splice", "removeAllInitializers", "Util", "destroyArray", "addBehaviour", "behaviour", "addBehaviours", "setBehaviours", "removeBehaviour", "removeAllBehaviours", "addEmitterBehaviour", "initialize", "addEmitterBehaviours", "setEmitterBehaviours", "removeEmitterBehaviour", "removeAllEmitterBehaviours", "addOnEmitterDeadEventListener", "onEmitterDead", "addEventListener", "EMITTER_DEAD", "createParticle", "particle", "parent", "pool", "get", "setupParticle", "PARTICLE_CREATED", "InitializerUtil", "update", "time", "age", "destroy", "generate", "integrate", "PARTICLE_DEAD", "expire", "reset", "updateEmitterBehaviours", "sleep", "applyBehaviour", "integrationType", "INTEGRATION_TYPE_EULER", "PARTICLE_UPDATE", "getValue", "energy", "removeEmitter", "DEFAULT_LIFE", "Infinity", "DEFAULT_ATTRACITON_RADIUS", "DEFAULT_ATTRACTION_FORCE_SCALAR", "DEFAULT_BEHAVIOUR_EASING", "easeLinear", "DEFAULT_RANDOM_DRIFT_DELAY", "PARTICLE_ALPHA_THRESHOLD", "PARTICLE_LENGTH_SQ_THRESHOLD", "DEFAULT_CROSS_TYPE", "import_isNumber", "Behaviour", "constructor", "life", "Infinity", "easing", "DEFAULT_BEHAVIOUR_EASING", "type", "BEHAVIOUR_TYPE_ABSTRACT", "isEnabled", "id", "uid", "age", "energy", "dead", "reset", "DEFAULT_LIFE", "_life", "isNumber", "normalizeForce", "force", "scalar", "MEASURE", "normalizeValue", "value", "initialize", "particle", "applyBehaviour", "target", "time", "index", "mutate", "energize", "scale", "Math", "max", "destroy", "fromJSON", "json", "Alpha", "Behaviour", "constructor", "alphaA", "alphaB", "life", "easing", "isEnabled", "type", "reset", "same", "_same", "undefined", "createSpan", "initialize", "particle", "useAlpha", "transform", "getValue", "mutate", "time", "index", "energize", "alpha", "MathUtils", "lerp", "energy", "PARTICLE_ALPHA_THRESHOLD", "fromJSON", "json", "getEasingByName", "Attraction", "Behaviour", "constructor", "targetPosition", "Vector3D", "force", "DEFAULT_ATTRACTION_FORCE_SCALAR", "radius", "DEFAULT_ATTRACITON_RADIUS", "life", "DEFAULT_LIFE", "easing", "DEFAULT_BEHAVIOUR_EASING", "isEnabled", "type", "normalizeValue", "radiusSq", "attractionForce", "lengthSq", "reset", "mutate", "particle", "time", "index", "energize", "copy", "sub", "position", "PARTICLE_LENGTH_SQ_THRESHOLD", "normalize", "scalar", "acceleration", "add", "fromJSON", "json", "x", "y", "z", "getEasingByName", "Collision", "Behaviour", "constructor", "emitter", "useMass", "onCollide", "life", "easing", "isEnabled", "type", "reset", "particles", "delta", "Vector3D", "mutate", "particle", "time", "index", "slice", "otherParticle", "lengthSq", "overlap", "distance", "averageMass1", "averageMass2", "i", "length", "copy", "position", "sub", "radius", "Math", "sqrt", "_getAverageMass", "add", "clone", "normalize", "scalar", "particleA", "particleB", "mass", "fromJSON", "json", "Color", "Behaviour", "constructor", "colorA", "colorB", "life", "easing", "isEnabled", "type", "reset", "same", "_same", "undefined", "createColorSpan", "initialize", "particle", "transform", "ColorUtil", "getRGB", "getValue", "useColor", "mutate", "time", "index", "energize", "color", "r", "MathUtils", "lerp", "energy", "g", "b", "fromJSON", "json", "getEasingByName", "CrossZone", "Behaviour", "constructor", "zone", "crossType", "life", "easing", "isEnabled", "type", "reset", "DEFAULT_CROSS_TYPE", "mutate", "particle", "time", "index", "energize", "crossing", "call", "fromJSON", "json", "zoneType", "zoneParams", "Zone", "Object", "values", "getEasingByName", "Force", "Behaviour", "constructor", "fx", "fy", "fz", "life", "easing", "isEnabled", "type", "reset", "force", "normalizeForce", "Vector3D", "id", "Math", "random", "mutate", "particle", "time", "index", "energize", "acceleration", "add", "fromJSON", "json", "getEasingByName", "Gravity", "Force", "constructor", "gravity", "life", "easing", "isEnabled", "type", "fromJSON", "json", "getEasingByName", "RandomDrift", "Behaviour", "constructor", "driftX", "driftY", "driftZ", "delay", "DEFAULT_RANDOM_DRIFT_DELAY", "life", "easing", "isEnabled", "type", "reset", "time", "randomForce", "normalizeForce", "Vector3D", "delayPan", "createSpan", "mutate", "particle", "index", "energize", "getValue", "ax", "MathUtils", "randomAToB", "x", "ay", "y", "az", "z", "acceleration", "addValue", "fromJSON", "json", "getEasingByName", "Repulsion", "Attraction", "constructor", "targetPosition", "force", "radius", "life", "easing", "isEnabled", "type", "reset", "fromJSON", "json", "x", "y", "z", "Vector3D", "getEasingByName", "Rotate", "Behaviour", "constructor", "x", "y", "z", "life", "easing", "isEnabled", "type", "reset", "rotationType", "_rotationType", "undefined", "createSpan", "DR", "initialize", "particle", "_setRotation", "rotation", "transform", "fR", "Vector3D", "tR", "addR", "getValue", "particleRotation", "value", "MathUtils", "randomAToB", "PI", "set", "copy", "mutate", "time", "index", "energize", "eulerFromDir", "velocity", "lerp", "energy", "add", "fromJSON", "json", "getEasingByName", "Scale", "Behaviour", "constructor", "scaleA", "scaleB", "life", "easing", "isEnabled", "type", "reset", "same", "_same", "undefined", "createSpan", "initialize", "particle", "transform", "getValue", "oldRadius", "radius", "mutate", "time", "index", "energize", "scale", "MathUtils", "lerp", "energy", "fromJSON", "json", "getEasingByName", "Spring", "Behaviour", "constructor", "x", "y", "z", "spring", "friction", "life", "easing", "isEnabled", "type", "reset", "pos", "Vector3D", "set", "mutate", "particle", "time", "index", "energize", "velocity", "position", "fromJSON", "json", "getEasingByName", "makeRate", "json", "Rate", "fromJSON", "makeInitializers", "items", "THREE", "initializers", "forEach", "data", "type", "properties", "SUPPORTED_JSON_INITIALIZER_TYPES", "includes", "Error", "INITIALIZER_TYPES_THAT_REQUIRE_THREE", "push", "Initializer", "makeBehaviours", "behaviours", "SUPPORTED_JSON_BEHAVIOUR_TYPES", "Behaviour", "System", "Emitter", "preParticles", "POOL_MAX", "integrationType", "EULER", "emitters", "system", "emitter", "rate", "rotation", "emitterBehaviours", "position", "totalEmitTimes", "Infinity", "life", "setRate", "setRotation", "setInitializers", "setBehaviours", "setEmitterBehaviours", "setPosition", "emit", "addEmitter", "DEFAULT_OPTIONS", "shouldAutoEmit", "makeRate", "json", "Rate", "fromJSON", "makeInitializers", "items", "THREE", "Promise", "resolve", "reject", "length", "numberOfInitializers", "madeInitializers", "doNotRequireTextureLoading", "filter", "properties", "texture", "doRequireTextureLoading", "forEach", "data", "type", "SUPPORTED_JSON_INITIALIZER_TYPES", "includes", "INITIALIZER_TYPES_THAT_REQUIRE_THREE", "push", "Initializer", "textureLoader", "TextureLoader", "load", "loadedTexture", "TextureInitializer", "_objectSpread", "undefined", "makeBehaviours", "numberOfBehaviours", "madeBehaviours", "SUPPORTED_JSON_BEHAVIOUR_TYPES", "Behaviour", "makeEmitters", "emitters", "Emitter", "madeEmitters", "numberOfEmitters", "emitter", "rate", "rotation", "initializers", "behaviours", "emitterBehaviours", "position", "totalEmitTimes", "Infinity", "life", "setRate", "setRotation", "setPosition", "then", "setInitializers", "setBehaviours", "madeEmitterBehaviours", "setEmitterBehaviours", "emit", "setTotalEmitTimes", "setLife", "catch", "System", "options", "preParticles", "POOL_MAX", "integrationType", "EULER", "system", "madeEmitter", "addEmitter", "System", "constructor", "preParticles", "POOL_MAX", "integrationType", "INTEGRATION_TYPE_EULER", "type", "canUpdate", "emitters", "renderers", "pool", "Pool", "eventDispatcher", "EventDispatcher", "fromJSON", "json", "THREE", "Emitter", "fromJSONAsync", "options", "dispatch", "event", "target", "dispatchEvent", "addRenderer", "renderer", "push", "init", "removeRenderer", "splice", "indexOf", "remove", "addEmitter", "emitter", "index", "length", "parent", "EMITTER_ADDED", "removeEmitter", "undefined", "EMITTER_REMOVED", "emit", "onStart", "onUpdate", "onEnd", "addEventListener", "SYSTEM_UPDATE", "map", "life", "Infinity", "experimental_emit", "Promise", "resolve", "addOnEmitterDeadEventListener", "all", "e", "console", "warn", "update", "delta", "DEFAULT_SYSTEM_DELTA", "d", "i", "isEmitting", "SYSTEM_UPDATE_AFTER", "getCount", "total", "particles", "destroy", "r", "DEFAULT_SIZE", "DEFAULT_POSITION", "addEventListener", "system", "onSystemUpdated", "eventDispatcher", "drawZone", "THREE", "container", "zone", "color", "wireframe", "width", "size", "height", "depth", "radius", "x", "DEFAULT_POSITION", "y", "z", "geometry", "isPointZone", "SphereGeometry", "isLineZone", "isBoxZone", "BoxGeometry", "isSphereZone", "isMeshZone", "clone", "material", "MeshBasicMaterial", "mesh", "Mesh", "add", "position", "set", "drawEmitter", "emitter", "OctahedronGeometry", "copy", "rotation", "renderInfo", "getCreatedNumber", "type", "pool", "renderer", "renderers", "cID", "getEmitterPos", "e", "emitters", "Math", "round", "p", "style", "addInfo", "str", "_infoType", "length", "name", "getCount", "_infoCon", "innerHTML", "self", "document", "createElement", "cssText", "join", "bg", "parentNode", "body", "appendChild", "once", "window", "console", "trace", "arg", "Array", "prototype", "slice", "call", "arguments", "s1", "indexOf", "n", "parseInt", "shift", "apply", "unshift", "FollowEmitter", "Emitter", "constructor", "mouseTarget", "ease", "pObj", "type", "Util", "initValue", "window", "_allowEmitting", "initEventHandler", "self", "mousemoveHandler", "e", "mousemove", "call", "mousedownHandler", "mousedown", "mouseupHandler", "mouseup", "addEventListener", "emit", "stopEmit", "setCameraAndCanvas", "camera", "canvas", "layerX", "position", "x", "y", "layerY", "offsetX", "offsetY", "copy", "THREEUtil", "toSpacePos", "destroy", "removeEventListener", "BaseRenderer", "constructor", "type", "RENDERER_TYPE_BASE", "init", "system", "self", "eventDispatcher", "addEventListener", "SYSTEM_UPDATE", "onSystemUpdate", "call", "PARTICLE_CREATED", "particle", "onParticleCreated", "PARTICLE_UPDATE", "onParticleUpdate", "PARTICLE_DEAD", "onParticleDead", "logRendererType", "remove", "__DEV__", "console", "log", "CustomRenderer", "BaseRenderer", "constructor", "type", "targetPool", "Pool", "materialPool", "onSystemUpdate", "onParticleCreated", "particle", "onParticleUpdate", "onParticleDead", "MeshRenderer", "BaseRenderer", "constructor", "container", "THREE", "type", "_targetPool", "Pool", "_materialPool", "_body", "Mesh", "BoxGeometry", "MeshLambertMaterial", "color", "isThreeSprite", "particle", "target", "isSprite", "onSystemUpdate", "onParticleCreated", "body", "get", "useAlpha", "useColor", "material", "__puid", "PUID", "id", "position", "copy", "add", "onParticleUpdate", "rotation", "set", "x", "y", "z", "scale", "opacity", "alpha", "transparent", "onParticleDead", "expire", "remove", "SpriteRenderer", "MeshRenderer", "constructor", "container", "THREE", "type", "_body", "Sprite", "SpriteMaterial", "color", "scale", "particle", "target", "set", "radius", "DEFAULT_MAX_PARTICLES", "VECTOR_3_SIZE", "length", "RGBA_SIZE", "FLOAT_BYTE_SIZE", "POSITION_BYTE_SIZE", "SIZE_BYTE_SIZE", "RGBA_BYTE_SIZE", "ALL_BYTE_SIZES", "PARTICLE_BYTE_SIZE", "reduce", "cur", "acc", "POSITION_ATTRIBUTE_BUFFER_SIZE", "SIZE_ATTRIBUTE_BUFFER_SIZE", "RGBA_ATTRIBUTE_BUFFER_SIZE", "ALPHA_ATTRIBUTE_BUFFER_SIZE", "TEXID_ATTRIBUTE_BUFFER_SIZE", "ATTRIBUTE_TO_SIZE_MAP", "position", "size", "color", "alpha", "texID", "PARTICLE_STRIDE", "DEFAULT_RENDERER_OPTIONS", "blending", "baseColor", "depthTest", "depthWrite", "transparent", "maxParticles", "DEFAULT_MAX_PARTICLES", "shouldDebugTextureAtlas", "shouldForceDesktopRenderer", "shouldForceMobileRenderer", "Target", "constructor", "THREE", "position", "Vector3", "size", "color", "Color", "alpha", "texture", "index", "reset", "set", "setRGB", "UniqueList", "constructor", "max", "Infinity", "count", "_items", "add", "item", "undefined", "find", "destroy", "THREE", "ParticleBuffer", "constructor", "maxParticles", "DEFAULT_MAX_PARTICLES", "three", "createInterleavedBuffer", "createBufferGeometry", "arrayBuffer", "ArrayBuffer", "PARTICLE_BYTE_SIZE", "interleavedBuffer", "InterleavedBuffer", "Float32Array", "geometry", "BufferGeometry", "Object", "keys", "ATTRIBUTE_TO_SIZE_MAP", "reduce", "offset", "attribute", "size", "setAttribute", "InterleavedBufferAttribute", "buffer", "stride", "DATA_TEXTURE_SIZE", "TextureAtlas", "constructor", "renderer", "shouldDebug", "three", "THREE", "type", "rendererType", "data", "Float32Array", "DATA_TEXTURE_SIZE", "ctx", "document", "createElement", "getContext", "canvas", "indexData", "entries", "RENDERER_TYPE_GPU_DESKTOP", "atlasIndex", "DataTexture", "RGBAFormat", "FloatType", "width", "height", "debug", "atlasTexture", "CanvasTexture", "flipY", "material", "uniforms", "uTexture", "value", "uniformsNeedUpdate", "log", "args", "__DEV__", "console", "halfmax", "fillStyle", "fillRect", "font", "fillText", "style", "position", "left", "top", "zIndex", "body", "appendChild", "addTexture", "texture", "uuid", "textureIndex", "length", "push", "needsUpdate", "update", "i", "image", "e", "w", "h", "stats", "potpack", "ii", "x", "y", "RENDERER_TYPE_GPU_MOBILE", "drawImage", "destroy", "dispose", "remove", "fragmentShader", "SIZE_ATTENUATION_FACTOR", "vertexShader", "DATA_TEXTURE_SIZE", "SIZE_ATTENUATION_FACTOR", "THREE", "DesktopGPURenderer", "BaseRenderer", "constructor", "container", "three", "options", "DEFAULT_RENDERER_OPTIONS", "RENDERER_TYPE_GPU_DESKTOP", "props", "_objectSpread", "camera", "maxParticles", "baseColor", "blending", "depthTest", "depthWrite", "transparent", "shouldDebugTextureAtlas", "particleBuffer", "ParticleBuffer", "material", "ShaderMaterial", "uniforms", "value", "Color", "uTexture", "atlasIndex", "vertexShader", "fragmentShader", "targetPool", "Pool", "uniqueList", "UniqueList", "buffer", "stride", "geometry", "points", "Points", "frustumCulled", "add", "onSystemUpdate", "system", "needsUpdate", "textureAtlas", "update", "onParticleCreated", "particle", "target", "get", "Target", "id", "updateTarget", "mapParticleTargetPropsToPoint", "onParticleUpdate", "onParticleDead", "reset", "position", "scale", "radius", "color", "alpha", "body", "r", "g", "b", "copy", "size", "setRGB", "index", "find", "Sprite", "map", "texture", "textureIndex", "getTextureID", "updatePointPosition", "updatePointSize", "updatePointColor", "updatePointAlpha", "updatePointTextureIndex", "attribute", "offset", "attributes", "array", "x", "y", "z", "debug", "undefined", "TextureAtlas", "addTexture", "destroy", "remove", "fragmentShader", "vertexShader", "SIZE_ATTENUATION_FACTOR", "THREE", "MobileGPURenderer", "BaseRenderer", "constructor", "container", "three", "options", "DEFAULT_RENDERER_OPTIONS", "RENDERER_TYPE_GPU_MOBILE", "props", "_objectSpread", "camera", "maxParticles", "baseColor", "blending", "depthTest", "depthWrite", "transparent", "shouldDebugTextureAtlas", "particleBuffer", "ParticleBuffer", "material", "ShaderMaterial", "uniforms", "value", "Color", "uTexture", "FFatlasIndex", "atlasDim", "Vector2", "vertexShader", "fragmentShader", "targetPool", "Pool", "uniqueList", "UniqueList", "buffer", "stride", "geometry", "points", "Points", "frustumCulled", "add", "onSystemUpdate", "system", "needsUpdate", "textureAtlas", "update", "set", "atlasTexture", "image", "width", "height", "onParticleCreated", "particle", "target", "get", "Target", "id", "updateTarget", "mapParticleTargetPropsToPoint", "onParticleUpdate", "onParticleDead", "reset", "position", "scale", "radius", "color", "alpha", "body", "r", "g", "b", "copy", "size", "setRGB", "index", "find", "Sprite", "map", "texture", "textureIndex", "getTextureID", "updatePointPosition", "updatePointSize", "updatePointColor", "updatePointAlpha", "updatePointTextureIndex", "attribute", "offset", "attributes", "array", "x", "y", "z", "ti", "ta", "ida", "indexData", "nx", "ny", "px", "py", "debug", "undefined", "TextureAtlas", "addTexture", "destroy", "remove", "GPURenderer", "BaseRenderer", "constructor", "container", "THREE", "options", "DEFAULT_RENDERER_OPTIONS", "RENDERER_TYPE_GPU", "shouldForceDesktopRenderer", "shouldForceMobileRenderer", "args", "DesktopGPURenderer", "MobileGPURenderer", "isFloatingPointTextureSupported", "canvas", "document", "createElement", "window", "WebGL2RenderingContext", "getContext", "gl", "support", "getExtension", "remove", "System"]
}
